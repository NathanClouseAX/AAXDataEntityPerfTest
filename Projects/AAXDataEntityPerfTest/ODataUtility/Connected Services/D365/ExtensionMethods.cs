//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 1/3/2021 8:21:45 PM
namespace Microsoft.Dynamics.DataEntities
{
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleState> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="requestLifecycleStateId">The value of requestLifecycleStateId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleState> _source,
            string dataAreaId, 
            string requestLifecycleStateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RequestLifecycleStateId", requestLifecycleStateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EducationDiscipline as global::Microsoft.Dynamics.DataEntities.EducationDisciplineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EducationDisciplineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EducationDiscipline> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EducationDisciplineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EducationDiscipline as global::Microsoft.Dynamics.DataEntities.EducationDisciplineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="educationDiscipline">The value of educationDiscipline</param>
        public static global::Microsoft.Dynamics.DataEntities.EducationDisciplineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EducationDiscipline> _source,
            string educationDiscipline)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EducationDiscipline", educationDiscipline }
            };
            return new global::Microsoft.Dynamics.DataEntities.EducationDisciplineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerTaxCode as global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerTaxCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerTaxCode as global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="taxCodeId">The value of taxCodeId</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerTaxCode> _source,
            string personnelNumber, 
            string taxCodeId, 
            string countryRegionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "TaxCodeId", taxCodeId }, 
                { "CountryRegionId", countryRegionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionEarning as global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionEarningSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionEarningSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionEarning> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionEarningSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionEarning as global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionEarningSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="statementSectionId">The value of statementSectionId</param>
        /// <param name="earningCodeGroupId">The value of earningCodeGroupId</param>
        /// <param name="earningCodeId">The value of earningCodeId</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionEarningSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionEarning> _source,
            string statementSectionId, 
            string earningCodeGroupId, 
            string earningCodeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StatementSectionId", statementSectionId }, 
                { "EarningCodeGroupId", earningCodeGroupId }, 
                { "EarningCodeId", earningCodeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionEarningSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="faultTypeId">The value of faultTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultType> _source,
            string dataAreaId, 
            string faultTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FaultTypeId", faultTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyProduct as global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyProduct as global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workPolicyName">The value of workPolicyName</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyProduct> _source,
            string dataAreaId, 
            string workPolicyName, 
            string itemNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkPolicyName", workPolicyName }, 
                { "ItemNumber", itemNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTypeEducationProfile as global::Microsoft.Dynamics.DataEntities.CourseTypeEducationProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeEducationProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTypeEducationProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeEducationProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTypeEducationProfile as global::Microsoft.Dynamics.DataEntities.CourseTypeEducationProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="courseTypeId">The value of courseTypeId</param>
        /// <param name="educationId">The value of educationId</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeEducationProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTypeEducationProfile> _source,
            string courseTypeId, 
            string educationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CourseTypeId", courseTypeId }, 
                { "EducationId", educationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeEducationProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccrualScheme as global::Microsoft.Dynamics.DataEntities.AccrualSchemeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AccrualSchemeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccrualScheme> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AccrualSchemeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccrualScheme as global::Microsoft.Dynamics.DataEntities.AccrualSchemeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="accrualIdentification">The value of accrualIdentification</param>
        public static global::Microsoft.Dynamics.DataEntities.AccrualSchemeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccrualScheme> _source,
            string dataAreaId, 
            string accrualIdentification)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AccrualIdentification", accrualIdentification }
            };
            return new global::Microsoft.Dynamics.DataEntities.AccrualSchemeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxPostingGroup as global::Microsoft.Dynamics.DataEntities.TaxPostingGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxPostingGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxPostingGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxPostingGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxPostingGroup as global::Microsoft.Dynamics.DataEntities.TaxPostingGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxPostingGroupCode">The value of taxPostingGroupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxPostingGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxPostingGroup> _source,
            string dataAreaId, 
            string taxPostingGroupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxPostingGroupCode", taxPostingGroupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxPostingGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsLine as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsLine as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="consumptionSiteId">The value of consumptionSiteId</param>
        /// <param name="consumptionWarehouseId">The value of consumptionWarehouseId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsLine> _source,
            string dataAreaId, 
            string engineeringChangeOrderNumber, 
            decimal engineeringChangeOrderProductLineNumber, 
            string itemNumber, 
            string productionSiteId, 
            string consumptionSiteId, 
            string consumptionWarehouseId, 
            string productStyleId, 
            string productSizeId, 
            string productColorId, 
            string productConfigurationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }, 
                { "ItemNumber", itemNumber }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ConsumptionSiteId", consumptionSiteId }, 
                { "ConsumptionWarehouseId", consumptionWarehouseId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AggregatedCostStatementEntry as global::Microsoft.Dynamics.DataEntities.AggregatedCostStatementEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AggregatedCostStatementEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AggregatedCostStatementEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AggregatedCostStatementEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AggregatedCostStatementEntry as global::Microsoft.Dynamics.DataEntities.AggregatedCostStatementEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="costStatementType">The value of costStatementType</param>
        /// <param name="accountingDate">The value of accountingDate</param>
        /// <param name="levelOneCostStatementLineCategoryName">The value of levelOneCostStatementLineCategoryName</param>
        /// <param name="levelTwoCostStatementLineCategoryName">The value of levelTwoCostStatementLineCategoryName</param>
        /// <param name="levelThreeCostStatementLineCategoryName">The value of levelThreeCostStatementLineCategoryName</param>
        /// <param name="operationalSiteId">The value of operationalSiteId</param>
        public static global::Microsoft.Dynamics.DataEntities.AggregatedCostStatementEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AggregatedCostStatementEntry> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementType> costStatementType, 
            global::System.DateTimeOffset accountingDate, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementLineCategoryLevel1> levelOneCostStatementLineCategoryName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementLineCategoryLevel2> levelTwoCostStatementLineCategoryName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementLineCategoryLevel3> levelThreeCostStatementLineCategoryName, 
            string operationalSiteId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CostStatementType", costStatementType }, 
                { "AccountingDate", accountingDate }, 
                { "LevelOneCostStatementLineCategoryName", levelOneCostStatementLineCategoryName }, 
                { "LevelTwoCostStatementLineCategoryName", levelTwoCostStatementLineCategoryName }, 
                { "LevelThreeCostStatementLineCategoryName", levelThreeCostStatementLineCategoryName }, 
                { "OperationalSiteId", operationalSiteId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AggregatedCostStatementEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Goal as global::Microsoft.Dynamics.DataEntities.GoalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.GoalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Goal> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.GoalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Goal as global::Microsoft.Dynamics.DataEntities.GoalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="goal">The value of goal</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="goalHeadingId">The value of goalHeadingId</param>
        public static global::Microsoft.Dynamics.DataEntities.GoalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Goal> _source,
            string goal, 
            string personnelNumber, 
            string goalHeadingId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Goal", goal }, 
                { "PersonnelNumber", personnelNumber }, 
                { "GoalHeadingId", goalHeadingId }
            };
            return new global::Microsoft.Dynamics.DataEntities.GoalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonCertificate as global::Microsoft.Dynamics.DataEntities.PersonCertificateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonCertificateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonCertificate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonCertificateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonCertificate as global::Microsoft.Dynamics.DataEntities.PersonCertificateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="certificateTypeId">The value of certificateTypeId</param>
        /// <param name="startDate">The value of startDate</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonCertificateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonCertificate> _source,
            string partyNumber, 
            string certificateTypeId, 
            global::System.DateTimeOffset startDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "CertificateTypeId", certificateTypeId }, 
                { "StartDate", startDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonCertificateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchOrderByProduct as global::Microsoft.Dynamics.DataEntities.BatchOrderByProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchOrderByProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchOrderByProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BatchOrderByProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchOrderByProduct as global::Microsoft.Dynamics.DataEntities.BatchOrderByProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="demandProductionOrderNumber">The value of demandProductionOrderNumber</param>
        /// <param name="demandProductionOrderLineNumber">The value of demandProductionOrderLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchOrderByProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchOrderByProduct> _source,
            string dataAreaId, 
            string demandProductionOrderNumber, 
            string demandProductionOrderLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DemandProductionOrderNumber", demandProductionOrderNumber }, 
                { "DemandProductionOrderLineNumber", demandProductionOrderLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BatchOrderByProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobType> _source,
            string dataAreaId, 
            string jobTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JobTypeId", jobTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitAccountingRule as global::Microsoft.Dynamics.DataEntities.BenefitAccountingRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitAccountingRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitAccountingRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitAccountingRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitAccountingRule as global::Microsoft.Dynamics.DataEntities.BenefitAccountingRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="planId">The value of planId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="payrollType">The value of payrollType</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitAccountingRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitAccountingRule> _source,
            string planId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.PayrollType> payrollType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PlanId", planId }, 
                { "LegalEntityId", legalEntityId }, 
                { "PayrollType", payrollType }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitAccountingRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariant as global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariant> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariant as global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productVariantNumber">The value of productVariantNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariant> _source,
            string dataAreaId, 
            string productVariantNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductVariantNumber", productVariantNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKit as global::Microsoft.Dynamics.DataEntities.RetailKitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailKitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKit as global::Microsoft.Dynamics.DataEntities.RetailKitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="kitProductNumber">The value of kitProductNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKit> _source,
            string kitProductNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "KitProductNumber", kitProductNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailKitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoicePriceTolerance as global::Microsoft.Dynamics.DataEntities.VendInvoicePriceToleranceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoicePriceToleranceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoicePriceTolerance> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendInvoicePriceToleranceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoicePriceTolerance as global::Microsoft.Dynamics.DataEntities.VendInvoicePriceToleranceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="priceToleranceItemNumber">The value of priceToleranceItemNumber</param>
        /// <param name="priceToleranceItemGroup">The value of priceToleranceItemGroup</param>
        /// <param name="priceToleranceAccountNumber">The value of priceToleranceAccountNumber</param>
        /// <param name="priceToleranceAccountGroup">The value of priceToleranceAccountGroup</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoicePriceToleranceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoicePriceTolerance> _source,
            string dataAreaId, 
            string priceToleranceItemNumber, 
            string priceToleranceItemGroup, 
            string priceToleranceAccountNumber, 
            string priceToleranceAccountGroup)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PriceToleranceItemNumber", priceToleranceItemNumber }, 
                { "PriceToleranceItemGroup", priceToleranceItemGroup }, 
                { "PriceToleranceAccountNumber", priceToleranceAccountNumber }, 
                { "PriceToleranceAccountGroup", priceToleranceAccountGroup }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendInvoicePriceToleranceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EthnicOrigin as global::Microsoft.Dynamics.DataEntities.EthnicOriginSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EthnicOriginSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EthnicOrigin> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EthnicOriginSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EthnicOrigin as global::Microsoft.Dynamics.DataEntities.EthnicOriginSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="ethnicOriginId">The value of ethnicOriginId</param>
        public static global::Microsoft.Dynamics.DataEntities.EthnicOriginSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EthnicOrigin> _source,
            string ethnicOriginId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EthnicOriginId", ethnicOriginId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EthnicOriginSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingGroupData as global::Microsoft.Dynamics.DataEntities.WithholdingGroupDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingGroupDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingGroupData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WithholdingGroupDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingGroupData as global::Microsoft.Dynamics.DataEntities.WithholdingGroupDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="withholdingTaxGroupId">The value of withholdingTaxGroupId</param>
        /// <param name="withholdingTaxCodeId">The value of withholdingTaxCodeId</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingGroupDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingGroupData> _source,
            string dataAreaId, 
            string withholdingTaxGroupId, 
            string withholdingTaxCodeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WithholdingTaxGroupId", withholdingTaxGroupId }, 
                { "WithholdingTaxCodeId", withholdingTaxCodeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WithholdingGroupDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationLine as global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationLine as global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesAgreementId">The value of salesAgreementId</param>
        /// <param name="confirmationNumber">The value of confirmationNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationLine> _source,
            string dataAreaId, 
            string salesAgreementId, 
            string confirmationNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesAgreementId", salesAgreementId }, 
                { "ConfirmationNumber", confirmationNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MainAccountLegalEntity as global::Microsoft.Dynamics.DataEntities.MainAccountLegalEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MainAccountLegalEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MainAccountLegalEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MainAccountLegalEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MainAccountLegalEntity as global::Microsoft.Dynamics.DataEntities.MainAccountLegalEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="mainAccountId">The value of mainAccountId</param>
        /// <param name="chartOfAccounts">The value of chartOfAccounts</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        public static global::Microsoft.Dynamics.DataEntities.MainAccountLegalEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MainAccountLegalEntity> _source,
            string mainAccountId, 
            string chartOfAccounts, 
            string legalEntityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "MainAccountId", mainAccountId }, 
                { "ChartOfAccounts", chartOfAccounts }, 
                { "LegalEntityId", legalEntityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.MainAccountLegalEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseGroup as global::Microsoft.Dynamics.DataEntities.CourseGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseGroup as global::Microsoft.Dynamics.DataEntities.CourseGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="group">The value of group</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseGroup> _source,
            string group)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Group", group }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EmploymentContractor as global::Microsoft.Dynamics.DataEntities.EmploymentContractorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EmploymentContractorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EmploymentContractor> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EmploymentContractorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EmploymentContractor as global::Microsoft.Dynamics.DataEntities.EmploymentContractorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="employmentLegalEntityId">The value of employmentLegalEntityId</param>
        /// <param name="employmentStartDate">The value of employmentStartDate</param>
        /// <param name="employmentEndDate">The value of employmentEndDate</param>
        /// <param name="startDate">The value of startDate</param>
        /// <param name="endDate">The value of endDate</param>
        public static global::Microsoft.Dynamics.DataEntities.EmploymentContractorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EmploymentContractor> _source,
            string personnelNumber, 
            string employmentLegalEntityId, 
            global::System.DateTimeOffset employmentStartDate, 
            global::System.DateTimeOffset employmentEndDate, 
            global::System.DateTimeOffset startDate, 
            global::System.DateTimeOffset endDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "EmploymentLegalEntityId", employmentLegalEntityId }, 
                { "EmploymentStartDate", employmentStartDate }, 
                { "EmploymentEndDate", employmentEndDate }, 
                { "StartDate", startDate }, 
                { "EndDate", endDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.EmploymentContractorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SystemParameters as global::Microsoft.Dynamics.DataEntities.SystemParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SystemParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SystemParameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SystemParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SystemParameters as global::Microsoft.Dynamics.DataEntities.SystemParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="iD">The value of iD</param>
        public static global::Microsoft.Dynamics.DataEntities.SystemParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SystemParameters> _source,
            int iD)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ID", iD }
            };
            return new global::Microsoft.Dynamics.DataEntities.SystemParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerJournalHeader as global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerJournalHeader as global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerJournalHeader> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetParameter as global::Microsoft.Dynamics.DataEntities.AssetParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetParameter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetParameter as global::Microsoft.Dynamics.DataEntities.AssetParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetParameter> _source,
            string dataAreaId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DisposableIncome as global::Microsoft.Dynamics.DataEntities.DisposableIncomeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DisposableIncomeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DisposableIncome> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DisposableIncomeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DisposableIncome as global::Microsoft.Dynamics.DataEntities.DisposableIncomeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.DisposableIncomeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DisposableIncome> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.DisposableIncomeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetPlanProcess as global::Microsoft.Dynamics.DataEntities.BudgetPlanProcessSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetPlanProcessSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanProcess> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetPlanProcessSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetPlanProcess as global::Microsoft.Dynamics.DataEntities.BudgetPlanProcessSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetPlanProcessSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanProcess> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetPlanProcessSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentInvoicePurchaseOrder as global::Microsoft.Dynamics.DataEntities.SADDocumentInvoicePurchaseOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentInvoicePurchaseOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentInvoicePurchaseOrder> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentInvoicePurchaseOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentInvoicePurchaseOrder as global::Microsoft.Dynamics.DataEntities.SADDocumentInvoicePurchaseOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="documentCode">The value of documentCode</param>
        /// <param name="position">The value of position</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentInvoicePurchaseOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentInvoicePurchaseOrder> _source,
            string dataAreaId, 
            string documentCode, 
            int position)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DocumentCode", documentCode }, 
                { "Position", position }
            };
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentInvoicePurchaseOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryIncidentFilingAgency as global::Microsoft.Dynamics.DataEntities.InjuryIncidentFilingAgencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryIncidentFilingAgencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryIncidentFilingAgency> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjuryIncidentFilingAgencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryIncidentFilingAgency as global::Microsoft.Dynamics.DataEntities.InjuryIncidentFilingAgencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="caseNumber">The value of caseNumber</param>
        /// <param name="filingAgencyId">The value of filingAgencyId</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryIncidentFilingAgencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryIncidentFilingAgency> _source,
            string caseNumber, 
            string filingAgencyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CaseNumber", caseNumber }, 
                { "FilingAgencyId", filingAgencyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjuryIncidentFilingAgencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReportAsFinishedProductionJournalEntry as global::Microsoft.Dynamics.DataEntities.ReportAsFinishedProductionJournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReportAsFinishedProductionJournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReportAsFinishedProductionJournalEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReportAsFinishedProductionJournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReportAsFinishedProductionJournalEntry as global::Microsoft.Dynamics.DataEntities.ReportAsFinishedProductionJournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        /// <param name="journalLineNumber">The value of journalLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ReportAsFinishedProductionJournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReportAsFinishedProductionJournalEntry> _source,
            string dataAreaId, 
            string journalNumber, 
            decimal journalLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }, 
                { "JournalLineNumber", journalLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReportAsFinishedProductionJournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RecruitingProject as global::Microsoft.Dynamics.DataEntities.RecruitingProjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RecruitingProjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RecruitingProject> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RecruitingProjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RecruitingProject as global::Microsoft.Dynamics.DataEntities.RecruitingProjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="recruitmentProject">The value of recruitmentProject</param>
        public static global::Microsoft.Dynamics.DataEntities.RecruitingProjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RecruitingProject> _source,
            string dataAreaId, 
            string recruitmentProject)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RecruitmentProject", recruitmentProject }
            };
            return new global::Microsoft.Dynamics.DataEntities.RecruitingProjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeReason as global::Microsoft.Dynamics.DataEntities.EngineeringChangeReasonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeReasonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeReason> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeReasonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeReason as global::Microsoft.Dynamics.DataEntities.EngineeringChangeReasonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="reasonName">The value of reasonName</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeReasonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeReason> _source,
            string reasonName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ReasonName", reasonName }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeReasonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetSorting as global::Microsoft.Dynamics.DataEntities.AssetSortingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetSortingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetSorting> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetSortingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetSorting as global::Microsoft.Dynamics.DataEntities.AssetSortingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="sorting">The value of sorting</param>
        /// <param name="identification">The value of identification</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetSortingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetSorting> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.AssetSortValue> sorting, 
            string identification)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Sorting", sorting }, 
                { "Identification", identification }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetSortingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseHeader as global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseHeader as global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="releasingLegalEntityId">The value of releasingLegalEntityId</param>
        /// <param name="releaseStatus">The value of releaseStatus</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseHeader> _source,
            string dataAreaId, 
            string productNumber, 
            string releasingLegalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.EngChgReleaseStatus> releaseStatus, 
            string productVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductNumber", productNumber }, 
                { "ReleasingLegalEntityId", releasingLegalEntityId }, 
                { "ReleaseStatus", releaseStatus }, 
                { "ProductVersionId", productVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLine as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLine as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="royaltyAgreementLineId">The value of royaltyAgreementLineId</param>
        /// <param name="royaltyAgreementId">The value of royaltyAgreementId</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLine> _source,
            string dataAreaId, 
            string royaltyAgreementLineId, 
            string royaltyAgreementId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RoyaltyAgreementLineId", royaltyAgreementLineId }, 
                { "RoyaltyAgreementId", royaltyAgreementId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitExternalReporting as global::Microsoft.Dynamics.DataEntities.BenefitExternalReportingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitExternalReportingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitExternalReporting> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitExternalReportingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitExternalReporting as global::Microsoft.Dynamics.DataEntities.BenefitExternalReportingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitPlanID">The value of benefitPlanID</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitExternalReportingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitExternalReporting> _source,
            string benefitPlanID, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo, 
            string countryRegionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitPlanID", benefitPlanID }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }, 
                { "CountryRegionId", countryRegionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitExternalReportingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSetupLine as global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSetupLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSetupLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSetupLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSetupLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSetupLine as global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSetupLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="refPointSetupId">The value of refPointSetupId</param>
        /// <param name="lineNum">The value of lineNum</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSetupLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSetupLine> _source,
            string dataAreaId, 
            string refPointSetupId, 
            decimal lineNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RefPointSetupId", refPointSetupId }, 
                { "LineNum", lineNum }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSetupLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntity as global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntity as global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntity> _source,
            global::System.Guid id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLedgerJournal as global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLedgerJournalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLedgerJournalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLedgerJournal> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLedgerJournalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLedgerJournal as global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLedgerJournalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="sADNumber">The value of sADNumber</param>
        /// <param name="sADDate">The value of sADDate</param>
        /// <param name="invoice">The value of invoice</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLedgerJournalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLedgerJournal> _source,
            string dataAreaId, 
            string sADNumber, 
            global::System.DateTimeOffset sADDate, 
            string invoice)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SADNumber", sADNumber }, 
                { "SADDate", sADDate }, 
                { "Invoice", invoice }
            };
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLedgerJournalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ValidationTaskArea as global::Microsoft.Dynamics.DataEntities.ValidationTaskAreaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ValidationTaskAreaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValidationTaskArea> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ValidationTaskAreaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ValidationTaskArea as global::Microsoft.Dynamics.DataEntities.ValidationTaskAreaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.ValidationTaskAreaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValidationTaskArea> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.ValidationTaskAreaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CostCalculationGroup as global::Microsoft.Dynamics.DataEntities.CostCalculationGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CostCalculationGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CostCalculationGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CostCalculationGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CostCalculationGroup as global::Microsoft.Dynamics.DataEntities.CostCalculationGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.CostCalculationGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CostCalculationGroup> _source,
            string dataAreaId, 
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CostCalculationGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructure as global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructure> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructure as global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accountRuleStructureName">The value of accountRuleStructureName</param>
        /// <param name="status">The value of status</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructure> _source,
            string accountRuleStructureName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DimensionHierarchyConstraintStatus> status)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccountRuleStructureName", accountRuleStructureName }, 
                { "Status", status }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayoutStaff as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutStaffSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutStaffSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayoutStaff> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutStaffSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayoutStaff as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutStaffSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="layoutId">The value of layoutId</param>
        /// <param name="staffId">The value of staffId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutStaffSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayoutStaff> _source,
            string layoutId, 
            string staffId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LayoutId", layoutId }, 
                { "StaffId", staffId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutStaffSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeMaintenanceSequense as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeMaintenanceSequenseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeMaintenanceSequenseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeMaintenanceSequense> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeMaintenanceSequenseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeMaintenanceSequense as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeMaintenanceSequenseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationTypeId">The value of functionalLocationTypeId</param>
        /// <param name="maintenancePlanId">The value of maintenancePlanId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeMaintenanceSequenseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeMaintenanceSequense> _source,
            string dataAreaId, 
            string functionalLocationTypeId, 
            string maintenancePlanId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationTypeId", functionalLocationTypeId }, 
                { "MaintenancePlanId", maintenancePlanId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeMaintenanceSequenseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPriceToleranceGroup as global::Microsoft.Dynamics.DataEntities.VendorPriceToleranceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPriceToleranceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPriceToleranceGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorPriceToleranceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPriceToleranceGroup as global::Microsoft.Dynamics.DataEntities.VendorPriceToleranceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPriceToleranceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPriceToleranceGroup> _source,
            string dataAreaId, 
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorPriceToleranceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionBenefit as global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionBenefitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionBenefitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionBenefit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionBenefitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionBenefit as global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionBenefitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="statementSectionId">The value of statementSectionId</param>
        /// <param name="benefitId">The value of benefitId</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionBenefitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionBenefit> _source,
            string statementSectionId, 
            string benefitId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StatementSectionId", statementSectionId }, 
                { "BenefitId", benefitId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionBenefitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeValue as global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeValue> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeValue as global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringProductNumber">The value of engineeringProductNumber</param>
        /// <param name="engineeringProductVersionId">The value of engineeringProductVersionId</param>
        /// <param name="engineeringProductAttributeName">The value of engineeringProductAttributeName</param>
        /// <param name="engineeringProductAttributeTypeName">The value of engineeringProductAttributeTypeName</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeValue> _source,
            string dataAreaId, 
            string engineeringProductNumber, 
            string engineeringProductVersionId, 
            string engineeringProductAttributeName, 
            string engineeringProductAttributeTypeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringProductNumber", engineeringProductNumber }, 
                { "EngineeringProductVersionId", engineeringProductVersionId }, 
                { "EngineeringProductAttributeName", engineeringProductAttributeName }, 
                { "EngineeringProductAttributeTypeName", engineeringProductAttributeTypeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationRuleDestination as global::Microsoft.Dynamics.DataEntities.AllocationRuleDestinationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationRuleDestinationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationRuleDestination> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AllocationRuleDestinationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationRuleDestination as global::Microsoft.Dynamics.DataEntities.AllocationRuleDestinationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="rule">The value of rule</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationRuleDestinationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationRuleDestination> _source,
            string dataAreaId, 
            string rule, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Rule", rule }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AllocationRuleDestinationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="orderNumber">The value of orderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader> _source,
            string dataAreaId, 
            string orderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OrderNumber", orderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollParameter as global::Microsoft.Dynamics.DataEntities.PayrollParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollParameter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayrollParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollParameter as global::Microsoft.Dynamics.DataEntities.PayrollParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollParameter> _source,
            string dataAreaId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayrollParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetParametersProposalJournalName as global::Microsoft.Dynamics.DataEntities.AssetParametersProposalJournalNameSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetParametersProposalJournalNameSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetParametersProposalJournalName> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetParametersProposalJournalNameSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetParametersProposalJournalName as global::Microsoft.Dynamics.DataEntities.AssetParametersProposalJournalNameSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="assetParameters">The value of assetParameters</param>
        /// <param name="postingType">The value of postingType</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetParametersProposalJournalNameSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetParametersProposalJournalName> _source,
            string dataAreaId, 
            int assetParameters, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CurrentOperationsTax> postingType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AssetParameters", assetParameters }, 
                { "PostingType", postingType }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetParametersProposalJournalNameSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetGroupValueModelSetup as global::Microsoft.Dynamics.DataEntities.FixedAssetGroupValueModelSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetGroupValueModelSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetGroupValueModelSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetGroupValueModelSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetGroupValueModelSetup as global::Microsoft.Dynamics.DataEntities.FixedAssetGroupValueModelSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fixedAssetGroupId">The value of fixedAssetGroupId</param>
        /// <param name="valueModelId">The value of valueModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetGroupValueModelSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetGroupValueModelSetup> _source,
            string dataAreaId, 
            string fixedAssetGroupId, 
            string valueModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FixedAssetGroupId", fixedAssetGroupId }, 
                { "ValueModelId", valueModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetGroupValueModelSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitOrderJournal as global::Microsoft.Dynamics.DataEntities.RetailKitOrderJournalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitOrderJournalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitOrderJournal> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailKitOrderJournalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitOrderJournal as global::Microsoft.Dynamics.DataEntities.RetailKitOrderJournalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="kitProductNumber">The value of kitProductNumber</param>
        /// <param name="kitConfigId">The value of kitConfigId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitOrderJournalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitOrderJournal> _source,
            string kitProductNumber, 
            string kitConfigId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "KitProductNumber", kitProductNumber }, 
                { "KitConfigId", kitConfigId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailKitOrderJournalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RouteOperation as global::Microsoft.Dynamics.DataEntities.RouteOperationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RouteOperationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RouteOperation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RouteOperationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RouteOperation as global::Microsoft.Dynamics.DataEntities.RouteOperationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="routeId">The value of routeId</param>
        /// <param name="operationNumber">The value of operationNumber</param>
        /// <param name="operationPriority">The value of operationPriority</param>
        public static global::Microsoft.Dynamics.DataEntities.RouteOperationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RouteOperation> _source,
            string dataAreaId, 
            string routeId, 
            int operationNumber, 
            int operationPriority)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RouteId", routeId }, 
                { "OperationNumber", operationNumber }, 
                { "OperationPriority", operationPriority }
            };
            return new global::Microsoft.Dynamics.DataEntities.RouteOperationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobPreferredEducationDiscipline as global::Microsoft.Dynamics.DataEntities.JobPreferredEducationDisciplineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobPreferredEducationDisciplineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobPreferredEducationDiscipline> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobPreferredEducationDisciplineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobPreferredEducationDiscipline as global::Microsoft.Dynamics.DataEntities.JobPreferredEducationDisciplineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        /// <param name="educationId">The value of educationId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobPreferredEducationDisciplineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobPreferredEducationDiscipline> _source,
            string jobId, 
            string educationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }, 
                { "EducationId", educationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobPreferredEducationDisciplineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FinancialDimensionSet as global::Microsoft.Dynamics.DataEntities.FinancialDimensionSetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FinancialDimensionSetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FinancialDimensionSet> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FinancialDimensionSetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FinancialDimensionSet as global::Microsoft.Dynamics.DataEntities.FinancialDimensionSetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.FinancialDimensionSetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FinancialDimensionSet> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.FinancialDimensionSetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceProduct as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceProduct as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productId">The value of productId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceProduct> _source,
            string dataAreaId, 
            string productId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductId", productId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerV2 as global::Microsoft.Dynamics.DataEntities.CustomerV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerV2 as global::Microsoft.Dynamics.DataEntities.CustomerV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="customerAccount">The value of customerAccount</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerV2> _source,
            string dataAreaId, 
            string customerAccount)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CustomerAccount", customerAccount }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ADARequirementReport as global::Microsoft.Dynamics.DataEntities.ADARequirementReportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ADARequirementReportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ADARequirementReport> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ADARequirementReportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ADARequirementReport as global::Microsoft.Dynamics.DataEntities.ADARequirementReportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        /// <param name="jobTemplateId">The value of jobTemplateId</param>
        public static global::Microsoft.Dynamics.DataEntities.ADARequirementReportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ADARequirementReport> _source,
            string jobId, 
            string jobTemplateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }, 
                { "JobTemplateId", jobTemplateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ADARequirementReportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantyLine as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantyLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantyLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantyLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantyLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantyLine as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantyLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="warrantyId">The value of warrantyId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantyLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantyLine> _source,
            string dataAreaId, 
            string warrantyId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WarrantyId", warrantyId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantyLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitDetails as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitDetailsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitDetailsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitDetails> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitDetailsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitDetails as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitDetailsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitId">The value of benefitId</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="enrollmentStart">The value of enrollmentStart</param>
        /// <param name="enrollmentEnd">The value of enrollmentEnd</param>
        /// <param name="benefitDetailValidFrom">The value of benefitDetailValidFrom</param>
        /// <param name="benefitDetailValidTo">The value of benefitDetailValidTo</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitDetailsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitDetails> _source,
            string benefitId, 
            string personnelNumber, 
            global::System.DateTimeOffset enrollmentStart, 
            global::System.DateTimeOffset enrollmentEnd, 
            global::System.DateTimeOffset benefitDetailValidFrom, 
            global::System.DateTimeOffset benefitDetailValidTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitId", benefitId }, 
                { "PersonnelNumber", personnelNumber }, 
                { "EnrollmentStart", enrollmentStart }, 
                { "EnrollmentEnd", enrollmentEnd }, 
                { "BenefitDetailValidFrom", benefitDetailValidFrom }, 
                { "BenefitDetailValidTo", benefitDetailValidTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitDetailsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseTravelRequisition as global::Microsoft.Dynamics.DataEntities.ExpenseTravelRequisitionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseTravelRequisitionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseTravelRequisition> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExpenseTravelRequisitionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseTravelRequisition as global::Microsoft.Dynamics.DataEntities.ExpenseTravelRequisitionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="travelRequisitionNumber">The value of travelRequisitionNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseTravelRequisitionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseTravelRequisition> _source,
            string dataAreaId, 
            string travelRequisitionNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TravelRequisitionNumber", travelRequisitionNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExpenseTravelRequisitionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationLine as global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationLine as global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lineCreationSequenceNumber">The value of lineCreationSequenceNumber</param>
        /// <param name="salesQuotationNumber">The value of salesQuotationNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationLine> _source,
            string dataAreaId, 
            int lineCreationSequenceNumber, 
            string salesQuotationNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LineCreationSequenceNumber", lineCreationSequenceNumber }, 
                { "SalesQuotationNumber", salesQuotationNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailInternalOrganization as global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailInternalOrganization> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailInternalOrganization as global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailInternalOrganization> _source,
            string partyNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatus as global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatus> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatus as global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataValidationProject_Name">The value of dataValidationProject_Name</param>
        /// <param name="dataValidationProjectTask_LineNumber">The value of dataValidationProjectTask_LineNumber</param>
        /// <param name="legalEntity">The value of legalEntity</param>
        public static global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatus> _source,
            string dataValidationProject_Name, 
            decimal dataValidationProjectTask_LineNumber, 
            string legalEntity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DataValidationProject_Name", dataValidationProject_Name }, 
                { "DataValidationProjectTask_LineNumber", dataValidationProjectTask_LineNumber }, 
                { "LegalEntity", legalEntity }
            };
            return new global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductColorGroup as global::Microsoft.Dynamics.DataEntities.ProductColorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductColorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductColorGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductColorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductColorGroup as global::Microsoft.Dynamics.DataEntities.ProductColorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductColorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductColorGroup> _source,
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductColorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchCommitmentLineEntity as global::Microsoft.Dynamics.DataEntities.PurchCommitmentLineEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchCommitmentLineEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchCommitmentLineEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchCommitmentLineEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchCommitmentLineEntity as global::Microsoft.Dynamics.DataEntities.PurchCommitmentLineEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="commitmentNumber">The value of commitmentNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchCommitmentLineEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchCommitmentLineEntity> _source,
            string dataAreaId, 
            string commitmentNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CommitmentNumber", commitmentNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchCommitmentLineEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductionOrderRouteOperation as global::Microsoft.Dynamics.DataEntities.ProductionOrderRouteOperationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductionOrderRouteOperationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductionOrderRouteOperation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductionOrderRouteOperationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductionOrderRouteOperation as global::Microsoft.Dynamics.DataEntities.ProductionOrderRouteOperationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productionOrderNumber">The value of productionOrderNumber</param>
        /// <param name="operationNumber">The value of operationNumber</param>
        /// <param name="operationPriority">The value of operationPriority</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductionOrderRouteOperationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductionOrderRouteOperation> _source,
            string dataAreaId, 
            string productionOrderNumber, 
            int operationNumber, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RouteOprPriority> operationPriority)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductionOrderNumber", productionOrderNumber }, 
                { "OperationNumber", operationNumber }, 
                { "OperationPriority", operationPriority }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductionOrderRouteOperationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalog as global::Microsoft.Dynamics.DataEntities.RetailCatalogSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalog> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalog as global::Microsoft.Dynamics.DataEntities.RetailCatalogSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="catalogNumber">The value of catalogNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalog> _source,
            string catalogNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CatalogNumber", catalogNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EnvironmentalHealthAndSafetyCode as global::Microsoft.Dynamics.DataEntities.EnvironmentalHealthAndSafetyCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EnvironmentalHealthAndSafetyCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EnvironmentalHealthAndSafetyCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EnvironmentalHealthAndSafetyCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EnvironmentalHealthAndSafetyCode as global::Microsoft.Dynamics.DataEntities.EnvironmentalHealthAndSafetyCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="environmentalHealthAndSafetyCode">The value of environmentalHealthAndSafetyCode</param>
        public static global::Microsoft.Dynamics.DataEntities.EnvironmentalHealthAndSafetyCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EnvironmentalHealthAndSafetyCode> _source,
            string environmentalHealthAndSafetyCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EnvironmentalHealthAndSafetyCode", environmentalHealthAndSafetyCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.EnvironmentalHealthAndSafetyCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLine as global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLine as global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productStyleGroupId">The value of productStyleGroupId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLine> _source,
            string productStyleGroupId, 
            string productStyleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductStyleGroupId", productStyleGroupId }, 
                { "ProductStyleId", productStyleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductBarcode as global::Microsoft.Dynamics.DataEntities.ProductBarcodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductBarcodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductBarcode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductBarcodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductBarcode as global::Microsoft.Dynamics.DataEntities.ProductBarcodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productQuantityUnitSymbol">The value of productQuantityUnitSymbol</param>
        /// <param name="barcodeSetupId">The value of barcodeSetupId</param>
        /// <param name="barcode">The value of barcode</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductBarcodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductBarcode> _source,
            string dataAreaId, 
            string itemNumber, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string productQuantityUnitSymbol, 
            string barcodeSetupId, 
            string barcode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductQuantityUnitSymbol", productQuantityUnitSymbol }, 
                { "BarcodeSetupId", barcodeSetupId }, 
                { "Barcode", barcode }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductBarcodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Media as global::Microsoft.Dynamics.DataEntities.MediaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MediaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Media> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MediaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Media as global::Microsoft.Dynamics.DataEntities.MediaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="media">The value of media</param>
        public static global::Microsoft.Dynamics.DataEntities.MediaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Media> _source,
            string dataAreaId, 
            string media)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Media", media }
            };
            return new global::Microsoft.Dynamics.DataEntities.MediaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxTable as global::Microsoft.Dynamics.DataEntities.TaxTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxTable as global::Microsoft.Dynamics.DataEntities.TaxTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="module">The value of module</param>
        /// <param name="code">The value of code</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxTable> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RTax25TaxModule> module, 
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Module", module }, 
                { "Code", code }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetRound as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetRoundSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetRoundSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetRound> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetRoundSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetRound as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetRoundSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="roundId">The value of roundId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetRoundSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetRound> _source,
            string dataAreaId, 
            string roundId, 
            long lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RoundId", roundId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetRoundSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlow as global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlowSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlowSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlow> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlowSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlow as global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlowSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="flowEndpointURL">The value of flowEndpointURL</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlowSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlow> _source,
            string flowEndpointURL)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FlowEndpointURL", flowEndpointURL }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlowSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetCycleTimeSpan as global::Microsoft.Dynamics.DataEntities.BudgetCycleTimeSpanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetCycleTimeSpanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetCycleTimeSpan> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetCycleTimeSpanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetCycleTimeSpan as global::Microsoft.Dynamics.DataEntities.BudgetCycleTimeSpanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        /// <param name="fiscalCalendarId">The value of fiscalCalendarId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetCycleTimeSpanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetCycleTimeSpan> _source,
            string name, 
            string fiscalCalendarId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }, 
                { "FiscalCalendarId", fiscalCalendarId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetCycleTimeSpanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestProduct as global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestProduct as global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="engineeringChangeRequestNumber">The value of engineeringChangeRequestNumber</param>
        /// <param name="productNumber">The value of productNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestProduct> _source,
            string engineeringChangeRequestNumber, 
            string productNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EngineeringChangeRequestNumber", engineeringChangeRequestNumber }, 
                { "ProductNumber", productNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RecruitingMedia as global::Microsoft.Dynamics.DataEntities.RecruitingMediaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RecruitingMediaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RecruitingMedia> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RecruitingMediaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RecruitingMedia as global::Microsoft.Dynamics.DataEntities.RecruitingMediaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="recruitmentProject">The value of recruitmentProject</param>
        /// <param name="media">The value of media</param>
        public static global::Microsoft.Dynamics.DataEntities.RecruitingMediaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RecruitingMedia> _source,
            string dataAreaId, 
            string recruitmentProject, 
            string media)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RecruitmentProject", recruitmentProject }, 
                { "Media", media }
            };
            return new global::Microsoft.Dynamics.DataEntities.RecruitingMediaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillingCodeAccountingDistribution as global::Microsoft.Dynamics.DataEntities.BillingCodeAccountingDistributionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BillingCodeAccountingDistributionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillingCodeAccountingDistribution> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BillingCodeAccountingDistributionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillingCodeAccountingDistribution as global::Microsoft.Dynamics.DataEntities.BillingCodeAccountingDistributionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="validTo">The value of validTo</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="billingCode">The value of billingCode</param>
        /// <param name="ledgerAccountDisplayValue">The value of ledgerAccountDisplayValue</param>
        public static global::Microsoft.Dynamics.DataEntities.BillingCodeAccountingDistributionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillingCodeAccountingDistribution> _source,
            string dataAreaId, 
            global::System.DateTimeOffset validTo, 
            global::System.DateTimeOffset validFrom, 
            string billingCode, 
            string ledgerAccountDisplayValue)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ValidTo", validTo }, 
                { "ValidFrom", validFrom }, 
                { "BillingCode", billingCode }, 
                { "LedgerAccountDisplayValue", ledgerAccountDisplayValue }
            };
            return new global::Microsoft.Dynamics.DataEntities.BillingCodeAccountingDistributionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTypeNotes as global::Microsoft.Dynamics.DataEntities.CourseTypeNotesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeNotesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTypeNotes> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeNotesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTypeNotes as global::Microsoft.Dynamics.DataEntities.CourseTypeNotesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="courseTypeId">The value of courseTypeId</param>
        /// <param name="notesType">The value of notesType</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeNotesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTypeNotes> _source,
            string courseTypeId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.HrmCourseNotesType> notesType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CourseTypeId", courseTypeId }, 
                { "NotesType", notesType }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeNotesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetBookSpecialDepreciationAllowance as global::Microsoft.Dynamics.DataEntities.FixedAssetBookSpecialDepreciationAllowanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetBookSpecialDepreciationAllowanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetBookSpecialDepreciationAllowance> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetBookSpecialDepreciationAllowanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetBookSpecialDepreciationAllowance as global::Microsoft.Dynamics.DataEntities.FixedAssetBookSpecialDepreciationAllowanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fixedAssetId">The value of fixedAssetId</param>
        /// <param name="bookId">The value of bookId</param>
        /// <param name="specialDepreciationAllowanceId">The value of specialDepreciationAllowanceId</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetBookSpecialDepreciationAllowanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetBookSpecialDepreciationAllowance> _source,
            string dataAreaId, 
            string fixedAssetId, 
            string bookId, 
            string specialDepreciationAllowanceId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FixedAssetId", fixedAssetId }, 
                { "BookId", bookId }, 
                { "SpecialDepreciationAllowanceId", specialDepreciationAllowanceId }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetBookSpecialDepreciationAllowanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryCountingReasonCode as global::Microsoft.Dynamics.DataEntities.InventoryCountingReasonCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryCountingReasonCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryCountingReasonCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventoryCountingReasonCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryCountingReasonCode as global::Microsoft.Dynamics.DataEntities.InventoryCountingReasonCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="reasonCode">The value of reasonCode</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryCountingReasonCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryCountingReasonCode> _source,
            string dataAreaId, 
            string reasonCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReasonCode", reasonCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventoryCountingReasonCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeliveryModeChannelLine as global::Microsoft.Dynamics.DataEntities.DeliveryModeChannelLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DeliveryModeChannelLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeliveryModeChannelLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DeliveryModeChannelLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeliveryModeChannelLine as global::Microsoft.Dynamics.DataEntities.DeliveryModeChannelLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="modeOfDeliveryCode">The value of modeOfDeliveryCode</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="organizationHierarchyType">The value of organizationHierarchyType</param>
        public static global::Microsoft.Dynamics.DataEntities.DeliveryModeChannelLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeliveryModeChannelLine> _source,
            string dataAreaId, 
            string modeOfDeliveryCode, 
            string partyNumber, 
            string organizationHierarchyType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ModeOfDeliveryCode", modeOfDeliveryCode }, 
                { "PartyNumber", partyNumber }, 
                { "OrganizationHierarchyType", organizationHierarchyType }
            };
            return new global::Microsoft.Dynamics.DataEntities.DeliveryModeChannelLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalLine as global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalLine as global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalLine> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MasterPlanningProductCoverageGroup as global::Microsoft.Dynamics.DataEntities.MasterPlanningProductCoverageGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MasterPlanningProductCoverageGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MasterPlanningProductCoverageGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MasterPlanningProductCoverageGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MasterPlanningProductCoverageGroup as global::Microsoft.Dynamics.DataEntities.MasterPlanningProductCoverageGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.MasterPlanningProductCoverageGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MasterPlanningProductCoverageGroup> _source,
            string dataAreaId, 
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.MasterPlanningProductCoverageGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalLineV2 as global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalLineV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalLineV2 as global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalLineV2> _source,
            string dataAreaId, 
            string journalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceLine as global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceLine as global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="parentRecId">The value of parentRecId</param>
        public static global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceLine> _source,
            string dataAreaId, 
            decimal lineNumber, 
            long parentRecId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LineNumber", lineNumber }, 
                { "ParentRecId", parentRecId }
            };
            return new global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelState> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lifecycleModelId">The value of lifecycleModelId</param>
        /// <param name="lifecycleStateId">The value of lifecycleStateId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelState> _source,
            string dataAreaId, 
            string lifecycleModelId, 
            string lifecycleStateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LifecycleModelId", lifecycleModelId }, 
                { "LifecycleStateId", lifecycleStateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BeginningBalanceFeeTransaction as global::Microsoft.Dynamics.DataEntities.BeginningBalanceFeeTransactionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BeginningBalanceFeeTransactionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BeginningBalanceFeeTransaction> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BeginningBalanceFeeTransactionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BeginningBalanceFeeTransaction as global::Microsoft.Dynamics.DataEntities.BeginningBalanceFeeTransactionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="journalId">The value of journalId</param>
        public static global::Microsoft.Dynamics.DataEntities.BeginningBalanceFeeTransactionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BeginningBalanceFeeTransaction> _source,
            string dataAreaId, 
            decimal lineNumber, 
            string journalId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LineNumber", lineNumber }, 
                { "JournalId", journalId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BeginningBalanceFeeTransactionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionTax as global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionTaxSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionTaxSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionTax> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionTaxSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionTax as global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionTaxSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="statementSectionId">The value of statementSectionId</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        /// <param name="taxGroupId">The value of taxGroupId</param>
        /// <param name="taxCodeId">The value of taxCodeId</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionTaxSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionTax> _source,
            string statementSectionId, 
            string countryRegionId, 
            string taxGroupId, 
            string taxCodeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StatementSectionId", statementSectionId }, 
                { "CountryRegionId", countryRegionId }, 
                { "TaxGroupId", taxGroupId }, 
                { "TaxCodeId", taxCodeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionTaxSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlyNoGlobalization as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlyNoGlobalizationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlyNoGlobalizationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlyNoGlobalization> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlyNoGlobalizationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlyNoGlobalization as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlyNoGlobalizationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesOrderNumber">The value of salesOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlyNoGlobalizationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlyNoGlobalization> _source,
            string dataAreaId, 
            string salesOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesOrderNumber", salesOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlyNoGlobalizationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionHeader as global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionHeader as global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="requisitionNumber">The value of requisitionNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionHeader> _source,
            string requisitionNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RequisitionNumber", requisitionNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterColor as global::Microsoft.Dynamics.DataEntities.ProductMasterColorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterColorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterColor> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterColorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterColor as global::Microsoft.Dynamics.DataEntities.ProductMasterColorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productColorId">The value of productColorId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterColorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterColor> _source,
            string productMasterNumber, 
            string productColorId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductColorId", productColorId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterColorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleModel as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleModel as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lifecycleModelId">The value of lifecycleModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleModel> _source,
            string dataAreaId, 
            string lifecycleModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LifecycleModelId", lifecycleModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Department as global::Microsoft.Dynamics.DataEntities.DepartmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DepartmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Department> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DepartmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Department as global::Microsoft.Dynamics.DataEntities.DepartmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.DepartmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Department> _source,
            string partyNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.DepartmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseLine as global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseLine as global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderResponseLastModificationDateTime">The value of purchaseOrderResponseLastModificationDateTime</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        /// <param name="lineCreationSequenceNumber">The value of lineCreationSequenceNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseLine> _source,
            string dataAreaId, 
            global::System.DateTimeOffset purchaseOrderResponseLastModificationDateTime, 
            string purchaseOrderNumber, 
            long lineCreationSequenceNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderResponseLastModificationDateTime", purchaseOrderResponseLastModificationDateTime }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }, 
                { "LineCreationSequenceNumber", lineCreationSequenceNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckAppliedAction as global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckAppliedActionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckAppliedActionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckAppliedAction> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckAppliedActionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckAppliedAction as global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckAppliedActionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="releasedProductReadinessCheckAppliedActionRecordId">The value of releasedProductReadinessCheckAppliedActionRecordId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckAppliedActionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckAppliedAction> _source,
            string dataAreaId, 
            long releasedProductReadinessCheckAppliedActionRecordId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReleasedProductReadinessCheckAppliedActionRecordId", releasedProductReadinessCheckAppliedActionRecordId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckAppliedActionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyLine as global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyLine as global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="rFQNumber">The value of rFQNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyLine> _source,
            string dataAreaId, 
            string rFQNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RFQNumber", rFQNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Ledger as global::Microsoft.Dynamics.DataEntities.LedgerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Ledger> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Ledger as global::Microsoft.Dynamics.DataEntities.LedgerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Ledger> _source,
            string legalEntityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LegalEntityId", legalEntityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleState> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lifecycleStateId">The value of lifecycleStateId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleState> _source,
            string dataAreaId, 
            string lifecycleStateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LifecycleStateId", lifecycleStateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlCycleModel as global::Microsoft.Dynamics.DataEntities.BudgetControlCycleModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlCycleModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlCycleModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlCycleModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlCycleModel as global::Microsoft.Dynamics.DataEntities.BudgetControlCycleModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="budgetCycleName">The value of budgetCycleName</param>
        /// <param name="budgetCycleTimeSpanName">The value of budgetCycleTimeSpanName</param>
        /// <param name="budgetCycleTimeSpanFiscalCalendarId">The value of budgetCycleTimeSpanFiscalCalendarId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlCycleModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlCycleModel> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            string budgetCycleName, 
            string budgetCycleTimeSpanName, 
            string budgetCycleTimeSpanFiscalCalendarId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "BudgetCycleName", budgetCycleName }, 
                { "BudgetCycleTimeSpanName", budgetCycleTimeSpanName }, 
                { "BudgetCycleTimeSpanFiscalCalendarId", budgetCycleTimeSpanFiscalCalendarId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlCycleModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLine as global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLine as global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLine> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductVersion as global::Microsoft.Dynamics.DataEntities.ProductVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductVersion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductVersion as global::Microsoft.Dynamics.DataEntities.ProductVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="versionId">The value of versionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductVersion> _source,
            string versionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "VersionId", versionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefault as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefault> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefault as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="productId">The value of productId</param>
        /// <param name="modelProductId">The value of modelProductId</param>
        /// <param name="modelId">The value of modelId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        /// <param name="jobVariantId">The value of jobVariantId</param>
        /// <param name="jobTradeId">The value of jobTradeId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefault> _source,
            string dataAreaId, 
            string maintenanceAssetTypeId, 
            string productId, 
            string modelProductId, 
            string modelId, 
            string maintenanceAssetId, 
            string jobTypeId, 
            string jobVariantId, 
            string jobTradeId, 
            string functionalLocationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "ProductId", productId }, 
                { "ModelProductId", modelProductId }, 
                { "ModelId", modelId }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "JobTypeId", jobTypeId }, 
                { "JobVariantId", jobVariantId }, 
                { "JobTradeId", jobTradeId }, 
                { "FunctionalLocationId", functionalLocationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MonthlyCostStatementEntry as global::Microsoft.Dynamics.DataEntities.MonthlyCostStatementEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MonthlyCostStatementEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MonthlyCostStatementEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MonthlyCostStatementEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MonthlyCostStatementEntry as global::Microsoft.Dynamics.DataEntities.MonthlyCostStatementEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="costStatementType">The value of costStatementType</param>
        /// <param name="accountingMonthStartDate">The value of accountingMonthStartDate</param>
        /// <param name="levelOneCostStatementLineCategoryName">The value of levelOneCostStatementLineCategoryName</param>
        /// <param name="levelTwoCostStatementLineCategoryName">The value of levelTwoCostStatementLineCategoryName</param>
        /// <param name="levelThreeCostStatementLineCategoryName">The value of levelThreeCostStatementLineCategoryName</param>
        /// <param name="operationalSiteId">The value of operationalSiteId</param>
        /// <param name="costResourceType">The value of costResourceType</param>
        /// <param name="costResourceNumber">The value of costResourceNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        public static global::Microsoft.Dynamics.DataEntities.MonthlyCostStatementEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MonthlyCostStatementEntry> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementType> costStatementType, 
            global::System.DateTimeOffset accountingMonthStartDate, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementLineCategoryLevel1> levelOneCostStatementLineCategoryName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementLineCategoryLevel2> levelTwoCostStatementLineCategoryName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementLineCategoryLevel3> levelThreeCostStatementLineCategoryName, 
            string operationalSiteId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.InventValueReportResourceType> costResourceType, 
            string costResourceNumber, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CostStatementType", costStatementType }, 
                { "AccountingMonthStartDate", accountingMonthStartDate }, 
                { "LevelOneCostStatementLineCategoryName", levelOneCostStatementLineCategoryName }, 
                { "LevelTwoCostStatementLineCategoryName", levelTwoCostStatementLineCategoryName }, 
                { "LevelThreeCostStatementLineCategoryName", levelThreeCostStatementLineCategoryName }, 
                { "OperationalSiteId", operationalSiteId }, 
                { "CostResourceType", costResourceType }, 
                { "CostResourceNumber", costResourceNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.MonthlyCostStatementEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarranty as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarranty> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarranty as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="warrantyId">The value of warrantyId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarranty> _source,
            string dataAreaId, 
            string warrantyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WarrantyId", warrantyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWarrantySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LegalEntityContact as global::Microsoft.Dynamics.DataEntities.LegalEntityContactSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LegalEntityContactSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LegalEntityContact> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LegalEntityContactSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LegalEntityContact as global::Microsoft.Dynamics.DataEntities.LegalEntityContactSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="type">The value of type</param>
        /// <param name="description">The value of description</param>
        /// <param name="locator">The value of locator</param>
        /// <param name="dataArea">The value of dataArea</param>
        public static global::Microsoft.Dynamics.DataEntities.LegalEntityContactSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LegalEntityContact> _source,
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LogisticsElectronicAddressMethodType> type, 
            string description, 
            string locator, 
            string dataArea)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Type", type }, 
                { "Description", description }, 
                { "Locator", locator }, 
                { "DataArea", dataArea }
            };
            return new global::Microsoft.Dynamics.DataEntities.LegalEntityContactSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersion as global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersion as global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringProductNumber">The value of engineeringProductNumber</param>
        /// <param name="engineeringProductVersionId">The value of engineeringProductVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersion> _source,
            string dataAreaId, 
            string engineeringProductNumber, 
            string engineeringProductVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringProductNumber", engineeringProductNumber }, 
                { "EngineeringProductVersionId", engineeringProductVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FinancialDimensionValue as global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FinancialDimensionValue> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FinancialDimensionValue as global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="financialDimension">The value of financialDimension</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="dimensionValue">The value of dimensionValue</param>
        public static global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FinancialDimensionValue> _source,
            string financialDimension, 
            string legalEntityId, 
            string dimensionValue)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FinancialDimension", financialDimension }, 
                { "LegalEntityId", legalEntityId }, 
                { "DimensionValue", dimensionValue }
            };
            return new global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ShippingCarrier as global::Microsoft.Dynamics.DataEntities.ShippingCarrierSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ShippingCarrierSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ShippingCarrier> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ShippingCarrierSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ShippingCarrier as global::Microsoft.Dynamics.DataEntities.ShippingCarrierSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="carrierId">The value of carrierId</param>
        public static global::Microsoft.Dynamics.DataEntities.ShippingCarrierSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ShippingCarrier> _source,
            string dataAreaId, 
            string carrierId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CarrierId", carrierId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ShippingCarrierSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreAddressBook as global::Microsoft.Dynamics.DataEntities.RetailStoreAddressBookSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreAddressBookSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreAddressBook> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreAddressBookSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreAddressBook as global::Microsoft.Dynamics.DataEntities.RetailStoreAddressBookSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="retailChannelId">The value of retailChannelId</param>
        /// <param name="addressBookName">The value of addressBookName</param>
        /// <param name="addressBookType">The value of addressBookType</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreAddressBookSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreAddressBook> _source,
            string retailChannelId, 
            string addressBookName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RetailAddressBookType> addressBookType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RetailChannelId", retailChannelId }, 
                { "AddressBookName", addressBookName }, 
                { "AddressBookType", addressBookType }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreAddressBookSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2ExistAddrReadOnly as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2ExistAddrReadOnlySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2ExistAddrReadOnlySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2ExistAddrReadOnly> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2ExistAddrReadOnlySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2ExistAddrReadOnly as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2ExistAddrReadOnlySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="deliveryAddressLocationId">The value of deliveryAddressLocationId</param>
        /// <param name="deliveryValidFrom">The value of deliveryValidFrom</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2ExistAddrReadOnlySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2ExistAddrReadOnly> _source,
            string dataAreaId, 
            string deliveryAddressLocationId, 
            global::System.DateTimeOffset deliveryValidFrom)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DeliveryAddressLocationId", deliveryAddressLocationId }, 
                { "DeliveryValidFrom", deliveryValidFrom }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2ExistAddrReadOnlySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileDisposal as global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileDisposalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileDisposalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileDisposal> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileDisposalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileDisposal as global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileDisposalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="postingProfileId">The value of postingProfileId</param>
        /// <param name="saleOrScrap">The value of saleOrScrap</param>
        /// <param name="valueModelId">The value of valueModelId</param>
        /// <param name="accountGroupings">The value of accountGroupings</param>
        /// <param name="accountRelation">The value of accountRelation</param>
        /// <param name="postValue">The value of postValue</param>
        /// <param name="salesValueType">The value of salesValueType</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileDisposalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileDisposal> _source,
            string dataAreaId, 
            string postingProfileId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.AssetSoldScrap> saleOrScrap, 
            string valueModelId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableGroupAll> accountGroupings, 
            string accountRelation, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.AssetPostValue> postValue, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.AssetPostType> salesValueType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PostingProfileId", postingProfileId }, 
                { "SaleOrScrap", saleOrScrap }, 
                { "ValueModelId", valueModelId }, 
                { "AccountGroupings", accountGroupings }, 
                { "AccountRelation", accountRelation }, 
                { "PostValue", postValue }, 
                { "SalesValueType", salesValueType }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileDisposalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationHeader as global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationHeader as global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesQuotationNumber">The value of salesQuotationNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationHeader> _source,
            string dataAreaId, 
            string salesQuotationNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesQuotationNumber", salesQuotationNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSSalesQuotationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileLine as global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileLine as global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="postingProfile">The value of postingProfile</param>
        /// <param name="accountCode">The value of accountCode</param>
        /// <param name="accountOrGroupNumber">The value of accountOrGroupNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileLine> _source,
            string dataAreaId, 
            string postingProfile, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableGroupAll> accountCode, 
            string accountOrGroupNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PostingProfile", postingProfile }, 
                { "AccountCode", accountCode }, 
                { "AccountOrGroupNumber", accountOrGroupNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleState> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lifecycleStateId">The value of lifecycleStateId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleState> _source,
            string dataAreaId, 
            string lifecycleStateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LifecycleStateId", lifecycleStateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PaymentSchedule as global::Microsoft.Dynamics.DataEntities.PaymentScheduleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PaymentScheduleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PaymentSchedule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PaymentScheduleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PaymentSchedule as global::Microsoft.Dynamics.DataEntities.PaymentScheduleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.PaymentScheduleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PaymentSchedule> _source,
            string dataAreaId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.PaymentScheduleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductV2 as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductV2 as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="promotionalProductUnitSymbol">The value of promotionalProductUnitSymbol</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductV2> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementId, 
            string customerAccountNumber, 
            string itemNumber, 
            string promotionalProductUnitSymbol, 
            string productColorId, 
            string productStyleId, 
            string productVersionId, 
            string productSizeId, 
            string productConfigurationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "ItemNumber", itemNumber }, 
                { "PromotionalProductUnitSymbol", promotionalProductUnitSymbol }, 
                { "ProductColorId", productColorId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductConfigurationId", productConfigurationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AAXSalesTable as global::Microsoft.Dynamics.DataEntities.AAXSalesTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AAXSalesTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AAXSalesTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AAXSalesTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AAXSalesTable as global::Microsoft.Dynamics.DataEntities.AAXSalesTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesId">The value of salesId</param>
        public static global::Microsoft.Dynamics.DataEntities.AAXSalesTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AAXSalesTable> _source,
            string dataAreaId, 
            string salesId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesId", salesId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AAXSalesTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet as global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet as global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="documentNumber">The value of documentNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="layout">The value of layout</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source,
            string documentNumber, 
            decimal lineNumber, 
            string layout)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocumentNumber", documentNumber }, 
                { "LineNumber", lineNumber }, 
                { "Layout", layout }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerAccountGroup as global::Microsoft.Dynamics.DataEntities.LedgerAccountGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerAccountGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerAccountGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerAccountGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerAccountGroup as global::Microsoft.Dynamics.DataEntities.LedgerAccountGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="ledgerPostingGroup">The value of ledgerPostingGroup</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerAccountGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerAccountGroup> _source,
            string dataAreaId, 
            string ledgerPostingGroup)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LedgerPostingGroup", ledgerPostingGroup }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerAccountGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlGroup as global::Microsoft.Dynamics.DataEntities.BudgetControlGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlGroup as global::Microsoft.Dynamics.DataEntities.BudgetControlGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="memberName">The value of memberName</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlGroup> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            string memberName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "MemberName", memberName }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitEarningBasis as global::Microsoft.Dynamics.DataEntities.BenefitEarningBasisSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitEarningBasisSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitEarningBasis> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitEarningBasisSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitEarningBasis as global::Microsoft.Dynamics.DataEntities.BenefitEarningBasisSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="earningCodeId">The value of earningCodeId</param>
        /// <param name="benefitPlanId">The value of benefitPlanId</param>
        /// <param name="benefitOptionId">The value of benefitOptionId</param>
        /// <param name="effective">The value of effective</param>
        /// <param name="expiration">The value of expiration</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitEarningBasisSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitEarningBasis> _source,
            string earningCodeId, 
            string benefitPlanId, 
            string benefitOptionId, 
            global::System.DateTimeOffset effective, 
            global::System.DateTimeOffset expiration)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EarningCodeId", earningCodeId }, 
                { "BenefitPlanId", benefitPlanId }, 
                { "BenefitOptionId", benefitOptionId }, 
                { "Effective", effective }, 
                { "Expiration", expiration }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitEarningBasisSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishment as global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishment as global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="regulatoryEstablishmentId">The value of regulatoryEstablishmentId</param>
        public static global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishment> _source,
            string regulatoryEstablishmentId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RegulatoryEstablishmentId", regulatoryEstablishmentId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationProperties as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationProperties> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationProperties as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        /// <param name="engineeringChangeOrderProductRouteProductionSiteId">The value of engineeringChangeOrderProductRouteProductionSiteId</param>
        /// <param name="engineeringChangeOrderProductRouteOperationId">The value of engineeringChangeOrderProductRouteOperationId</param>
        /// <param name="engineeringChangeOrderProductRouteOperationNumber">The value of engineeringChangeOrderProductRouteOperationNumber</param>
        /// <param name="routeId">The value of routeId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productGroupId">The value of productGroupId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationProperties> _source,
            string dataAreaId, 
            string engineeringChangeOrderNumber, 
            decimal engineeringChangeOrderProductLineNumber, 
            string engineeringChangeOrderProductRouteProductionSiteId, 
            string engineeringChangeOrderProductRouteOperationId, 
            int engineeringChangeOrderProductRouteOperationNumber, 
            string routeId, 
            string productConfigurationId, 
            string productGroupId, 
            string itemNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }, 
                { "EngineeringChangeOrderProductRouteProductionSiteId", engineeringChangeOrderProductRouteProductionSiteId }, 
                { "EngineeringChangeOrderProductRouteOperationId", engineeringChangeOrderProductRouteOperationId }, 
                { "EngineeringChangeOrderProductRouteOperationNumber", engineeringChangeOrderProductRouteOperationNumber }, 
                { "RouteId", routeId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductGroupId", productGroupId }, 
                { "ItemNumber", itemNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModel as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModel as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lifecycleModelId">The value of lifecycleModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModel> _source,
            string dataAreaId, 
            string lifecycleModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LifecycleModelId", lifecycleModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLifecycleModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity as global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity as global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="exchangeRateTypeName">The value of exchangeRateTypeName</param>
        /// <param name="fromCurrencyCode">The value of fromCurrencyCode</param>
        /// <param name="toCurrencyCode">The value of toCurrencyCode</param>
        /// <param name="validFrom">The value of validFrom</param>
        public static global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntity> _source,
            string exchangeRateTypeName, 
            string fromCurrencyCode, 
            string toCurrencyCode, 
            global::System.DateTimeOffset validFrom)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ExchangeRateTypeName", exchangeRateTypeName }, 
                { "FromCurrencyCode", fromCurrencyCode }, 
                { "ToCurrencyCode", toCurrencyCode }, 
                { "ValidFrom", validFrom }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExchangeRateCDSEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ShippingThresholdDiscount as global::Microsoft.Dynamics.DataEntities.ShippingThresholdDiscountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ShippingThresholdDiscountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ShippingThresholdDiscount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ShippingThresholdDiscountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ShippingThresholdDiscount as global::Microsoft.Dynamics.DataEntities.ShippingThresholdDiscountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="offerId">The value of offerId</param>
        public static global::Microsoft.Dynamics.DataEntities.ShippingThresholdDiscountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ShippingThresholdDiscount> _source,
            string dataAreaId, 
            string offerId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OfferId", offerId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ShippingThresholdDiscountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxReportingCodeEntity as global::Microsoft.Dynamics.DataEntities.TaxReportingCodeEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxReportingCodeEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxReportingCodeEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxReportingCodeEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxReportingCodeEntity as global::Microsoft.Dynamics.DataEntities.TaxReportingCodeEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxReportingCode">The value of taxReportingCode</param>
        /// <param name="reportLayout">The value of reportLayout</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxReportingCodeEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxReportingCodeEntity> _source,
            string dataAreaId, 
            int taxReportingCode, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TaxReportLayout> reportLayout)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxReportingCode", taxReportingCode }, 
                { "ReportLayout", reportLayout }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxReportingCodeEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopObject as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopObjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopObjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopObject> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopObjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopObject as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopObjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceStopId">The value of maintenanceStopId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopObjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopObject> _source,
            string dataAreaId, 
            string maintenanceStopId, 
            string maintenanceAssetId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceStopId", maintenanceStopId }, 
                { "MaintenanceAssetId", maintenanceAssetId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopObjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTotalAccountInterval as global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTotalAccountIntervalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTotalAccountIntervalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTotalAccountInterval> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTotalAccountIntervalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTotalAccountInterval as global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTotalAccountIntervalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="financialDimension">The value of financialDimension</param>
        /// <param name="dimensionValue">The value of dimensionValue</param>
        /// <param name="fromValue">The value of fromValue</param>
        /// <param name="toValue">The value of toValue</param>
        public static global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTotalAccountIntervalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTotalAccountInterval> _source,
            string financialDimension, 
            string dimensionValue, 
            string fromValue, 
            string toValue)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FinancialDimension", financialDimension }, 
                { "DimensionValue", dimensionValue }, 
                { "FromValue", fromValue }, 
                { "ToValue", toValue }
            };
            return new global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTotalAccountIntervalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollUSTaxTransactionSummary as global::Microsoft.Dynamics.DataEntities.PayrollUSTaxTransactionSummarySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollUSTaxTransactionSummarySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollUSTaxTransactionSummary> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayrollUSTaxTransactionSummarySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollUSTaxTransactionSummary as global::Microsoft.Dynamics.DataEntities.PayrollUSTaxTransactionSummarySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="worker">The value of worker</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        /// <param name="transDate">The value of transDate</param>
        /// <param name="taxCode">The value of taxCode</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollUSTaxTransactionSummarySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollUSTaxTransactionSummary> _source,
            string dataAreaId, 
            string worker, 
            string personnelNumber, 
            string payStatementNumber, 
            global::System.DateTimeOffset transDate, 
            string taxCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Worker", worker }, 
                { "PersonnelNumber", personnelNumber }, 
                { "PayStatementNumber", payStatementNumber }, 
                { "TransDate", transDate }, 
                { "TaxCode", taxCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayrollUSTaxTransactionSummarySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.UserGroupUserList as global::Microsoft.Dynamics.DataEntities.UserGroupUserListSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.UserGroupUserListSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.UserGroupUserList> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.UserGroupUserListSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.UserGroupUserList as global::Microsoft.Dynamics.DataEntities.UserGroupUserListSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="userId">The value of userId</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.UserGroupUserListSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.UserGroupUserList> _source,
            string userId, 
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "userId", userId }, 
                { "groupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.UserGroupUserListSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenPurchaseMultiLineDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenPurchaseMultiLineDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenPurchaseMultiLineDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenPurchaseMultiLineDiscountJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OpenPurchaseMultiLineDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenPurchaseMultiLineDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenPurchaseMultiLineDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAgreementJournalNumber">The value of tradeAgreementJournalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenPurchaseMultiLineDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenPurchaseMultiLineDiscountJournalLine> _source,
            string dataAreaId, 
            string tradeAgreementJournalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAgreementJournalNumber", tradeAgreementJournalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OpenPurchaseMultiLineDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeader as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeader as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesOrderNumber">The value of salesOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeader> _source,
            string dataAreaId, 
            string salesOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesOrderNumber", salesOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchOrderCoProduct as global::Microsoft.Dynamics.DataEntities.BatchOrderCoProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchOrderCoProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchOrderCoProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BatchOrderCoProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchOrderCoProduct as global::Microsoft.Dynamics.DataEntities.BatchOrderCoProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="demandProductionOrderNumber">The value of demandProductionOrderNumber</param>
        /// <param name="demandProductionOrderLineNumber">The value of demandProductionOrderLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchOrderCoProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchOrderCoProduct> _source,
            string dataAreaId, 
            string demandProductionOrderNumber, 
            string demandProductionOrderLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DemandProductionOrderNumber", demandProductionOrderNumber }, 
                { "DemandProductionOrderLineNumber", demandProductionOrderLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BatchOrderCoProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitComponentSubstitute as global::Microsoft.Dynamics.DataEntities.RetailKitComponentSubstituteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitComponentSubstituteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitComponentSubstitute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailKitComponentSubstituteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitComponentSubstitute as global::Microsoft.Dynamics.DataEntities.RetailKitComponentSubstituteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="kitProductNumber">The value of kitProductNumber</param>
        /// <param name="kitComponentLineNumber">The value of kitComponentLineNumber</param>
        /// <param name="substituteProductNumber">The value of substituteProductNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitComponentSubstituteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitComponentSubstitute> _source,
            string kitProductNumber, 
            decimal kitComponentLineNumber, 
            string substituteProductNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "KitProductNumber", kitProductNumber }, 
                { "KitComponentLineNumber", kitComponentLineNumber }, 
                { "SubstituteProductNumber", substituteProductNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailKitComponentSubstituteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionType as global::Microsoft.Dynamics.DataEntities.PositionTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionType as global::Microsoft.Dynamics.DataEntities.PositionTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="positionTypeId">The value of positionTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionType> _source,
            string positionTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PositionTypeId", positionTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectOnAccForecast as global::Microsoft.Dynamics.DataEntities.ProjectOnAccForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectOnAccForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectOnAccForecast> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectOnAccForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectOnAccForecast as global::Microsoft.Dynamics.DataEntities.ProjectOnAccForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="transactionID">The value of transactionID</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectOnAccForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectOnAccForecast> _source,
            string dataAreaId, 
            string transactionID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TransactionID", transactionID }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectOnAccForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.IncomeExpenseAccount as global::Microsoft.Dynamics.DataEntities.IncomeExpenseAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.IncomeExpenseAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.IncomeExpenseAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.IncomeExpenseAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.IncomeExpenseAccount as global::Microsoft.Dynamics.DataEntities.IncomeExpenseAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="accountNumber">The value of accountNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.IncomeExpenseAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.IncomeExpenseAccount> _source,
            string dataAreaId, 
            string storeNumber, 
            string accountNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "StoreNumber", storeNumber }, 
                { "AccountNumber", accountNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.IncomeExpenseAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MainAccount as global::Microsoft.Dynamics.DataEntities.MainAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MainAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MainAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MainAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MainAccount as global::Microsoft.Dynamics.DataEntities.MainAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="chartOfAccounts">The value of chartOfAccounts</param>
        /// <param name="mainAccountId">The value of mainAccountId</param>
        public static global::Microsoft.Dynamics.DataEntities.MainAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MainAccount> _source,
            string chartOfAccounts, 
            string mainAccountId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ChartOfAccounts", chartOfAccounts }, 
                { "MainAccountId", mainAccountId }
            };
            return new global::Microsoft.Dynamics.DataEntities.MainAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicy as global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicy as global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicy> _source,
            string dataAreaId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerProductDescription as global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerProductDescription> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerProductDescription as global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="productDescriptionCustomerGroupId">The value of productDescriptionCustomerGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerProductDescription> _source,
            string dataAreaId, 
            string itemNumber, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string customerAccountNumber, 
            string productDescriptionCustomerGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "ProductDescriptionCustomerGroupId", productDescriptionCustomerGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailVisualProfile as global::Microsoft.Dynamics.DataEntities.RetailVisualProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailVisualProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailVisualProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailVisualProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailVisualProfile as global::Microsoft.Dynamics.DataEntities.RetailVisualProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="profileId">The value of profileId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailVisualProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailVisualProfile> _source,
            string profileId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProfileId", profileId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailVisualProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceLine as global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceLine as global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="externalInvoiceId">The value of externalInvoiceId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceLine> _source,
            string dataAreaId, 
            string externalInvoiceId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ExternalInvoiceId", externalInvoiceId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityDSReadOnly as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityDSReadOnlySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityDSReadOnlySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityDSReadOnly> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityDSReadOnlySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityDSReadOnly as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityDSReadOnlySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesOrderNumber">The value of salesOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityDSReadOnlySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityDSReadOnly> _source,
            string dataAreaId, 
            string salesOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesOrderNumber", salesOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityDSReadOnlySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupDetail as global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupDetail as global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="definitionGroupId">The value of definitionGroupId</param>
        /// <param name="entityName">The value of entityName</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupDetail> _source,
            string definitionGroupId, 
            string entityName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DefinitionGroupId", definitionGroupId }, 
                { "EntityName", entityName }
            };
            return new global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingGroup as global::Microsoft.Dynamics.DataEntities.WithholdingGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WithholdingGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingGroup as global::Microsoft.Dynamics.DataEntities.WithholdingGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="withholdingTaxGroupCode">The value of withholdingTaxGroupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingGroup> _source,
            string dataAreaId, 
            string withholdingTaxGroupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WithholdingTaxGroupCode", withholdingTaxGroupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.WithholdingGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobType as global::Microsoft.Dynamics.DataEntities.JobTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobType as global::Microsoft.Dynamics.DataEntities.JobTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobType> _source,
            string jobTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTypeId", jobTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LoanItem as global::Microsoft.Dynamics.DataEntities.LoanItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LoanItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LoanItem> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LoanItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LoanItem as global::Microsoft.Dynamics.DataEntities.LoanItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="loanItemId">The value of loanItemId</param>
        public static global::Microsoft.Dynamics.DataEntities.LoanItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LoanItem> _source,
            string loanItemId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LoanItemId", loanItemId }
            };
            return new global::Microsoft.Dynamics.DataEntities.LoanItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenPurchasePriceJournalLine as global::Microsoft.Dynamics.DataEntities.OpenPurchasePriceJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenPurchasePriceJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenPurchasePriceJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OpenPurchasePriceJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenPurchasePriceJournalLine as global::Microsoft.Dynamics.DataEntities.OpenPurchasePriceJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAgreementJournalNumber">The value of tradeAgreementJournalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenPurchasePriceJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenPurchasePriceJournalLine> _source,
            string dataAreaId, 
            string tradeAgreementJournalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAgreementJournalNumber", tradeAgreementJournalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OpenPurchasePriceJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeader as global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeader as global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bOMId">The value of bOMId</param>
        /// <param name="manufacturedItemNumber">The value of manufacturedItemNumber</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeader> _source,
            string dataAreaId, 
            string bOMId, 
            string manufacturedItemNumber, 
            string productionSiteId, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BOMId", bOMId }, 
                { "ManufacturedItemNumber", manufacturedItemNumber }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectCategoryEntity as global::Microsoft.Dynamics.DataEntities.ProjectCategoryEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectCategoryEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectCategoryEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectCategoryEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectCategoryEntity as global::Microsoft.Dynamics.DataEntities.ProjectCategoryEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="category">The value of category</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectCategoryEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectCategoryEntity> _source,
            string dataAreaId, 
            string category)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Category", category }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectCategoryEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectItemForecast as global::Microsoft.Dynamics.DataEntities.ProjectItemForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectItemForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectItemForecast> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectItemForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectItemForecast as global::Microsoft.Dynamics.DataEntities.ProjectItemForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="allocateMethod">The value of allocateMethod</param>
        /// <param name="endDate">The value of endDate</param>
        /// <param name="periods">The value of periods</param>
        /// <param name="unit">The value of unit</param>
        /// <param name="periodKeyId">The value of periodKeyId</param>
        /// <param name="projectTransactionId">The value of projectTransactionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectItemForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectItemForecast> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetAllocateMethod> allocateMethod, 
            global::System.DateTimeOffset endDate, 
            int periods, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.PeriodUnit> unit, 
            string periodKeyId, 
            string projectTransactionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AllocateMethod", allocateMethod }, 
                { "EndDate", endDate }, 
                { "Periods", periods }, 
                { "Unit", unit }, 
                { "PeriodKeyId", periodKeyId }, 
                { "ProjectTransactionId", projectTransactionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectItemForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompVarPlanLevel as global::Microsoft.Dynamics.DataEntities.CompVarPlanLevelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompVarPlanLevelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompVarPlanLevel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompVarPlanLevelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompVarPlanLevel as global::Microsoft.Dynamics.DataEntities.CompVarPlanLevelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="compensationLevelId">The value of compensationLevelId</param>
        /// <param name="planId">The value of planId</param>
        public static global::Microsoft.Dynamics.DataEntities.CompVarPlanLevelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompVarPlanLevel> _source,
            string dataAreaId, 
            string compensationLevelId, 
            string planId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CompensationLevelId", compensationLevelId }, 
                { "PlanId", planId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompVarPlanLevelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductDefaultOrderSettings as global::Microsoft.Dynamics.DataEntities.ProductDefaultOrderSettingsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductDefaultOrderSettingsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductDefaultOrderSettings> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductDefaultOrderSettingsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductDefaultOrderSettings as global::Microsoft.Dynamics.DataEntities.ProductDefaultOrderSettingsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductDefaultOrderSettingsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductDefaultOrderSettings> _source,
            string dataAreaId, 
            string itemNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductDefaultOrderSettingsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetV2Entity as global::Microsoft.Dynamics.DataEntities.FixedAssetV2EntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetV2EntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetV2Entity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetV2EntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetV2Entity as global::Microsoft.Dynamics.DataEntities.FixedAssetV2EntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fixedAssetNumber">The value of fixedAssetNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetV2EntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetV2Entity> _source,
            string dataAreaId, 
            string fixedAssetNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FixedAssetNumber", fixedAssetNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetV2EntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionV2 as global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionV2 as global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="voucherType">The value of voucherType</param>
        /// <param name="restrictionType">The value of restrictionType</param>
        /// <param name="notNullableLedgerDimensionDisplayValue">The value of notNullableLedgerDimensionDisplayValue</param>
        /// <param name="accountType">The value of accountType</param>
        /// <param name="accountCode">The value of accountCode</param>
        /// <param name="accountRelation">The value of accountRelation</param>
        public static global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionV2> _source,
            string dataAreaId, 
            string voucherType, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LedgerVoucherRestrictionType_CN> restrictionType, 
            string notNullableLedgerDimensionDisplayValue, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LedgerJournalACType> accountType, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableGroupAll> accountCode, 
            string accountRelation)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VoucherType", voucherType }, 
                { "RestrictionType", restrictionType }, 
                { "NotNullableLedgerDimensionDisplayValue", notNullableLedgerDimensionDisplayValue }, 
                { "AccountType", accountType }, 
                { "AccountCode", accountCode }, 
                { "AccountRelation", accountRelation }
            };
            return new global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttribute as global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttribute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttribute as global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringProductNumber">The value of engineeringProductNumber</param>
        /// <param name="engineeringProductVersionId">The value of engineeringProductVersionId</param>
        /// <param name="engineeringProductAttributeName">The value of engineeringProductAttributeName</param>
        /// <param name="engineeringProductAttributeTypeName">The value of engineeringProductAttributeTypeName</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttribute> _source,
            string dataAreaId, 
            string engineeringProductNumber, 
            string engineeringProductVersionId, 
            string engineeringProductAttributeName, 
            string engineeringProductAttributeTypeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringProductNumber", engineeringProductNumber }, 
                { "EngineeringProductVersionId", engineeringProductVersionId }, 
                { "EngineeringProductAttributeName", engineeringProductAttributeName }, 
                { "EngineeringProductAttributeTypeName", engineeringProductAttributeTypeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedEngineeringProductVersionAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSet as global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSet> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSet as global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="severityName">The value of severityName</param>
        /// <param name="sequenceNumber">The value of sequenceNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSet> _source,
            string dataAreaId, 
            string severityName, 
            decimal sequenceNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SeverityName", severityName }, 
                { "SequenceNumber", sequenceNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementEntity as global::Microsoft.Dynamics.DataEntities.DataManagementEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DataManagementEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementEntity as global::Microsoft.Dynamics.DataEntities.DataManagementEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="entityName">The value of entityName</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementEntity> _source,
            string entityName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EntityName", entityName }
            };
            return new global::Microsoft.Dynamics.DataEntities.DataManagementEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceModel as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceModel as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productId">The value of productId</param>
        /// <param name="modelId">The value of modelId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceModel> _source,
            string dataAreaId, 
            string productId, 
            string modelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductId", productId }, 
                { "ModelId", modelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitOption as global::Microsoft.Dynamics.DataEntities.BenefitOptionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitOptionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitOption> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitOptionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitOption as global::Microsoft.Dynamics.DataEntities.BenefitOptionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitOptionId">The value of benefitOptionId</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitOptionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitOption> _source,
            string benefitOptionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitOptionId", benefitOptionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitOptionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderV2 as global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderV2 as global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderV2> _source,
            string dataAreaId, 
            string purchaseOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxCodeValue as global::Microsoft.Dynamics.DataEntities.TaxCodeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxCodeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxCodeValue> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxCodeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxCodeValue as global::Microsoft.Dynamics.DataEntities.TaxCodeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxCodeId">The value of taxCodeId</param>
        /// <param name="fromDate">The value of fromDate</param>
        /// <param name="toDate">The value of toDate</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxCodeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxCodeValue> _source,
            string dataAreaId, 
            string taxCodeId, 
            global::System.DateTimeOffset fromDate, 
            global::System.DateTimeOffset toDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxCodeId", taxCodeId }, 
                { "FromDate", fromDate }, 
                { "ToDate", toDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxCodeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Group as global::Microsoft.Dynamics.DataEntities.GroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.GroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Group> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.GroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Group as global::Microsoft.Dynamics.DataEntities.GroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="deferralsGroup">The value of deferralsGroup</param>
        public static global::Microsoft.Dynamics.DataEntities.GroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Group> _source,
            string dataAreaId, 
            string deferralsGroup)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DeferralsGroup", deferralsGroup }
            };
            return new global::Microsoft.Dynamics.DataEntities.GroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankGroup as global::Microsoft.Dynamics.DataEntities.BankGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BankGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BankGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankGroup as global::Microsoft.Dynamics.DataEntities.BankGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bankGroupId">The value of bankGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.BankGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankGroup> _source,
            string dataAreaId, 
            string bankGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BankGroupId", bankGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BankGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelection as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelection> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelection as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="royaltyAgreementLineId">The value of royaltyAgreementLineId</param>
        /// <param name="royaltyAgreementId">The value of royaltyAgreementId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="salesUnitSymbol">The value of salesUnitSymbol</param>
        /// <param name="qualifyingSiteId">The value of qualifyingSiteId</param>
        /// <param name="qualifyingWarehouseId">The value of qualifyingWarehouseId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelection> _source,
            string dataAreaId, 
            string royaltyAgreementLineId, 
            string royaltyAgreementId, 
            string itemNumber, 
            string salesUnitSymbol, 
            string qualifyingSiteId, 
            string qualifyingWarehouseId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RoyaltyAgreementLineId", royaltyAgreementLineId }, 
                { "RoyaltyAgreementId", royaltyAgreementId }, 
                { "ItemNumber", itemNumber }, 
                { "SalesUnitSymbol", salesUnitSymbol }, 
                { "QualifyingSiteId", qualifyingSiteId }, 
                { "QualifyingWarehouseId", qualifyingWarehouseId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccountTranslation as global::Microsoft.Dynamics.DataEntities.AccountTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AccountTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccountTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AccountTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccountTranslation as global::Microsoft.Dynamics.DataEntities.AccountTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="mainAccount">The value of mainAccount</param>
        /// <param name="chartOfAccounts">The value of chartOfAccounts</param>
        /// <param name="language">The value of language</param>
        public static global::Microsoft.Dynamics.DataEntities.AccountTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccountTranslation> _source,
            string mainAccount, 
            string chartOfAccounts, 
            string language)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "MainAccount", mainAccount }, 
                { "ChartOfAccounts", chartOfAccounts }, 
                { "Language", language }
            };
            return new global::Microsoft.Dynamics.DataEntities.AccountTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TeamV2 as global::Microsoft.Dynamics.DataEntities.TeamV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TeamV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TeamV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TeamV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TeamV2 as global::Microsoft.Dynamics.DataEntities.TeamV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.TeamV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TeamV2> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.TeamV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectLineProperty as global::Microsoft.Dynamics.DataEntities.ProjectLinePropertySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectLinePropertySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectLineProperty> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectLinePropertySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectLineProperty as global::Microsoft.Dynamics.DataEntities.ProjectLinePropertySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="linePropertyId">The value of linePropertyId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectLinePropertySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectLineProperty> _source,
            string dataAreaId, 
            string linePropertyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LinePropertyId", linePropertyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectLinePropertySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringOrganization as global::Microsoft.Dynamics.DataEntities.EngineeringOrganizationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringOrganizationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringOrganization> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringOrganizationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringOrganization as global::Microsoft.Dynamics.DataEntities.EngineeringOrganizationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="engineeringOrganizationId">The value of engineeringOrganizationId</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringOrganizationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringOrganization> _source,
            string engineeringOrganizationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EngineeringOrganizationId", engineeringOrganizationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringOrganizationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchJob as global::Microsoft.Dynamics.DataEntities.BatchJobSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchJobSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchJob> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BatchJobSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchJob as global::Microsoft.Dynamics.DataEntities.BatchJobSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="batchJobRecId">The value of batchJobRecId</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchJobSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchJob> _source,
            long batchJobRecId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BatchJobRecId", batchJobRecId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BatchJobSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdvancedRuleCriterion as global::Microsoft.Dynamics.DataEntities.AdvancedRuleCriterionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AdvancedRuleCriterionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdvancedRuleCriterion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AdvancedRuleCriterionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdvancedRuleCriterion as global::Microsoft.Dynamics.DataEntities.AdvancedRuleCriterionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accountStructure">The value of accountStructure</param>
        /// <param name="advancedRule">The value of advancedRule</param>
        /// <param name="status">The value of status</param>
        /// <param name="segmentName">The value of segmentName</param>
        public static global::Microsoft.Dynamics.DataEntities.AdvancedRuleCriterionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdvancedRuleCriterion> _source,
            string accountStructure, 
            string advancedRule, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DimensionHierarchyConstraintStatus> status, 
            string segmentName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccountStructure", accountStructure }, 
                { "AdvancedRule", advancedRule }, 
                { "Status", status }, 
                { "SegmentName", segmentName }
            };
            return new global::Microsoft.Dynamics.DataEntities.AdvancedRuleCriterionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductUnitOfMeasureConversion as global::Microsoft.Dynamics.DataEntities.ProductUnitOfMeasureConversionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductUnitOfMeasureConversionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductUnitOfMeasureConversion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductUnitOfMeasureConversionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductUnitOfMeasureConversion as global::Microsoft.Dynamics.DataEntities.ProductUnitOfMeasureConversionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="fromUnitSymbol">The value of fromUnitSymbol</param>
        /// <param name="toUnitSymbol">The value of toUnitSymbol</param>
        /// <param name="productNumber">The value of productNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductUnitOfMeasureConversionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductUnitOfMeasureConversion> _source,
            string fromUnitSymbol, 
            string toUnitSymbol, 
            string productNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FromUnitSymbol", fromUnitSymbol }, 
                { "ToUnitSymbol", toUnitSymbol }, 
                { "ProductNumber", productNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductUnitOfMeasureConversionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesResourceRequirement as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesResourceRequirementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesResourceRequirementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesResourceRequirement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesResourceRequirementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesResourceRequirement as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesResourceRequirementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        /// <param name="engineeringChangeOrderProductRouteHeaderProductionSiteId">The value of engineeringChangeOrderProductRouteHeaderProductionSiteId</param>
        /// <param name="engineeringChangeOrderProductRouteOperationId">The value of engineeringChangeOrderProductRouteOperationId</param>
        /// <param name="engineeringChangeOrderProductRouteOperationNumber">The value of engineeringChangeOrderProductRouteOperationNumber</param>
        /// <param name="engineeringChangeOrderProductRouteOperationPropertiesProductConfigurationId">The value of engineeringChangeOrderProductRouteOperationPropertiesProductConfigurationId</param>
        /// <param name="engineeringChangeOrderProductRouteOperationPropertiesRouteId">The value of engineeringChangeOrderProductRouteOperationPropertiesRouteId</param>
        /// <param name="engineeringChangeOrderProductRouteOperationPropertiesItemNumber">The value of engineeringChangeOrderProductRouteOperationPropertiesItemNumber</param>
        /// <param name="engineeringChangeOrderProductRouteOperationPropertiesProductGroupId">The value of engineeringChangeOrderProductRouteOperationPropertiesProductGroupId</param>
        /// <param name="routeOperationPropertiesResourceRequirementRecordId">The value of routeOperationPropertiesResourceRequirementRecordId</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesResourceRequirementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesResourceRequirement> _source,
            string dataAreaId, 
            string engineeringChangeOrderNumber, 
            decimal engineeringChangeOrderProductLineNumber, 
            string engineeringChangeOrderProductRouteHeaderProductionSiteId, 
            string engineeringChangeOrderProductRouteOperationId, 
            int engineeringChangeOrderProductRouteOperationNumber, 
            string engineeringChangeOrderProductRouteOperationPropertiesProductConfigurationId, 
            string engineeringChangeOrderProductRouteOperationPropertiesRouteId, 
            string engineeringChangeOrderProductRouteOperationPropertiesItemNumber, 
            string engineeringChangeOrderProductRouteOperationPropertiesProductGroupId, 
            long routeOperationPropertiesResourceRequirementRecordId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }, 
                { "EngineeringChangeOrderProductRouteHeaderProductionSiteId", engineeringChangeOrderProductRouteHeaderProductionSiteId }, 
                { "EngineeringChangeOrderProductRouteOperationId", engineeringChangeOrderProductRouteOperationId }, 
                { "EngineeringChangeOrderProductRouteOperationNumber", engineeringChangeOrderProductRouteOperationNumber }, 
                { "EngineeringChangeOrderProductRouteOperationPropertiesProductConfigurationId", engineeringChangeOrderProductRouteOperationPropertiesProductConfigurationId }, 
                { "EngineeringChangeOrderProductRouteOperationPropertiesRouteId", engineeringChangeOrderProductRouteOperationPropertiesRouteId }, 
                { "EngineeringChangeOrderProductRouteOperationPropertiesItemNumber", engineeringChangeOrderProductRouteOperationPropertiesItemNumber }, 
                { "EngineeringChangeOrderProductRouteOperationPropertiesProductGroupId", engineeringChangeOrderProductRouteOperationPropertiesProductGroupId }, 
                { "RouteOperationPropertiesResourceRequirementRecordId", routeOperationPropertiesResourceRequirementRecordId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesResourceRequirementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LineDiscountProductGroup as global::Microsoft.Dynamics.DataEntities.LineDiscountProductGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LineDiscountProductGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LineDiscountProductGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LineDiscountProductGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LineDiscountProductGroup as global::Microsoft.Dynamics.DataEntities.LineDiscountProductGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.LineDiscountProductGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LineDiscountProductGroup> _source,
            string dataAreaId, 
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupCode", groupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.LineDiscountProductGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Prospect as global::Microsoft.Dynamics.DataEntities.ProspectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProspectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Prospect> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProspectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Prospect as global::Microsoft.Dynamics.DataEntities.ProspectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="prospectId">The value of prospectId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProspectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Prospect> _source,
            string dataAreaId, 
            string prospectId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProspectId", prospectId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProspectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DemandForecastV2 as global::Microsoft.Dynamics.DataEntities.DemandForecastV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DemandForecastV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DemandForecastV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DemandForecastV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DemandForecastV2 as global::Microsoft.Dynamics.DataEntities.DemandForecastV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="recordId">The value of recordId</param>
        public static global::Microsoft.Dynamics.DataEntities.DemandForecastV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DemandForecastV2> _source,
            string dataAreaId, 
            long recordId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RecordId", recordId }
            };
            return new global::Microsoft.Dynamics.DataEntities.DemandForecastV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentMethod as global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentMethod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentMethod as global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentMethod> _source,
            string dataAreaId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReturnDispositionCode as global::Microsoft.Dynamics.DataEntities.ReturnDispositionCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReturnDispositionCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReturnDispositionCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReturnDispositionCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReturnDispositionCode as global::Microsoft.Dynamics.DataEntities.ReturnDispositionCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="dispositionCode">The value of dispositionCode</param>
        public static global::Microsoft.Dynamics.DataEntities.ReturnDispositionCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReturnDispositionCode> _source,
            string dataAreaId, 
            string dispositionCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DispositionCode", dispositionCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReturnDispositionCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectV2 as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectV2 as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workOrderTypeId">The value of workOrderTypeId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="validFromDateTime">The value of validFromDateTime</param>
        /// <param name="validToDateTime">The value of validToDateTime</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectV2> _source,
            string dataAreaId, 
            string workOrderTypeId, 
            string functionalLocationId, 
            string maintenanceAssetTypeId, 
            string customerAccountNumber, 
            string maintenanceAssetId, 
            global::System.DateTimeOffset validFromDateTime, 
            global::System.DateTimeOffset validToDateTime)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkOrderTypeId", workOrderTypeId }, 
                { "FunctionalLocationId", functionalLocationId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "ValidFromDateTime", validFromDateTime }, 
                { "ValidToDateTime", validToDateTime }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailOnlineChannelLanguage as global::Microsoft.Dynamics.DataEntities.RetailOnlineChannelLanguageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailOnlineChannelLanguageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailOnlineChannelLanguage> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailOnlineChannelLanguageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailOnlineChannelLanguage as global::Microsoft.Dynamics.DataEntities.RetailOnlineChannelLanguageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="languageId">The value of languageId</param>
        /// <param name="operatingUnitNumber">The value of operatingUnitNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailOnlineChannelLanguageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailOnlineChannelLanguage> _source,
            string languageId, 
            string operatingUnitNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LanguageId", languageId }, 
                { "OperatingUnitNumber", operatingUnitNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailOnlineChannelLanguageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicy as global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicy as global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="policyName">The value of policyName</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicy> _source,
            string policyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PolicyName", policyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalHeaderV2 as global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalHeaderV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalHeaderV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalHeaderV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalHeaderV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalHeaderV2 as global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalHeaderV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalHeaderV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalHeaderV2> _source,
            string dataAreaId, 
            string journalNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ItemArrivalJournalHeaderV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreLocatorGroupOwner as global::Microsoft.Dynamics.DataEntities.RetailStoreLocatorGroupOwnerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreLocatorGroupOwnerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreLocatorGroupOwner> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreLocatorGroupOwnerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreLocatorGroupOwner as global::Microsoft.Dynamics.DataEntities.RetailStoreLocatorGroupOwnerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="storeLocatorGroupName">The value of storeLocatorGroupName</param>
        /// <param name="oMOperatingUnitNumber">The value of oMOperatingUnitNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreLocatorGroupOwnerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreLocatorGroupOwner> _source,
            string storeLocatorGroupName, 
            string oMOperatingUnitNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StoreLocatorGroupName", storeLocatorGroupName }, 
                { "OMOperatingUnitNumber", oMOperatingUnitNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreLocatorGroupOwnerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ImportMode as global::Microsoft.Dynamics.DataEntities.ImportModeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ImportModeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ImportMode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ImportModeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ImportMode as global::Microsoft.Dynamics.DataEntities.ImportModeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="methodOfImport">The value of methodOfImport</param>
        public static global::Microsoft.Dynamics.DataEntities.ImportModeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ImportMode> _source,
            string dataAreaId, 
            string methodOfImport)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MethodOfImport", methodOfImport }
            };
            return new global::Microsoft.Dynamics.DataEntities.ImportModeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetTrackingWorkspaceParameters as global::Microsoft.Dynamics.DataEntities.BudgetTrackingWorkspaceParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetTrackingWorkspaceParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetTrackingWorkspaceParameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetTrackingWorkspaceParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetTrackingWorkspaceParameters as global::Microsoft.Dynamics.DataEntities.BudgetTrackingWorkspaceParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="userId">The value of userId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetTrackingWorkspaceParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetTrackingWorkspaceParameters> _source,
            string dataAreaId, 
            string userId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "UserId", userId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetTrackingWorkspaceParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DisposableIncomeBenefit as global::Microsoft.Dynamics.DataEntities.DisposableIncomeBenefitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DisposableIncomeBenefitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DisposableIncomeBenefit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DisposableIncomeBenefitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DisposableIncomeBenefit as global::Microsoft.Dynamics.DataEntities.DisposableIncomeBenefitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitId">The value of benefitId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.DisposableIncomeBenefitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DisposableIncomeBenefit> _source,
            string benefitId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitId", benefitId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.DisposableIncomeBenefitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EarningStatementLine as global::Microsoft.Dynamics.DataEntities.EarningStatementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EarningStatementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EarningStatementLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EarningStatementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EarningStatementLine as global::Microsoft.Dynamics.DataEntities.EarningStatementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="company">The value of company</param>
        /// <param name="earningsStatementNumber">The value of earningsStatementNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EarningStatementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EarningStatementLine> _source,
            string company, 
            string earningsStatementNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Company", company }, 
                { "EarningsStatementNumber", earningsStatementNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EarningStatementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobFunction as global::Microsoft.Dynamics.DataEntities.JobFunctionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobFunctionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobFunction> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobFunctionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobFunction as global::Microsoft.Dynamics.DataEntities.JobFunctionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobFunctionId">The value of jobFunctionId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobFunctionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobFunction> _source,
            string jobFunctionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobFunctionId", jobFunctionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobFunctionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefit as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefit as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitPlanId">The value of benefitPlanId</param>
        /// <param name="benefitOptionId">The value of benefitOptionId</param>
        /// <param name="workerId">The value of workerId</param>
        /// <param name="enrollmentStart">The value of enrollmentStart</param>
        /// <param name="enrollmentEnd">The value of enrollmentEnd</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefit> _source,
            string benefitPlanId, 
            string benefitOptionId, 
            string workerId, 
            global::System.DateTimeOffset enrollmentStart, 
            global::System.DateTimeOffset enrollmentEnd)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitPlanId", benefitPlanId }, 
                { "BenefitOptionId", benefitOptionId }, 
                { "WorkerId", workerId }, 
                { "EnrollmentStart", enrollmentStart }, 
                { "EnrollmentEnd", enrollmentEnd }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeliveryTerm as global::Microsoft.Dynamics.DataEntities.DeliveryTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DeliveryTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeliveryTerm> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DeliveryTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeliveryTerm as global::Microsoft.Dynamics.DataEntities.DeliveryTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="termsCode">The value of termsCode</param>
        public static global::Microsoft.Dynamics.DataEntities.DeliveryTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeliveryTerm> _source,
            string dataAreaId, 
            string termsCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TermsCode", termsCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.DeliveryTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnly as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnly> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnly as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesOrderNumber">The value of salesOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnly> _source,
            string dataAreaId, 
            string salesOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesOrderNumber", salesOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityReadOnlySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductApprovedVendor as global::Microsoft.Dynamics.DataEntities.ProductApprovedVendorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductApprovedVendorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductApprovedVendor> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductApprovedVendorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductApprovedVendor as global::Microsoft.Dynamics.DataEntities.ProductApprovedVendorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="approvedVendorAccountNumber">The value of approvedVendorAccountNumber</param>
        /// <param name="effectiveDate">The value of effectiveDate</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductApprovedVendorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductApprovedVendor> _source,
            string dataAreaId, 
            string itemNumber, 
            string approvedVendorAccountNumber, 
            global::System.DateTimeOffset effectiveDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "ApprovedVendorAccountNumber", approvedVendorAccountNumber }, 
                { "EffectiveDate", effectiveDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductApprovedVendorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MultilineDiscountProductGroup as global::Microsoft.Dynamics.DataEntities.MultilineDiscountProductGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MultilineDiscountProductGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MultilineDiscountProductGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MultilineDiscountProductGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MultilineDiscountProductGroup as global::Microsoft.Dynamics.DataEntities.MultilineDiscountProductGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.MultilineDiscountProductGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MultilineDiscountProductGroup> _source,
            string dataAreaId, 
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupCode", groupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.MultilineDiscountProductGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRule as global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRule as global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="severityName">The value of severityName</param>
        /// <param name="ruleSetSequenceNumber">The value of ruleSetSequenceNumber</param>
        /// <param name="ruleClassName">The value of ruleClassName</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRule> _source,
            string dataAreaId, 
            string severityName, 
            decimal ruleSetSequenceNumber, 
            string ruleClassName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SeverityName", severityName }, 
                { "RuleSetSequenceNumber", ruleSetSequenceNumber }, 
                { "RuleClassName", ruleClassName }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverityRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetValueModel as global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetValueModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetValueModel as global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fixedAssetNumber">The value of fixedAssetNumber</param>
        /// <param name="valueModelId">The value of valueModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetValueModel> _source,
            string dataAreaId, 
            string fixedAssetNumber, 
            string valueModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FixedAssetNumber", fixedAssetNumber }, 
                { "ValueModelId", valueModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderCharge as global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderChargeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderChargeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderCharge> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderChargeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderCharge as global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderChargeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        /// <param name="chargeLineNumber">The value of chargeLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderChargeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderCharge> _source,
            string dataAreaId, 
            string purchaseOrderNumber, 
            decimal chargeLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }, 
                { "ChargeLineNumber", chargeLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderChargeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementTemplateDetail as global::Microsoft.Dynamics.DataEntities.DataManagementTemplateDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementTemplateDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplateDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DataManagementTemplateDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementTemplateDetail as global::Microsoft.Dynamics.DataEntities.DataManagementTemplateDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="templateId">The value of templateId</param>
        /// <param name="entityName">The value of entityName</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementTemplateDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplateDetail> _source,
            string templateId, 
            string entityName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TemplateId", templateId }, 
                { "EntityName", entityName }
            };
            return new global::Microsoft.Dynamics.DataEntities.DataManagementTemplateDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionV2 as global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionV2 as global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="vendorAccountNumber">The value of vendorAccountNumber</param>
        /// <param name="productDescriptionVendorGroupId">The value of productDescriptionVendorGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionV2> _source,
            string dataAreaId, 
            string itemNumber, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            string vendorAccountNumber, 
            string productDescriptionVendorGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "VendorAccountNumber", vendorAccountNumber }, 
                { "ProductDescriptionVendorGroupId", productDescriptionVendorGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSettledInvoice as global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSettledInvoiceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSettledInvoiceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSettledInvoice> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSettledInvoiceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSettledInvoice as global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSettledInvoiceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="journalLineCompany">The value of journalLineCompany</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="journalLineNumber">The value of journalLineNumber</param>
        /// <param name="invoiceNumber">The value of invoiceNumber</param>
        /// <param name="invoiceCompany">The value of invoiceCompany</param>
        /// <param name="invoiceDueDate">The value of invoiceDueDate</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSettledInvoiceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSettledInvoice> _source,
            string journalLineCompany, 
            string journalBatchNumber, 
            decimal journalLineNumber, 
            string invoiceNumber, 
            string invoiceCompany, 
            global::System.DateTimeOffset invoiceDueDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JournalLineCompany", journalLineCompany }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "JournalLineNumber", journalLineNumber }, 
                { "InvoiceNumber", invoiceNumber }, 
                { "InvoiceCompany", invoiceCompany }, 
                { "InvoiceDueDate", invoiceDueDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineSettledInvoiceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductVariantV2 as global::Microsoft.Dynamics.DataEntities.ProductVariantV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductVariantV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductVariantV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductVariantV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductVariantV2 as global::Microsoft.Dynamics.DataEntities.ProductVariantV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductVariantV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductVariantV2> _source,
            string productMasterNumber, 
            string productConfigurationId, 
            string productSizeId, 
            string productColorId, 
            string productStyleId, 
            string productVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductColorId", productColorId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductVariantV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerTransSettlement as global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerTransSettlement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerTransSettlement as global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="generalJournalAccountEntry">The value of generalJournalAccountEntry</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerTransSettlement> _source,
            long generalJournalAccountEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GeneralJournalAccountEntry", generalJournalAccountEntry }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.UserGroup as global::Microsoft.Dynamics.DataEntities.UserGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.UserGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.UserGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.UserGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.UserGroup as global::Microsoft.Dynamics.DataEntities.UserGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.UserGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.UserGroup> _source,
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.UserGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLine as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLine as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bOMId">The value of bOMId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLine> _source,
            string dataAreaId, 
            string bOMId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BOMId", bOMId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ServiceAgreementHeader as global::Microsoft.Dynamics.DataEntities.ServiceAgreementHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ServiceAgreementHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ServiceAgreementHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ServiceAgreementHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ServiceAgreementHeader as global::Microsoft.Dynamics.DataEntities.ServiceAgreementHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="serviceAgreementId">The value of serviceAgreementId</param>
        public static global::Microsoft.Dynamics.DataEntities.ServiceAgreementHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ServiceAgreementHeader> _source,
            string dataAreaId, 
            string serviceAgreementId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ServiceAgreementId", serviceAgreementId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ServiceAgreementHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenSalesPriceJournalLine as global::Microsoft.Dynamics.DataEntities.OpenSalesPriceJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenSalesPriceJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenSalesPriceJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OpenSalesPriceJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenSalesPriceJournalLine as global::Microsoft.Dynamics.DataEntities.OpenSalesPriceJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAgreementJournalNumber">The value of tradeAgreementJournalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenSalesPriceJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenSalesPriceJournalLine> _source,
            string dataAreaId, 
            string tradeAgreementJournalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAgreementJournalNumber", tradeAgreementJournalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OpenSalesPriceJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseLocation as global::Microsoft.Dynamics.DataEntities.WarehouseLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseLocation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseLocation as global::Microsoft.Dynamics.DataEntities.WarehouseLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="warehouseId">The value of warehouseId</param>
        /// <param name="warehouseLocationId">The value of warehouseLocationId</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseLocation> _source,
            string dataAreaId, 
            string warehouseId, 
            string warehouseLocationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WarehouseId", warehouseId }, 
                { "WarehouseLocationId", warehouseLocationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerEliminationRule as global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerEliminationRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerEliminationRule as global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="ruleId">The value of ruleId</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerEliminationRule> _source,
            string dataAreaId, 
            string ruleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RuleId", ruleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementEarningLine as global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementEarningLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementEarningLine as global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementEarningLine> _source,
            string payStatementNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PayStatementNumber", payStatementNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetAttribute as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetAttribute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetAttribute as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="attributeTypeId">The value of attributeTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetAttribute> _source,
            string dataAreaId, 
            string maintenanceAssetId, 
            string attributeTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "AttributeTypeId", attributeTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSource as global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSource> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSource as global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="templateId">The value of templateId</param>
        /// <param name="sourceEntity">The value of sourceEntity</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSource> _source,
            string templateId, 
            string sourceEntity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TemplateId", templateId }, 
                { "SourceEntity", sourceEntity }
            };
            return new global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivity as global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivity as global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="nonTransactionalActivityId">The value of nonTransactionalActivityId</param>
        public static global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivity> _source,
            string nonTransactionalActivityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "NonTransactionalActivityId", nonTransactionalActivityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectQuotationWbsTask as global::Microsoft.Dynamics.DataEntities.ProjectQuotationWbsTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectQuotationWbsTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectQuotationWbsTask> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectQuotationWbsTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectQuotationWbsTask as global::Microsoft.Dynamics.DataEntities.ProjectQuotationWbsTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="quotationId">The value of quotationId</param>
        /// <param name="wBSId">The value of wBSId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectQuotationWbsTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectQuotationWbsTask> _source,
            string dataAreaId, 
            string quotationId, 
            string wBSId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "QuotationId", quotationId }, 
                { "WBSId", wBSId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectQuotationWbsTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdvancedRule as global::Microsoft.Dynamics.DataEntities.AdvancedRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AdvancedRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdvancedRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AdvancedRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdvancedRule as global::Microsoft.Dynamics.DataEntities.AdvancedRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accountStructure">The value of accountStructure</param>
        /// <param name="advancedRuleName">The value of advancedRuleName</param>
        /// <param name="status">The value of status</param>
        public static global::Microsoft.Dynamics.DataEntities.AdvancedRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdvancedRule> _source,
            string accountStructure, 
            string advancedRuleName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DimensionHierarchyConstraintStatus> status)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccountStructure", accountStructure }, 
                { "AdvancedRuleName", advancedRuleName }, 
                { "Status", status }
            };
            return new global::Microsoft.Dynamics.DataEntities.AdvancedRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryTreatmentType as global::Microsoft.Dynamics.DataEntities.InjuryTreatmentTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryTreatmentTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryTreatmentType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjuryTreatmentTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryTreatmentType as global::Microsoft.Dynamics.DataEntities.InjuryTreatmentTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="treatmentTypeId">The value of treatmentTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryTreatmentTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryTreatmentType> _source,
            string treatmentTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TreatmentTypeId", treatmentTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjuryTreatmentTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryOwner as global::Microsoft.Dynamics.DataEntities.InventoryOwnerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryOwnerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryOwner> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventoryOwnerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryOwner as global::Microsoft.Dynamics.DataEntities.InventoryOwnerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="inventoryOwnerId">The value of inventoryOwnerId</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryOwnerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryOwner> _source,
            string dataAreaId, 
            string inventoryOwnerId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InventoryOwnerId", inventoryOwnerId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventoryOwnerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerTaxRegion as global::Microsoft.Dynamics.DataEntities.WorkerTaxRegionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerTaxRegionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerTaxRegion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerTaxRegionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerTaxRegion as global::Microsoft.Dynamics.DataEntities.WorkerTaxRegionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="locationId">The value of locationId</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerTaxRegionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerTaxRegion> _source,
            string personnelNumber, 
            string locationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "LocationId", locationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerTaxRegionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductionOrderHeader as global::Microsoft.Dynamics.DataEntities.ProductionOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductionOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductionOrderHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductionOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductionOrderHeader as global::Microsoft.Dynamics.DataEntities.ProductionOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productionOrderNumber">The value of productionOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductionOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductionOrderHeader> _source,
            string dataAreaId, 
            string productionOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductionOrderNumber", productionOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductionOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateScreening as global::Microsoft.Dynamics.DataEntities.JobTemplateScreeningSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateScreeningSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateScreening> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateScreeningSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateScreening as global::Microsoft.Dynamics.DataEntities.JobTemplateScreeningSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTemplateId">The value of jobTemplateId</param>
        /// <param name="screeningTypeId">The value of screeningTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateScreeningSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateScreening> _source,
            string jobTemplateId, 
            string screeningTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTemplateId", jobTemplateId }, 
                { "ScreeningTypeId", screeningTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateScreeningSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentDetail as global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentDetail as global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitID">The value of benefitID</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="enrollmentStart">The value of enrollmentStart</param>
        /// <param name="enrollmentEnd">The value of enrollmentEnd</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentDetail> _source,
            string benefitID, 
            string personnelNumber, 
            global::System.DateTimeOffset enrollmentStart, 
            global::System.DateTimeOffset enrollmentEnd)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitID", benefitID }, 
                { "PersonnelNumber", personnelNumber }, 
                { "EnrollmentStart", enrollmentStart }, 
                { "EnrollmentEnd", enrollmentEnd }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonProjectRole as global::Microsoft.Dynamics.DataEntities.PersonProjectRoleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonProjectRoleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonProjectRole> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonProjectRoleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonProjectRole as global::Microsoft.Dynamics.DataEntities.PersonProjectRoleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="projectName">The value of projectName</param>
        /// <param name="role">The value of role</param>
        /// <param name="projectId">The value of projectId</param>
        /// <param name="dataArea">The value of dataArea</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonProjectRoleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonProjectRole> _source,
            string partyNumber, 
            string projectName, 
            string role, 
            string projectId, 
            string dataArea)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "ProjectName", projectName }, 
                { "Role", role }, 
                { "ProjectId", projectId }, 
                { "DataArea", dataArea }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonProjectRoleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionServiceProfile as global::Microsoft.Dynamics.DataEntities.RetailTransactionServiceProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionServiceProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionServiceProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionServiceProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionServiceProfile as global::Microsoft.Dynamics.DataEntities.RetailTransactionServiceProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="profileId">The value of profileId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionServiceProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionServiceProfile> _source,
            string profileId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProfileId", profileId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionServiceProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetAllowTransferRule as global::Microsoft.Dynamics.DataEntities.BudgetAllowTransferRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetAllowTransferRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetAllowTransferRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetAllowTransferRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetAllowTransferRule as global::Microsoft.Dynamics.DataEntities.BudgetAllowTransferRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="budgetTransferRule">The value of budgetTransferRule</param>
        /// <param name="ruleMember">The value of ruleMember</param>
        /// <param name="dimensionAttributeId">The value of dimensionAttributeId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetAllowTransferRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetAllowTransferRule> _source,
            string dataAreaId, 
            string legalEntityId, 
            string budgetTransferRule, 
            string ruleMember, 
            string dimensionAttributeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "BudgetTransferRule", budgetTransferRule }, 
                { "RuleMember", ruleMember }, 
                { "DimensionAttributeId", dimensionAttributeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetAllowTransferRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProduct as global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProduct as global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProduct> _source,
            string dataAreaId, 
            string itemNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CodaDefinition as global::Microsoft.Dynamics.DataEntities.CodaDefinitionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CodaDefinitionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CodaDefinition> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CodaDefinitionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CodaDefinition as global::Microsoft.Dynamics.DataEntities.CodaDefinitionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bankAccount">The value of bankAccount</param>
        /// <param name="transactionGroup">The value of transactionGroup</param>
        /// <param name="transaction">The value of transaction</param>
        /// <param name="transactionCategory">The value of transactionCategory</param>
        public static global::Microsoft.Dynamics.DataEntities.CodaDefinitionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CodaDefinition> _source,
            string dataAreaId, 
            string bankAccount, 
            string transactionGroup, 
            string transaction, 
            string transactionCategory)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BankAccount", bankAccount }, 
                { "TransactionGroup", transactionGroup }, 
                { "Transaction", transaction }, 
                { "TransactionCategory", transactionCategory }
            };
            return new global::Microsoft.Dynamics.DataEntities.CodaDefinitionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductDocumentAttachment as global::Microsoft.Dynamics.DataEntities.ProductDocumentAttachmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductDocumentAttachmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductDocumentAttachment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductDocumentAttachmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductDocumentAttachment as global::Microsoft.Dynamics.DataEntities.ProductDocumentAttachmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="documentAttachmentTypeCode">The value of documentAttachmentTypeCode</param>
        /// <param name="attachmentDescription">The value of attachmentDescription</param>
        /// <param name="attachedDateTime">The value of attachedDateTime</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductDocumentAttachmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductDocumentAttachment> _source,
            string productNumber, 
            string documentAttachmentTypeCode, 
            string attachmentDescription, 
            global::System.DateTimeOffset attachedDateTime)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }, 
                { "DocumentAttachmentTypeCode", documentAttachmentTypeCode }, 
                { "AttachmentDescription", attachmentDescription }, 
                { "AttachedDateTime", attachedDateTime }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductDocumentAttachmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencyAction as global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencyActionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencyActionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencyAction> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencyActionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencyAction as global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencyActionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="actionClassName">The value of actionClassName</param>
        /// <param name="dependentProductNumber">The value of dependentProductNumber</param>
        /// <param name="dependencyLegalEntityId">The value of dependencyLegalEntityId</param>
        /// <param name="dependencyTransactionDescription">The value of dependencyTransactionDescription</param>
        /// <param name="engineeringChangeRequestNumber">The value of engineeringChangeRequestNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencyActionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencyAction> _source,
            string actionClassName, 
            string dependentProductNumber, 
            string dependencyLegalEntityId, 
            string dependencyTransactionDescription, 
            string engineeringChangeRequestNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ActionClassName", actionClassName }, 
                { "DependentProductNumber", dependentProductNumber }, 
                { "DependencyLegalEntityId", dependencyLegalEntityId }, 
                { "DependencyTransactionDescription", dependencyTransactionDescription }, 
                { "EngineeringChangeRequestNumber", engineeringChangeRequestNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencyActionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ServiceOrderLine as global::Microsoft.Dynamics.DataEntities.ServiceOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ServiceOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ServiceOrderLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ServiceOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ServiceOrderLine as global::Microsoft.Dynamics.DataEntities.ServiceOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="serviceOrderNumber">The value of serviceOrderNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ServiceOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ServiceOrderLine> _source,
            string dataAreaId, 
            string serviceOrderNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ServiceOrderNumber", serviceOrderNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ServiceOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSpecification as global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSpecificationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSpecificationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSpecification> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSpecificationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSpecification as global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSpecificationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="paymentMethodName">The value of paymentMethodName</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSpecificationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSpecification> _source,
            string dataAreaId, 
            string paymentMethodName, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PaymentMethodName", paymentMethodName }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentMethodSpecificationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeValue as global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeValue> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeValue as global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxWithholdCodeId">The value of taxWithholdCodeId</param>
        /// <param name="fromDate">The value of fromDate</param>
        /// <param name="toDate">The value of toDate</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeValue> _source,
            string dataAreaId, 
            string taxWithholdCodeId, 
            global::System.DateTimeOffset fromDate, 
            global::System.DateTimeOffset toDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxWithholdCodeId", taxWithholdCodeId }, 
                { "FromDate", fromDate }, 
                { "ToDate", toDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterVersion as global::Microsoft.Dynamics.DataEntities.ProductMasterVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterVersion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterVersion as global::Microsoft.Dynamics.DataEntities.ProductMasterVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterVersion> _source,
            string productMasterNumber, 
            string productVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductVersionId", productVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdLedgerAccountGroup as global::Microsoft.Dynamics.DataEntities.WithholdLedgerAccountGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdLedgerAccountGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdLedgerAccountGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WithholdLedgerAccountGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdLedgerAccountGroup as global::Microsoft.Dynamics.DataEntities.WithholdLedgerAccountGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxWithholdAccountGroup">The value of taxWithholdAccountGroup</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdLedgerAccountGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdLedgerAccountGroup> _source,
            string dataAreaId, 
            string taxWithholdAccountGroup)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxWithholdAccountGroup", taxWithholdAccountGroup }
            };
            return new global::Microsoft.Dynamics.DataEntities.WithholdLedgerAccountGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventCountingReasonCodePolicy as global::Microsoft.Dynamics.DataEntities.InventCountingReasonCodePolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventCountingReasonCodePolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventCountingReasonCodePolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventCountingReasonCodePolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventCountingReasonCodePolicy as global::Microsoft.Dynamics.DataEntities.InventCountingReasonCodePolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.InventCountingReasonCodePolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventCountingReasonCodePolicy> _source,
            string dataAreaId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventCountingReasonCodePolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTranslation as global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTranslation as global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="financialDimension">The value of financialDimension</param>
        /// <param name="languageCode">The value of languageCode</param>
        /// <param name="financialDimensionValue">The value of financialDimensionValue</param>
        public static global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTranslation> _source,
            string financialDimension, 
            string languageCode, 
            string financialDimensionValue)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FinancialDimension", financialDimension }, 
                { "LanguageCode", languageCode }, 
                { "FinancialDimensionValue", financialDimensionValue }
            };
            return new global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RTax25TaxTableAssessed as global::Microsoft.Dynamics.DataEntities.RTax25TaxTableAssessedSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RTax25TaxTableAssessedSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RTax25TaxTableAssessed> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RTax25TaxTableAssessedSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RTax25TaxTableAssessed as global::Microsoft.Dynamics.DataEntities.RTax25TaxTableAssessedSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="module">The value of module</param>
        /// <param name="code">The value of code</param>
        public static global::Microsoft.Dynamics.DataEntities.RTax25TaxTableAssessedSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RTax25TaxTableAssessed> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RTax25TaxModule> module, 
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Module", module }, 
                { "Code", code }
            };
            return new global::Microsoft.Dynamics.DataEntities.RTax25TaxTableAssessedSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TSTimesheetLine as global::Microsoft.Dynamics.DataEntities.TSTimesheetLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TSTimesheetLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TSTimesheetLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TSTimesheetLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TSTimesheetLine as global::Microsoft.Dynamics.DataEntities.TSTimesheetLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="timesheetNumber">The value of timesheetNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.TSTimesheetLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TSTimesheetLine> _source,
            string dataAreaId, 
            string timesheetNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TimesheetNumber", timesheetNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.TSTimesheetLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackLine as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackLine as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="tradeAllowanceAgreementMerchandisingEventId">The value of tradeAllowanceAgreementMerchandisingEventId</param>
        /// <param name="tradeAllowanceAgreementMerchandisingEventBillBackId">The value of tradeAllowanceAgreementMerchandisingEventBillBackId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackLine> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementId, 
            string customerAccountNumber, 
            string tradeAllowanceAgreementMerchandisingEventId, 
            string tradeAllowanceAgreementMerchandisingEventBillBackId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "TradeAllowanceAgreementMerchandisingEventId", tradeAllowanceAgreementMerchandisingEventId }, 
                { "TradeAllowanceAgreementMerchandisingEventBillBackId", tradeAllowanceAgreementMerchandisingEventBillBackId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.GSTReliefCategory as global::Microsoft.Dynamics.DataEntities.GSTReliefCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.GSTReliefCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.GSTReliefCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.GSTReliefCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.GSTReliefCategory as global::Microsoft.Dynamics.DataEntities.GSTReliefCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="reliefCategoryEntityKey">The value of reliefCategoryEntityKey</param>
        public static global::Microsoft.Dynamics.DataEntities.GSTReliefCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.GSTReliefCategory> _source,
            string dataAreaId, 
            global::System.Guid reliefCategoryEntityKey)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReliefCategoryEntityKey", reliefCategoryEntityKey }
            };
            return new global::Microsoft.Dynamics.DataEntities.GSTReliefCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailFunctionalityProfile as global::Microsoft.Dynamics.DataEntities.RetailFunctionalityProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailFunctionalityProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailFunctionalityProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailFunctionalityProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailFunctionalityProfile as global::Microsoft.Dynamics.DataEntities.RetailFunctionalityProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="profileId">The value of profileId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailFunctionalityProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailFunctionalityProfile> _source,
            string profileId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "profileId", profileId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailFunctionalityProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Currency as global::Microsoft.Dynamics.DataEntities.CurrencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CurrencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Currency> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CurrencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Currency as global::Microsoft.Dynamics.DataEntities.CurrencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="currencyCode">The value of currencyCode</param>
        public static global::Microsoft.Dynamics.DataEntities.CurrencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Currency> _source,
            string currencyCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CurrencyCode", currencyCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.CurrencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryPolicy as global::Microsoft.Dynamics.DataEntities.InventoryPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventoryPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryPolicy as global::Microsoft.Dynamics.DataEntities.InventoryPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="policyId">The value of policyId</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryPolicy> _source,
            string dataAreaId, 
            string policyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PolicyId", policyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventoryPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PaymentJournalLineSettledInvoice as global::Microsoft.Dynamics.DataEntities.PaymentJournalLineSettledInvoiceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PaymentJournalLineSettledInvoiceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PaymentJournalLineSettledInvoice> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PaymentJournalLineSettledInvoiceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PaymentJournalLineSettledInvoice as global::Microsoft.Dynamics.DataEntities.PaymentJournalLineSettledInvoiceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="journalLineCompany">The value of journalLineCompany</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="journalLineNumber">The value of journalLineNumber</param>
        /// <param name="invoiceNumber">The value of invoiceNumber</param>
        /// <param name="invoiceCompany">The value of invoiceCompany</param>
        /// <param name="invoiceDueDate">The value of invoiceDueDate</param>
        public static global::Microsoft.Dynamics.DataEntities.PaymentJournalLineSettledInvoiceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PaymentJournalLineSettledInvoice> _source,
            string journalLineCompany, 
            string journalBatchNumber, 
            decimal journalLineNumber, 
            string invoiceNumber, 
            string invoiceCompany, 
            global::System.DateTimeOffset invoiceDueDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JournalLineCompany", journalLineCompany }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "JournalLineNumber", journalLineNumber }, 
                { "InvoiceNumber", invoiceNumber }, 
                { "InvoiceCompany", invoiceCompany }, 
                { "InvoiceDueDate", invoiceDueDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.PaymentJournalLineSettledInvoiceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProduct as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProduct as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProduct> _source,
            string dataAreaId, 
            string engineeringChangeOrderNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateCertificate as global::Microsoft.Dynamics.DataEntities.JobTemplateCertificateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateCertificateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateCertificate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateCertificateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateCertificate as global::Microsoft.Dynamics.DataEntities.JobTemplateCertificateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTemplateId">The value of jobTemplateId</param>
        /// <param name="certificateTypeId">The value of certificateTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateCertificateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateCertificate> _source,
            string jobTemplateId, 
            string certificateTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTemplateId", jobTemplateId }, 
                { "CertificateTypeId", certificateTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateCertificateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkflowExternalElement as global::Microsoft.Dynamics.DataEntities.WorkflowExternalElementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkflowExternalElementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowExternalElement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkflowExternalElementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkflowExternalElement as global::Microsoft.Dynamics.DataEntities.WorkflowExternalElementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="correlationId">The value of correlationId</param>
        /// <param name="elementId">The value of elementId</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkflowExternalElementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowExternalElement> _source,
            global::System.Guid correlationId, 
            global::System.Guid elementId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CorrelationId", correlationId }, 
                { "ElementId", elementId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkflowExternalElementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultSymptom as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultSymptomSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultSymptomSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultSymptom> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultSymptomSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultSymptom as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultSymptomSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="faultSymptomId">The value of faultSymptomId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultSymptomSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultSymptom> _source,
            string dataAreaId, 
            string maintenanceAssetTypeId, 
            string faultSymptomId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "FaultSymptomId", faultSymptomId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultSymptomSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobPreferredSkill as global::Microsoft.Dynamics.DataEntities.JobPreferredSkillSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobPreferredSkillSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobPreferredSkill> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobPreferredSkillSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobPreferredSkill as global::Microsoft.Dynamics.DataEntities.JobPreferredSkillSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        /// <param name="skillId">The value of skillId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobPreferredSkillSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobPreferredSkill> _source,
            string jobId, 
            string skillId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }, 
                { "SkillId", skillId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobPreferredSkillSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupCode as global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupCode as global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="taxGroupId">The value of taxGroupId</param>
        /// <param name="taxCodeId">The value of taxCodeId</param>
        /// <param name="taxCodeCountryRegionId">The value of taxCodeCountryRegionId</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupCode> _source,
            string taxGroupId, 
            string taxCodeId, 
            string taxCodeCountryRegionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TaxGroupId", taxGroupId }, 
                { "TaxCodeId", taxCodeId }, 
                { "TaxCodeCountryRegionId", taxCodeCountryRegionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceActivityRegistration as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceActivityRegistrationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceActivityRegistrationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceActivityRegistration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceActivityRegistrationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceActivityRegistration as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceActivityRegistrationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workerPersonnelNumber">The value of workerPersonnelNumber</param>
        /// <param name="timeProfileDate">The value of timeProfileDate</param>
        /// <param name="activityRegistrationEntryNumber">The value of activityRegistrationEntryNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceActivityRegistrationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceActivityRegistration> _source,
            string dataAreaId, 
            string workerPersonnelNumber, 
            global::System.DateTimeOffset timeProfileDate, 
            long activityRegistrationEntryNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkerPersonnelNumber", workerPersonnelNumber }, 
                { "TimeProfileDate", timeProfileDate }, 
                { "ActivityRegistrationEntryNumber", activityRegistrationEntryNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceActivityRegistrationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAllowedByObjectType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAllowedByObjectTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAllowedByObjectTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAllowedByObjectType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAllowedByObjectTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAllowedByObjectType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAllowedByObjectTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationTypeId">The value of functionalLocationTypeId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAllowedByObjectTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAllowedByObjectType> _source,
            string dataAreaId, 
            string functionalLocationTypeId, 
            string maintenanceAssetTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationTypeId", functionalLocationTypeId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAllowedByObjectTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSource as global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSource> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSource as global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="basisId">The value of basisId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSource> _source,
            string dataAreaId, 
            string basisId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BasisId", basisId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterSizeTranslation as global::Microsoft.Dynamics.DataEntities.ProductMasterSizeTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterSizeTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterSizeTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterSizeTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterSizeTranslation as global::Microsoft.Dynamics.DataEntities.ProductMasterSizeTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productMasterSizeId">The value of productMasterSizeId</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterSizeTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterSizeTranslation> _source,
            string productMasterNumber, 
            string productMasterSizeId, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductMasterSizeId", productMasterSizeId }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterSizeTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitReleasedComponent as global::Microsoft.Dynamics.DataEntities.RetailKitReleasedComponentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitReleasedComponentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitReleasedComponent> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailKitReleasedComponentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitReleasedComponent as global::Microsoft.Dynamics.DataEntities.RetailKitReleasedComponentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="kitProductNumber">The value of kitProductNumber</param>
        /// <param name="kitComponentLineNumber">The value of kitComponentLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitReleasedComponentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitReleasedComponent> _source,
            string dataAreaId, 
            string kitProductNumber, 
            decimal kitComponentLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "KitProductNumber", kitProductNumber }, 
                { "KitComponentLineNumber", kitComponentLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailKitReleasedComponentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTypeSkillProfile as global::Microsoft.Dynamics.DataEntities.CourseTypeSkillProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeSkillProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTypeSkillProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeSkillProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTypeSkillProfile as global::Microsoft.Dynamics.DataEntities.CourseTypeSkillProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="courseTypeId">The value of courseTypeId</param>
        /// <param name="skillId">The value of skillId</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeSkillProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTypeSkillProfile> _source,
            string courseTypeId, 
            string skillId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CourseTypeId", courseTypeId }, 
                { "SkillId", skillId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeSkillProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RatingLevel as global::Microsoft.Dynamics.DataEntities.RatingLevelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RatingLevelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RatingLevel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RatingLevelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RatingLevel as global::Microsoft.Dynamics.DataEntities.RatingLevelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="ratingLevelId">The value of ratingLevelId</param>
        /// <param name="ratingModelId">The value of ratingModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.RatingLevelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RatingLevel> _source,
            string ratingLevelId, 
            string ratingModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RatingLevelId", ratingLevelId }, 
                { "RatingModelId", ratingModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RatingLevelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitTaxRuleUS as global::Microsoft.Dynamics.DataEntities.BenefitTaxRuleUSSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitTaxRuleUSSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitTaxRuleUS> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitTaxRuleUSSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitTaxRuleUS as global::Microsoft.Dynamics.DataEntities.BenefitTaxRuleUSSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitPlanID">The value of benefitPlanID</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitTaxRuleUSSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitTaxRuleUS> _source,
            string benefitPlanID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitPlanID", benefitPlanID }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitTaxRuleUSSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductAttribute as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductAttribute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductAttribute as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        /// <param name="engineeringProductAttributeName">The value of engineeringProductAttributeName</param>
        /// <param name="engineeringProductAttributeTypeName">The value of engineeringProductAttributeTypeName</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductAttribute> _source,
            string dataAreaId, 
            string engineeringChangeOrderNumber, 
            decimal engineeringChangeOrderProductLineNumber, 
            string engineeringProductAttributeName, 
            string engineeringProductAttributeTypeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }, 
                { "EngineeringProductAttributeName", engineeringProductAttributeName }, 
                { "EngineeringProductAttributeTypeName", engineeringProductAttributeTypeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureConstraint as global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureConstraintSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureConstraintSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureConstraint> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureConstraintSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureConstraint as global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureConstraintSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="advancedRuleStructure">The value of advancedRuleStructure</param>
        /// <param name="status">The value of status</param>
        /// <param name="position">The value of position</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureConstraintSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureConstraint> _source,
            string advancedRuleStructure, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DimensionHierarchyConstraintStatus> status, 
            int position)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AdvancedRuleStructure", advancedRuleStructure }, 
                { "Status", status }, 
                { "Position", position }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerAdvancedRuleStructureConstraintSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorV2 as global::Microsoft.Dynamics.DataEntities.VendorV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorV2 as global::Microsoft.Dynamics.DataEntities.VendorV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="vendorAccountNumber">The value of vendorAccountNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorV2> _source,
            string dataAreaId, 
            string vendorAccountNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VendorAccountNumber", vendorAccountNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceHeader as global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceHeader as global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="externalInvoiceId">The value of externalInvoiceId</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceHeader> _source,
            string dataAreaId, 
            string externalInvoiceId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ExternalInvoiceId", externalInvoiceId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSFreeTextInvoiceHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayoutButtonGridZone as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutButtonGridZoneSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutButtonGridZoneSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayoutButtonGridZone> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutButtonGridZoneSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayoutButtonGridZone as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutButtonGridZoneSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="layoutId">The value of layoutId</param>
        /// <param name="deviceType">The value of deviceType</param>
        /// <param name="zoneId">The value of zoneId</param>
        /// <param name="buttonGridId">The value of buttonGridId</param>
        /// <param name="layoutSizeId">The value of layoutSizeId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutButtonGridZoneSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayoutButtonGridZone> _source,
            string layoutId, 
            int deviceType, 
            string zoneId, 
            string buttonGridId, 
            string layoutSizeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LayoutId", layoutId }, 
                { "DeviceType", deviceType }, 
                { "ZoneId", zoneId }, 
                { "ButtonGridId", buttonGridId }, 
                { "LayoutSizeId", layoutSizeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutButtonGridZoneSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationGrid as global::Microsoft.Dynamics.DataEntities.CompensationGridSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationGridSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationGrid> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationGridSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationGrid as global::Microsoft.Dynamics.DataEntities.CompensationGridSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="gridId">The value of gridId</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationGridSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationGrid> _source,
            string dataAreaId, 
            string gridId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GridId", gridId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationGridSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderV2 as global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderV2 as global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bOMId">The value of bOMId</param>
        /// <param name="manufacturedItemNumber">The value of manufacturedItemNumber</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderV2> _source,
            string dataAreaId, 
            string bOMId, 
            string manufacturedItemNumber, 
            string productionSiteId, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BOMId", bOMId }, 
                { "ManufacturedItemNumber", manufacturedItemNumber }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ItemSpecificBillOfMaterialsHeaderV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EducationDisciplineGroup as global::Microsoft.Dynamics.DataEntities.EducationDisciplineGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EducationDisciplineGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EducationDisciplineGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EducationDisciplineGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EducationDisciplineGroup as global::Microsoft.Dynamics.DataEntities.EducationDisciplineGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="educationId">The value of educationId</param>
        /// <param name="educationDisciplineCategoryId">The value of educationDisciplineCategoryId</param>
        public static global::Microsoft.Dynamics.DataEntities.EducationDisciplineGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EducationDisciplineGroup> _source,
            string educationId, 
            string educationDisciplineCategoryId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EducationId", educationId }, 
                { "EducationDisciplineCategoryId", educationDisciplineCategoryId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EducationDisciplineGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RTax25RegisterParameter as global::Microsoft.Dynamics.DataEntities.RTax25RegisterParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RTax25RegisterParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RTax25RegisterParameter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RTax25RegisterParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RTax25RegisterParameter as global::Microsoft.Dynamics.DataEntities.RTax25RegisterParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="registerCode">The value of registerCode</param>
        /// <param name="parameterCode">The value of parameterCode</param>
        public static global::Microsoft.Dynamics.DataEntities.RTax25RegisterParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RTax25RegisterParameter> _source,
            string dataAreaId, 
            string registerCode, 
            int parameterCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RegisterCode", registerCode }, 
                { "ParameterCode", parameterCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.RTax25RegisterParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RAssetJournalHeader as global::Microsoft.Dynamics.DataEntities.RAssetJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RAssetJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RAssetJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RAssetJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RAssetJournalHeader as global::Microsoft.Dynamics.DataEntities.RAssetJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RAssetJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RAssetJournalHeader> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RAssetJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMaster as global::Microsoft.Dynamics.DataEntities.ProductMasterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMaster> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMaster as global::Microsoft.Dynamics.DataEntities.ProductMasterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMaster> _source,
            string productNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeAttribute as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeAttribute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeAttribute as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="attributeTypeId">The value of attributeTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeAttribute> _source,
            string dataAreaId, 
            string maintenanceAssetTypeId, 
            string attributeTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "AttributeTypeId", attributeTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CertificateType as global::Microsoft.Dynamics.DataEntities.CertificateTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CertificateTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CertificateType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CertificateTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CertificateType as global::Microsoft.Dynamics.DataEntities.CertificateTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="certificateType">The value of certificateType</param>
        public static global::Microsoft.Dynamics.DataEntities.CertificateTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CertificateType> _source,
            string certificateType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CertificateType", certificateType }
            };
            return new global::Microsoft.Dynamics.DataEntities.CertificateTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CurrencyParameters as global::Microsoft.Dynamics.DataEntities.CurrencyParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CurrencyParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CurrencyParameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CurrencyParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CurrencyParameters as global::Microsoft.Dynamics.DataEntities.CurrencyParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="ledger_Name">The value of ledger_Name</param>
        /// <param name="currency">The value of currency</param>
        public static global::Microsoft.Dynamics.DataEntities.CurrencyParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CurrencyParameters> _source,
            string dataAreaId, 
            string ledger_Name, 
            string currency)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Ledger_Name", ledger_Name }, 
                { "Currency", currency }
            };
            return new global::Microsoft.Dynamics.DataEntities.CurrencyParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LineDiscountCustomerGroup as global::Microsoft.Dynamics.DataEntities.LineDiscountCustomerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LineDiscountCustomerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LineDiscountCustomerGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LineDiscountCustomerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LineDiscountCustomerGroup as global::Microsoft.Dynamics.DataEntities.LineDiscountCustomerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.LineDiscountCustomerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LineDiscountCustomerGroup> _source,
            string dataAreaId, 
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupCode", groupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.LineDiscountCustomerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollTaxGroup as global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollTaxGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollTaxGroup as global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollTaxGroup> _source,
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayrollTaxGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSParty as global::Microsoft.Dynamics.DataEntities.CDSPartySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSPartySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSParty> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSPartySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSParty as global::Microsoft.Dynamics.DataEntities.CDSPartySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSPartySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSParty> _source,
            string partyNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSPartySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ValueModelSetup as global::Microsoft.Dynamics.DataEntities.ValueModelSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ValueModelSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValueModelSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ValueModelSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ValueModelSetup as global::Microsoft.Dynamics.DataEntities.ValueModelSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="valueModelId">The value of valueModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.ValueModelSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValueModelSetup> _source,
            string dataAreaId, 
            string valueModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ValueModelId", valueModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ValueModelSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductAttributeValue as global::Microsoft.Dynamics.DataEntities.ProductAttributeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductAttributeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductAttributeValue> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductAttributeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductAttributeValue as global::Microsoft.Dynamics.DataEntities.ProductAttributeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="attributeTypeName">The value of attributeTypeName</param>
        /// <param name="attributeName">The value of attributeName</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductAttributeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductAttributeValue> _source,
            string productNumber, 
            string attributeTypeName, 
            string attributeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }, 
                { "AttributeTypeName", attributeTypeName }, 
                { "AttributeName", attributeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductAttributeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseAisle as global::Microsoft.Dynamics.DataEntities.WarehouseAisleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseAisleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseAisle> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseAisleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseAisle as global::Microsoft.Dynamics.DataEntities.WarehouseAisleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="warehouseId">The value of warehouseId</param>
        /// <param name="aisleId">The value of aisleId</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseAisleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseAisle> _source,
            string dataAreaId, 
            string warehouseId, 
            string aisleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WarehouseId", warehouseId }, 
                { "AisleId", aisleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseAisleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Vendor as global::Microsoft.Dynamics.DataEntities.VendorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Vendor> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Vendor as global::Microsoft.Dynamics.DataEntities.VendorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="vendorAccountNumber">The value of vendorAccountNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Vendor> _source,
            string dataAreaId, 
            string vendorAccountNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VendorAccountNumber", vendorAccountNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalFee as global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalFeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalFeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalFee> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalFeeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalFee as global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalFeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="sourceJournalBatchNumber">The value of sourceJournalBatchNumber</param>
        /// <param name="sourceJournalLineNumber">The value of sourceJournalLineNumber</param>
        /// <param name="paymentFeeId">The value of paymentFeeId</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalFeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalFee> _source,
            string dataAreaId, 
            string sourceJournalBatchNumber, 
            decimal sourceJournalLineNumber, 
            string paymentFeeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SourceJournalBatchNumber", sourceJournalBatchNumber }, 
                { "SourceJournalLineNumber", sourceJournalLineNumber }, 
                { "PaymentFeeId", paymentFeeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalFeeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterSize as global::Microsoft.Dynamics.DataEntities.ProductMasterSizeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterSizeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterSize> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterSizeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterSize as global::Microsoft.Dynamics.DataEntities.ProductMasterSizeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterSizeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterSize> _source,
            string productMasterNumber, 
            string productSizeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductSizeId", productSizeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterSizeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreHardwareStation as global::Microsoft.Dynamics.DataEntities.RetailStoreHardwareStationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreHardwareStationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreHardwareStation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreHardwareStationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreHardwareStation as global::Microsoft.Dynamics.DataEntities.RetailStoreHardwareStationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="eftTerminalId">The value of eftTerminalId</param>
        /// <param name="hostName">The value of hostName</param>
        /// <param name="hardwareProfileId">The value of hardwareProfileId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreHardwareStationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreHardwareStation> _source,
            string storeNumber, 
            string eftTerminalId, 
            string hostName, 
            string hardwareProfileId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StoreNumber", storeNumber }, 
                { "EftTerminalId", eftTerminalId }, 
                { "HostName", hostName }, 
                { "HardwareProfileId", hardwareProfileId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreHardwareStationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependency as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependency> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependency as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dependentProductNumber">The value of dependentProductNumber</param>
        /// <param name="dependencyLegalEntityId">The value of dependencyLegalEntityId</param>
        /// <param name="dependencyTransactionDescription">The value of dependencyTransactionDescription</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependency> _source,
            string dependentProductNumber, 
            string dependencyLegalEntityId, 
            string dependencyTransactionDescription, 
            string engineeringChangeOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DependentProductNumber", dependentProductNumber }, 
                { "DependencyLegalEntityId", dependencyLegalEntityId }, 
                { "DependencyTransactionDescription", dependencyTransactionDescription }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VariableCompensationEnrollment as global::Microsoft.Dynamics.DataEntities.VariableCompensationEnrollmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VariableCompensationEnrollmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VariableCompensationEnrollment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VariableCompensationEnrollmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VariableCompensationEnrollment as global::Microsoft.Dynamics.DataEntities.VariableCompensationEnrollmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="plan">The value of plan</param>
        /// <param name="effectiveDate">The value of effectiveDate</param>
        public static global::Microsoft.Dynamics.DataEntities.VariableCompensationEnrollmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VariableCompensationEnrollment> _source,
            string dataAreaId, 
            string personnelNumber, 
            string plan, 
            global::System.DateTimeOffset effectiveDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PersonnelNumber", personnelNumber }, 
                { "Plan", plan }, 
                { "EffectiveDate", effectiveDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.VariableCompensationEnrollmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBack as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBack> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBack as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="tradeAllowanceAgreementMerchandisingEventId">The value of tradeAllowanceAgreementMerchandisingEventId</param>
        /// <param name="billBackId">The value of billBackId</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBack> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementId, 
            string customerAccountNumber, 
            string tradeAllowanceAgreementMerchandisingEventId, 
            string billBackId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "TradeAllowanceAgreementMerchandisingEventId", tradeAllowanceAgreementMerchandisingEventId }, 
                { "BillBackId", billBackId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventBillBackSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventorySiteOnHandIncludingCatchWeightItem as global::Microsoft.Dynamics.DataEntities.InventorySiteOnHandIncludingCatchWeightItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventorySiteOnHandIncludingCatchWeightItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventorySiteOnHandIncludingCatchWeightItem> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventorySiteOnHandIncludingCatchWeightItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventorySiteOnHandIncludingCatchWeightItem as global::Microsoft.Dynamics.DataEntities.InventorySiteOnHandIncludingCatchWeightItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="inventorySiteId">The value of inventorySiteId</param>
        public static global::Microsoft.Dynamics.DataEntities.InventorySiteOnHandIncludingCatchWeightItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventorySiteOnHandIncludingCatchWeightItem> _source,
            string dataAreaId, 
            string itemNumber, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            string inventorySiteId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "InventorySiteId", inventorySiteId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventorySiteOnHandIncludingCatchWeightItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchOrderHeader as global::Microsoft.Dynamics.DataEntities.BatchOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchOrderHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BatchOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchOrderHeader as global::Microsoft.Dynamics.DataEntities.BatchOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="batchOrderNumber">The value of batchOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchOrderHeader> _source,
            string dataAreaId, 
            string batchOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BatchOrderNumber", batchOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BatchOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementTaxLine as global::Microsoft.Dynamics.DataEntities.PayStatementTaxLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementTaxLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementTaxLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayStatementTaxLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementTaxLine as global::Microsoft.Dynamics.DataEntities.PayStatementTaxLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementTaxLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementTaxLine> _source,
            string payStatementNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PayStatementNumber", payStatementNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayStatementTaxLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.GoalHeading as global::Microsoft.Dynamics.DataEntities.GoalHeadingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.GoalHeadingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.GoalHeading> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.GoalHeadingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.GoalHeading as global::Microsoft.Dynamics.DataEntities.GoalHeadingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="goalHeadingId">The value of goalHeadingId</param>
        public static global::Microsoft.Dynamics.DataEntities.GoalHeadingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.GoalHeading> _source,
            string goalHeadingId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GoalHeadingId", goalHeadingId }
            };
            return new global::Microsoft.Dynamics.DataEntities.GoalHeadingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonCourse as global::Microsoft.Dynamics.DataEntities.PersonCourseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonCourseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonCourse> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonCourseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonCourse as global::Microsoft.Dynamics.DataEntities.PersonCourseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="courses">The value of courses</param>
        /// <param name="startDate">The value of startDate</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonCourseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonCourse> _source,
            string partyNumber, 
            string courses, 
            global::System.DateTimeOffset startDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "Courses", courses }, 
                { "StartDate", startDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonCourseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLine as global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLine as global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLine> _source,
            string payStatementNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PayStatementNumber", payStatementNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEvent as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEvent> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEvent as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="eventId">The value of eventId</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEvent> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementId, 
            string customerAccountNumber, 
            string eventId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "EventId", eventId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DistinctProduct as global::Microsoft.Dynamics.DataEntities.DistinctProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DistinctProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DistinctProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DistinctProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DistinctProduct as global::Microsoft.Dynamics.DataEntities.DistinctProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.DistinctProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DistinctProduct> _source,
            string productNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.DistinctProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSSalesOrderLine as global::Microsoft.Dynamics.DataEntities.CDSSalesOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSSalesOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSSalesOrderLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSSalesOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSSalesOrderLine as global::Microsoft.Dynamics.DataEntities.CDSSalesOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesOrderNumber">The value of salesOrderNumber</param>
        /// <param name="lineCreationSequenceNumber">The value of lineCreationSequenceNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSSalesOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSSalesOrderLine> _source,
            string dataAreaId, 
            string salesOrderNumber, 
            int lineCreationSequenceNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesOrderNumber", salesOrderNumber }, 
                { "LineCreationSequenceNumber", lineCreationSequenceNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSSalesOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeV2 as global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeV2 as global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="earningCodeId">The value of earningCodeId</param>
        /// <param name="positionId">The value of positionId</param>
        /// <param name="validFrom">The value of validFrom</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeV2> _source,
            string personnelNumber, 
            string earningCodeId, 
            string positionId, 
            global::System.DateTimeOffset validFrom)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "EarningCodeId", earningCodeId }, 
                { "PositionId", positionId }, 
                { "ValidFrom", validFrom }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PaymentDay as global::Microsoft.Dynamics.DataEntities.PaymentDaySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PaymentDaySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PaymentDay> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PaymentDaySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PaymentDay as global::Microsoft.Dynamics.DataEntities.PaymentDaySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="name">The value of name</param>
        /// <param name="frequency">The value of frequency</param>
        /// <param name="dayOfWeek">The value of dayOfWeek</param>
        /// <param name="dayOfMonth">The value of dayOfMonth</param>
        public static global::Microsoft.Dynamics.DataEntities.PaymentDaySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PaymentDay> _source,
            string dataAreaId, 
            string name, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.WeekMonth> frequency, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.WeekDays> dayOfWeek, 
            int dayOfMonth)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Name", name }, 
                { "Frequency", frequency }, 
                { "DayOfWeek", dayOfWeek }, 
                { "DayOfMonth", dayOfMonth }
            };
            return new global::Microsoft.Dynamics.DataEntities.PaymentDaySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MultilineDiscountVendorGroup as global::Microsoft.Dynamics.DataEntities.MultilineDiscountVendorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MultilineDiscountVendorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MultilineDiscountVendorGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MultilineDiscountVendorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MultilineDiscountVendorGroup as global::Microsoft.Dynamics.DataEntities.MultilineDiscountVendorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.MultilineDiscountVendorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MultilineDiscountVendorGroup> _source,
            string dataAreaId, 
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupCode", groupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.MultilineDiscountVendorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlGroupOverBudgetPermission as global::Microsoft.Dynamics.DataEntities.BudgetControlGroupOverBudgetPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlGroupOverBudgetPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlGroupOverBudgetPermission> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlGroupOverBudgetPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlGroupOverBudgetPermission as global::Microsoft.Dynamics.DataEntities.BudgetControlGroupOverBudgetPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="budgetGroupName">The value of budgetGroupName</param>
        /// <param name="userGroupId">The value of userGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlGroupOverBudgetPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlGroupOverBudgetPermission> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            string budgetGroupName, 
            string userGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "BudgetGroupName", budgetGroupName }, 
                { "UserGroupId", userGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlGroupOverBudgetPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalHeader as global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalHeader as global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalHeader> _source,
            string dataAreaId, 
            string journalNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineNote as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineNoteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineNoteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineNote> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineNoteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineNote as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineNoteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workOrderId">The value of workOrderId</param>
        /// <param name="workOrderLineNumber">The value of workOrderLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineNoteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineNote> _source,
            string dataAreaId, 
            string workOrderId, 
            long workOrderLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkOrderId", workOrderId }, 
                { "WorkOrderLineNumber", workOrderLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineNoteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailChannel as global::Microsoft.Dynamics.DataEntities.RetailChannelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailChannelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailChannel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailChannelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailChannel as global::Microsoft.Dynamics.DataEntities.RetailChannelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="retailChannelId">The value of retailChannelId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailChannelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailChannel> _source,
            string dataAreaId, 
            string retailChannelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RetailChannelId", retailChannelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailChannelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultArea as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultAreaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultAreaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultArea> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultAreaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultArea as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultAreaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="faultAreaId">The value of faultAreaId</param>
        /// <param name="faultSymptomId">The value of faultSymptomId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultAreaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultArea> _source,
            string dataAreaId, 
            string maintenanceAssetTypeId, 
            string faultAreaId, 
            string faultSymptomId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "FaultAreaId", faultAreaId }, 
                { "FaultSymptomId", faultSymptomId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultAreaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLineLedgerJournal as global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLineLedgerJournalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLineLedgerJournalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLineLedgerJournal> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLineLedgerJournalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLineLedgerJournal as global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLineLedgerJournalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="recordId">The value of recordId</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLineLedgerJournalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLineLedgerJournal> _source,
            string dataAreaId, 
            long recordId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RecordId", recordId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentInvoiceLineLedgerJournalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicyCheck as global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicyCheckSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicyCheckSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicyCheck> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicyCheckSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicyCheck as global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicyCheckSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productReadinessPolicyName">The value of productReadinessPolicyName</param>
        /// <param name="checkName">The value of checkName</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="processArea">The value of processArea</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicyCheckSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicyCheck> _source,
            string dataAreaId, 
            string productReadinessPolicyName, 
            string checkName, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.EngChgReadinessModule> processArea)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductReadinessPolicyName", productReadinessPolicyName }, 
                { "CheckName", checkName }, 
                { "LegalEntityId", legalEntityId }, 
                { "ProcessArea", processArea }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicyCheckSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompFixedPlanTable as global::Microsoft.Dynamics.DataEntities.CompFixedPlanTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompFixedPlanTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompFixedPlanTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompFixedPlanTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompFixedPlanTable as global::Microsoft.Dynamics.DataEntities.CompFixedPlanTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="plan">The value of plan</param>
        public static global::Microsoft.Dynamics.DataEntities.CompFixedPlanTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompFixedPlanTable> _source,
            string dataAreaId, 
            string plan)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Plan", plan }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompFixedPlanTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CallCenterCatalogCoupon as global::Microsoft.Dynamics.DataEntities.CallCenterCatalogCouponSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CallCenterCatalogCouponSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CallCenterCatalogCoupon> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CallCenterCatalogCouponSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CallCenterCatalogCoupon as global::Microsoft.Dynamics.DataEntities.CallCenterCatalogCouponSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="catalogCode">The value of catalogCode</param>
        /// <param name="couponId">The value of couponId</param>
        /// <param name="catalogNumber">The value of catalogNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CallCenterCatalogCouponSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CallCenterCatalogCoupon> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.MCRTableAll> catalogCode, 
            string couponId, 
            string catalogNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CatalogCode", catalogCode }, 
                { "CouponId", couponId }, 
                { "CatalogNumber", catalogNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CallCenterCatalogCouponSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationBasisRule as global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationBasisRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationBasisRule as global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="basisId">The value of basisId</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationBasisRule> _source,
            string dataAreaId, 
            string basisId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BasisId", basisId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AllocationBasisRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CostingVersion as global::Microsoft.Dynamics.DataEntities.CostingVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CostingVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CostingVersion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CostingVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CostingVersion as global::Microsoft.Dynamics.DataEntities.CostingVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="versionId">The value of versionId</param>
        public static global::Microsoft.Dynamics.DataEntities.CostingVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CostingVersion> _source,
            string dataAreaId, 
            string versionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VersionId", versionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CostingVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductCategoryAssignment as global::Microsoft.Dynamics.DataEntities.ProductCategoryAssignmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductCategoryAssignmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductCategoryAssignment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductCategoryAssignmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductCategoryAssignment as global::Microsoft.Dynamics.DataEntities.ProductCategoryAssignmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="productCategoryName">The value of productCategoryName</param>
        /// <param name="productCategoryHierarchyName">The value of productCategoryHierarchyName</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductCategoryAssignmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductCategoryAssignment> _source,
            string productNumber, 
            string productCategoryName, 
            string productCategoryHierarchyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }, 
                { "ProductCategoryName", productCategoryName }, 
                { "ProductCategoryHierarchyName", productCategoryHierarchyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductCategoryAssignmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseSharedSubCategory as global::Microsoft.Dynamics.DataEntities.ExpenseSharedSubCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseSharedSubCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseSharedSubCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExpenseSharedSubCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseSharedSubCategory as global::Microsoft.Dynamics.DataEntities.ExpenseSharedSubCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        /// <param name="sharedCategoryId">The value of sharedCategoryId</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseSharedSubCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseSharedSubCategory> _source,
            string name, 
            string sharedCategoryId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }, 
                { "SharedCategoryId", sharedCategoryId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExpenseSharedSubCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressPostalCodeV3 as global::Microsoft.Dynamics.DataEntities.AddressPostalCodeV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressPostalCodeV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressPostalCodeV3> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AddressPostalCodeV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressPostalCodeV3 as global::Microsoft.Dynamics.DataEntities.AddressPostalCodeV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="zipCode">The value of zipCode</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        /// <param name="stateId">The value of stateId</param>
        /// <param name="countyId">The value of countyId</param>
        /// <param name="cityId">The value of cityId</param>
        /// <param name="districtId">The value of districtId</param>
        /// <param name="streetNumberMinimum">The value of streetNumberMinimum</param>
        /// <param name="streetNumberMaximum">The value of streetNumberMaximum</param>
        /// <param name="streetNumberValidity">The value of streetNumberValidity</param>
        /// <param name="street">The value of street</param>
        /// <param name="timeZone">The value of timeZone</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressPostalCodeV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressPostalCodeV3> _source,
            string zipCode, 
            string countryRegionId, 
            string stateId, 
            string countyId, 
            string cityId, 
            string districtId, 
            int streetNumberMinimum, 
            int streetNumberMaximum, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.AllEvenOdd> streetNumberValidity, 
            string street, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.Timezone> timeZone)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ZipCode", zipCode }, 
                { "CountryRegionId", countryRegionId }, 
                { "StateId", stateId }, 
                { "CountyId", countyId }, 
                { "CityId", cityId }, 
                { "DistrictId", districtId }, 
                { "StreetNumberMinimum", streetNumberMinimum }, 
                { "StreetNumberMaximum", streetNumberMaximum }, 
                { "StreetNumberValidity", streetNumberValidity }, 
                { "Street", street }, 
                { "TimeZone", timeZone }
            };
            return new global::Microsoft.Dynamics.DataEntities.AddressPostalCodeV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressCountryRegion as global::Microsoft.Dynamics.DataEntities.AddressCountryRegionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressCountryRegionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressCountryRegion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AddressCountryRegionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressCountryRegion as global::Microsoft.Dynamics.DataEntities.AddressCountryRegionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="countryRegion">The value of countryRegion</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressCountryRegionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressCountryRegion> _source,
            string countryRegion)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CountryRegion", countryRegion }
            };
            return new global::Microsoft.Dynamics.DataEntities.AddressCountryRegionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogProduct as global::Microsoft.Dynamics.DataEntities.RetailCatalogProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogProduct as global::Microsoft.Dynamics.DataEntities.RetailCatalogProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="catalogNumber">The value of catalogNumber</param>
        /// <param name="displayProductNumber">The value of displayProductNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogProduct> _source,
            string catalogNumber, 
            string displayProductNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CatalogNumber", catalogNumber }, 
                { "DisplayProductNumber", displayProductNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandEntry as global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandEntry as global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="requestId">The value of requestId</param>
        /// <param name="inventorySiteId">The value of inventorySiteId</param>
        /// <param name="inventoryWarehouseId">The value of inventoryWarehouseId</param>
        /// <param name="aTPDate">The value of aTPDate</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandEntry> _source,
            string dataAreaId, 
            string requestId, 
            string inventorySiteId, 
            string inventoryWarehouseId, 
            global::System.DateTimeOffset aTPDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RequestId", requestId }, 
                { "InventorySiteId", inventorySiteId }, 
                { "InventoryWarehouseId", inventoryWarehouseId }, 
                { "ATPDate", aTPDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseLocationHotel as global::Microsoft.Dynamics.DataEntities.CourseLocationHotelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseLocationHotelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseLocationHotel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseLocationHotelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseLocationHotel as global::Microsoft.Dynamics.DataEntities.CourseLocationHotelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="courseId">The value of courseId</param>
        /// <param name="courseLocation">The value of courseLocation</param>
        /// <param name="hotel">The value of hotel</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseLocationHotelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseLocationHotel> _source,
            string dataAreaId, 
            string courseId, 
            string courseLocation, 
            string hotel)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CourseId", courseId }, 
                { "CourseLocation", courseLocation }, 
                { "Hotel", hotel }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseLocationHotelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalCloseLedgerOptions as global::Microsoft.Dynamics.DataEntities.FiscalCloseLedgerOptionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalCloseLedgerOptionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalCloseLedgerOptions> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FiscalCloseLedgerOptionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalCloseLedgerOptions as global::Microsoft.Dynamics.DataEntities.FiscalCloseLedgerOptionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="ledgerFiscalCloseGroupName">The value of ledgerFiscalCloseGroupName</param>
        /// <param name="legalEntity">The value of legalEntity</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalCloseLedgerOptionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalCloseLedgerOptions> _source,
            string ledgerFiscalCloseGroupName, 
            string legalEntity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LedgerFiscalCloseGroupName", ledgerFiscalCloseGroupName }, 
                { "LegalEntity", legalEntity }
            };
            return new global::Microsoft.Dynamics.DataEntities.FiscalCloseLedgerOptionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADParameters as global::Microsoft.Dynamics.DataEntities.SADParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SADParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADParameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SADParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADParameters as global::Microsoft.Dynamics.DataEntities.SADParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        public static global::Microsoft.Dynamics.DataEntities.SADParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADParameters> _source,
            string dataAreaId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SADParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MultilineDiscountCustomerGroup as global::Microsoft.Dynamics.DataEntities.MultilineDiscountCustomerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MultilineDiscountCustomerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MultilineDiscountCustomerGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MultilineDiscountCustomerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MultilineDiscountCustomerGroup as global::Microsoft.Dynamics.DataEntities.MultilineDiscountCustomerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.MultilineDiscountCustomerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MultilineDiscountCustomerGroup> _source,
            string dataAreaId, 
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupCode", groupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.MultilineDiscountCustomerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseRoom as global::Microsoft.Dynamics.DataEntities.CourseRoomSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseRoomSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseRoom> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseRoomSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseRoom as global::Microsoft.Dynamics.DataEntities.CourseRoomSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="classroom">The value of classroom</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseRoomSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseRoom> _source,
            string dataAreaId, 
            string classroom)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Classroom", classroom }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseRoomSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PriceCustomerGroup as global::Microsoft.Dynamics.DataEntities.PriceCustomerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PriceCustomerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PriceCustomerGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PriceCustomerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PriceCustomerGroup as global::Microsoft.Dynamics.DataEntities.PriceCustomerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.PriceCustomerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PriceCustomerGroup> _source,
            string dataAreaId, 
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupCode", groupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.PriceCustomerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetSubModel as global::Microsoft.Dynamics.DataEntities.BudgetSubModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetSubModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetSubModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetSubModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetSubModel as global::Microsoft.Dynamics.DataEntities.BudgetSubModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="budgetModel">The value of budgetModel</param>
        /// <param name="submodel">The value of submodel</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetSubModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetSubModel> _source,
            string dataAreaId, 
            string budgetModel, 
            string submodel)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BudgetModel", budgetModel }, 
                { "Submodel", submodel }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetSubModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimensionAttribute as global::Microsoft.Dynamics.DataEntities.DimensionAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DimensionAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionAttribute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DimensionAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimensionAttribute as global::Microsoft.Dynamics.DataEntities.DimensionAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dimensionName">The value of dimensionName</param>
        public static global::Microsoft.Dynamics.DataEntities.DimensionAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionAttribute> _source,
            string dimensionName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DimensionName", dimensionName }
            };
            return new global::Microsoft.Dynamics.DataEntities.DimensionAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductTranslation as global::Microsoft.Dynamics.DataEntities.ProductTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductTranslation as global::Microsoft.Dynamics.DataEntities.ProductTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductTranslation> _source,
            string productNumber, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectEmplForecast as global::Microsoft.Dynamics.DataEntities.ProjectEmplForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectEmplForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectEmplForecast> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectEmplForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectEmplForecast as global::Microsoft.Dynamics.DataEntities.ProjectEmplForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="transactionID">The value of transactionID</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectEmplForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectEmplForecast> _source,
            string dataAreaId, 
            string transactionID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TransactionID", transactionID }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectEmplForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workOrderTypeId">The value of workOrderTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderType> _source,
            string dataAreaId, 
            string workOrderTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkOrderTypeId", workOrderTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetBookV2 as global::Microsoft.Dynamics.DataEntities.FixedAssetBookV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetBookV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetBookV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetBookV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetBookV2 as global::Microsoft.Dynamics.DataEntities.FixedAssetBookV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fixedAssetNumber">The value of fixedAssetNumber</param>
        /// <param name="bookId">The value of bookId</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetBookV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetBookV2> _source,
            string dataAreaId, 
            string fixedAssetNumber, 
            string bookId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FixedAssetNumber", fixedAssetNumber }, 
                { "BookId", bookId }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetBookV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationLevel as global::Microsoft.Dynamics.DataEntities.CompensationLevelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationLevelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationLevel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationLevelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationLevel as global::Microsoft.Dynamics.DataEntities.CompensationLevelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="level">The value of level</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationLevelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationLevel> _source,
            string level)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Level", level }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationLevelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalLine as global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalLine as global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalLine> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchOrderFormulaLine as global::Microsoft.Dynamics.DataEntities.BatchOrderFormulaLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchOrderFormulaLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchOrderFormulaLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BatchOrderFormulaLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchOrderFormulaLine as global::Microsoft.Dynamics.DataEntities.BatchOrderFormulaLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="batchOrderNumber">The value of batchOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchOrderFormulaLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchOrderFormulaLine> _source,
            string dataAreaId, 
            decimal lineNumber, 
            string batchOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LineNumber", lineNumber }, 
                { "BatchOrderNumber", batchOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BatchOrderFormulaLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Operation as global::Microsoft.Dynamics.DataEntities.OperationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OperationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Operation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OperationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Operation as global::Microsoft.Dynamics.DataEntities.OperationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operationId">The value of operationId</param>
        public static global::Microsoft.Dynamics.DataEntities.OperationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Operation> _source,
            string dataAreaId, 
            string operationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperationId", operationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.OperationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeliveryModeV2 as global::Microsoft.Dynamics.DataEntities.DeliveryModeV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DeliveryModeV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeliveryModeV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DeliveryModeV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeliveryModeV2 as global::Microsoft.Dynamics.DataEntities.DeliveryModeV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="modeCode">The value of modeCode</param>
        public static global::Microsoft.Dynamics.DataEntities.DeliveryModeV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeliveryModeV2> _source,
            string dataAreaId, 
            string modeCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ModeCode", modeCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.DeliveryModeV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationLine as global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationLine as global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesOrderNumber">The value of salesOrderNumber</param>
        /// <param name="confirmationDate">The value of confirmationDate</param>
        /// <param name="confirmationNumber">The value of confirmationNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationLine> _source,
            string dataAreaId, 
            string salesOrderNumber, 
            global::System.DateTimeOffset confirmationDate, 
            string confirmationNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesOrderNumber", salesOrderNumber }, 
                { "ConfirmationDate", confirmationDate }, 
                { "ConfirmationNumber", confirmationNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompFixedEmpl as global::Microsoft.Dynamics.DataEntities.CompFixedEmplSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompFixedEmplSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompFixedEmpl> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompFixedEmplSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompFixedEmpl as global::Microsoft.Dynamics.DataEntities.CompFixedEmplSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="positionId">The value of positionId</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="plan">The value of plan</param>
        /// <param name="effectiveDate">The value of effectiveDate</param>
        /// <param name="action">The value of action</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CompFixedEmplSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompFixedEmpl> _source,
            string dataAreaId, 
            string positionId, 
            string personnelNumber, 
            string plan, 
            global::System.DateTimeOffset effectiveDate, 
            string action, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PositionId", positionId }, 
                { "PersonnelNumber", personnelNumber }, 
                { "Plan", plan }, 
                { "EffectiveDate", effectiveDate }, 
                { "Action", action }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompFixedEmplSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLine as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLine as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseAgreementId">The value of purchaseAgreementId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLine> _source,
            string dataAreaId, 
            string purchaseAgreementId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseAgreementId", purchaseAgreementId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalCalendarYearEntity as global::Microsoft.Dynamics.DataEntities.FiscalCalendarYearEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalCalendarYearEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalCalendarYearEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FiscalCalendarYearEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalCalendarYearEntity as global::Microsoft.Dynamics.DataEntities.FiscalCalendarYearEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="fiscalCalendar_CalendarId">The value of fiscalCalendar_CalendarId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalCalendarYearEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalCalendarYearEntity> _source,
            string fiscalCalendar_CalendarId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FiscalCalendar_CalendarId", fiscalCalendar_CalendarId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.FiscalCalendarYearEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementAccount as global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementAccount as global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="mainAccountId">The value of mainAccountId</param>
        /// <param name="chartOfAccounts">The value of chartOfAccounts</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementAccount> _source,
            string mainAccountId, 
            string chartOfAccounts)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "MainAccountId", mainAccountId }, 
                { "ChartOfAccounts", chartOfAccounts }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerTransSettlementAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RouteVersionV2 as global::Microsoft.Dynamics.DataEntities.RouteVersionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RouteVersionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RouteVersionV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RouteVersionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RouteVersionV2 as global::Microsoft.Dynamics.DataEntities.RouteVersionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="validFromQuantity">The value of validFromQuantity</param>
        /// <param name="validFromDate">The value of validFromDate</param>
        /// <param name="routeId">The value of routeId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="isActive">The value of isActive</param>
        public static global::Microsoft.Dynamics.DataEntities.RouteVersionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RouteVersionV2> _source,
            string dataAreaId, 
            decimal validFromQuantity, 
            global::System.DateTimeOffset validFromDate, 
            string routeId, 
            string productSizeId, 
            string productColorId, 
            string productionSiteId, 
            string productConfigurationId, 
            string productStyleId, 
            string productVersionId, 
            string itemNumber, 
            int isActive)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ValidFromQuantity", validFromQuantity }, 
                { "ValidFromDate", validFromDate }, 
                { "RouteId", routeId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductColorId", productColorId }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "ItemNumber", itemNumber }, 
                { "IsActive", isActive }
            };
            return new global::Microsoft.Dynamics.DataEntities.RouteVersionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressCountryRegionTranslation as global::Microsoft.Dynamics.DataEntities.AddressCountryRegionTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressCountryRegionTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressCountryRegionTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AddressCountryRegionTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressCountryRegionTranslation as global::Microsoft.Dynamics.DataEntities.AddressCountryRegionTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressCountryRegionTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressCountryRegionTranslation> _source,
            string countryRegionId, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CountryRegionId", countryRegionId }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AddressCountryRegionTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetMaintenancePlan as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetMaintenancePlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetMaintenancePlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetMaintenancePlan> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetMaintenancePlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetMaintenancePlan as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetMaintenancePlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="maintenancePlanId">The value of maintenancePlanId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetMaintenancePlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetMaintenancePlan> _source,
            string dataAreaId, 
            string maintenanceAssetId, 
            string maintenancePlanId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "MaintenancePlanId", maintenancePlanId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetMaintenancePlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentLinePurchaseOrder as global::Microsoft.Dynamics.DataEntities.SADDocumentLinePurchaseOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentLinePurchaseOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentLinePurchaseOrder> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentLinePurchaseOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentLinePurchaseOrder as global::Microsoft.Dynamics.DataEntities.SADDocumentLinePurchaseOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="documentCode">The value of documentCode</param>
        /// <param name="position">The value of position</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentLinePurchaseOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentLinePurchaseOrder> _source,
            string dataAreaId, 
            string documentCode, 
            int position)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DocumentCode", documentCode }, 
                { "Position", position }
            };
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentLinePurchaseOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RAssetJournalLine as global::Microsoft.Dynamics.DataEntities.RAssetJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RAssetJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RAssetJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RAssetJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RAssetJournalLine as global::Microsoft.Dynamics.DataEntities.RAssetJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RAssetJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RAssetJournalLine> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RAssetJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesQuotationHeader as global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesQuotationHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesQuotationHeader as global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesQuotationNumber">The value of salesQuotationNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesQuotationHeader> _source,
            string dataAreaId, 
            string salesQuotationNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesQuotationNumber", salesQuotationNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Contractor as global::Microsoft.Dynamics.DataEntities.ContractorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ContractorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Contractor> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ContractorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Contractor as global::Microsoft.Dynamics.DataEntities.ContractorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="employmentLegalEntityId">The value of employmentLegalEntityId</param>
        /// <param name="employmentStartDate">The value of employmentStartDate</param>
        /// <param name="employmentEndDate">The value of employmentEndDate</param>
        public static global::Microsoft.Dynamics.DataEntities.ContractorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Contractor> _source,
            string personnelNumber, 
            string employmentLegalEntityId, 
            global::System.DateTimeOffset employmentStartDate, 
            global::System.DateTimeOffset employmentEndDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "EmploymentLegalEntityId", employmentLegalEntityId }, 
                { "EmploymentStartDate", employmentStartDate }, 
                { "EmploymentEndDate", employmentEndDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.ContractorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitPlanDefaultDimension as global::Microsoft.Dynamics.DataEntities.BenefitPlanDefaultDimensionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitPlanDefaultDimensionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitPlanDefaultDimension> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitPlanDefaultDimensionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitPlanDefaultDimension as global::Microsoft.Dynamics.DataEntities.BenefitPlanDefaultDimensionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitPlanId">The value of benefitPlanId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitPlanDefaultDimensionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitPlanDefaultDimension> _source,
            string benefitPlanId, 
            string legalEntityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitPlanId", benefitPlanId }, 
                { "LegalEntityId", legalEntityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitPlanDefaultDimensionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlDocumentsAndJournals as global::Microsoft.Dynamics.DataEntities.BudgetControlDocumentsAndJournalsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlDocumentsAndJournalsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlDocumentsAndJournals> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlDocumentsAndJournalsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlDocumentsAndJournals as global::Microsoft.Dynamics.DataEntities.BudgetControlDocumentsAndJournalsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="documentOrJournal">The value of documentOrJournal</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlDocumentsAndJournalsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlDocumentsAndJournals> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlSourceIntegrator> documentOrJournal)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "DocumentOrJournal", documentOrJournal }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlDocumentsAndJournalsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ChannelCategoryAttribute as global::Microsoft.Dynamics.DataEntities.ChannelCategoryAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ChannelCategoryAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ChannelCategoryAttribute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ChannelCategoryAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ChannelCategoryAttribute as global::Microsoft.Dynamics.DataEntities.ChannelCategoryAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="retailChannelId">The value of retailChannelId</param>
        /// <param name="productCategoryHierarchyName">The value of productCategoryHierarchyName</param>
        /// <param name="productCategoryName">The value of productCategoryName</param>
        /// <param name="attributeName">The value of attributeName</param>
        /// <param name="attributeTypeName">The value of attributeTypeName</param>
        public static global::Microsoft.Dynamics.DataEntities.ChannelCategoryAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ChannelCategoryAttribute> _source,
            string retailChannelId, 
            string productCategoryHierarchyName, 
            string productCategoryName, 
            string attributeName, 
            string attributeTypeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RetailChannelId", retailChannelId }, 
                { "ProductCategoryHierarchyName", productCategoryHierarchyName }, 
                { "ProductCategoryName", productCategoryName }, 
                { "AttributeName", attributeName }, 
                { "AttributeTypeName", attributeTypeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ChannelCategoryAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjExpenseCategoryExport as global::Microsoft.Dynamics.DataEntities.ProjExpenseCategoryExportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjExpenseCategoryExportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjExpenseCategoryExport> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjExpenseCategoryExportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjExpenseCategoryExport as global::Microsoft.Dynamics.DataEntities.ProjExpenseCategoryExportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="costType">The value of costType</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjExpenseCategoryExportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjExpenseCategoryExport> _source,
            string dataAreaId, 
            string costType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CostType", costType }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjExpenseCategoryExportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimAttributeMainAccount as global::Microsoft.Dynamics.DataEntities.DimAttributeMainAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DimAttributeMainAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimAttributeMainAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DimAttributeMainAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimAttributeMainAccount as global::Microsoft.Dynamics.DataEntities.DimAttributeMainAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="value">The value of value</param>
        public static global::Microsoft.Dynamics.DataEntities.DimAttributeMainAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimAttributeMainAccount> _source,
            string value)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Value", value }
            };
            return new global::Microsoft.Dynamics.DataEntities.DimAttributeMainAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineV2 as global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineV2 as global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineV2> _source,
            string dataAreaId, 
            string purchaseOrderNumber, 
            long lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLine as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLine as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workOrderId">The value of workOrderId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLine> _source,
            string dataAreaId, 
            string workOrderId, 
            long lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkOrderId", workOrderId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailChannelReport as global::Microsoft.Dynamics.DataEntities.RetailChannelReportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailChannelReportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailChannelReport> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailChannelReportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailChannelReport as global::Microsoft.Dynamics.DataEntities.RetailChannelReportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="reportID">The value of reportID</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailChannelReportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailChannelReport> _source,
            string reportID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ReportID", reportID }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailChannelReportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailLoyaltyPriceGroup as global::Microsoft.Dynamics.DataEntities.RetailLoyaltyPriceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailLoyaltyPriceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailLoyaltyPriceGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailLoyaltyPriceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailLoyaltyPriceGroup as global::Microsoft.Dynamics.DataEntities.RetailLoyaltyPriceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="loyaltyName">The value of loyaltyName</param>
        /// <param name="priceCustomerGroupCode">The value of priceCustomerGroupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailLoyaltyPriceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailLoyaltyPriceGroup> _source,
            string dataAreaId, 
            string loyaltyName, 
            string priceCustomerGroupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LoyaltyName", loyaltyName }, 
                { "PriceCustomerGroupCode", priceCustomerGroupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailLoyaltyPriceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayout as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayout> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayout as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="layoutId">The value of layoutId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayout> _source,
            string layoutId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LayoutId", layoutId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RecSetupBasis as global::Microsoft.Dynamics.DataEntities.RecSetupBasisSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RecSetupBasisSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RecSetupBasis> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RecSetupBasisSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RecSetupBasis as global::Microsoft.Dynamics.DataEntities.RecSetupBasisSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemId">The value of itemId</param>
        /// <param name="itemGroup">The value of itemGroup</param>
        public static global::Microsoft.Dynamics.DataEntities.RecSetupBasisSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RecSetupBasis> _source,
            string dataAreaId, 
            string itemId, 
            string itemGroup)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemId", itemId }, 
                { "ItemGroup", itemGroup }
            };
            return new global::Microsoft.Dynamics.DataEntities.RecSetupBasisSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FormulaVersion as global::Microsoft.Dynamics.DataEntities.FormulaVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FormulaVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FormulaVersion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FormulaVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FormulaVersion as global::Microsoft.Dynamics.DataEntities.FormulaVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="manufacturedItemNumber">The value of manufacturedItemNumber</param>
        /// <param name="formulaId">The value of formulaId</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="isActive">The value of isActive</param>
        /// <param name="validFromDate">The value of validFromDate</param>
        /// <param name="fromQuantity">The value of fromQuantity</param>
        public static global::Microsoft.Dynamics.DataEntities.FormulaVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FormulaVersion> _source,
            string dataAreaId, 
            string manufacturedItemNumber, 
            string formulaId, 
            string productionSiteId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.NoYes> isActive, 
            global::System.DateTimeOffset validFromDate, 
            decimal fromQuantity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ManufacturedItemNumber", manufacturedItemNumber }, 
                { "FormulaId", formulaId }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "IsActive", isActive }, 
                { "ValidFromDate", validFromDate }, 
                { "FromQuantity", fromQuantity }
            };
            return new global::Microsoft.Dynamics.DataEntities.FormulaVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetGroup as global::Microsoft.Dynamics.DataEntities.FixedAssetGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetGroup as global::Microsoft.Dynamics.DataEntities.FixedAssetGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fixedAssetGroupId">The value of fixedAssetGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetGroup> _source,
            string dataAreaId, 
            string fixedAssetGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FixedAssetGroupId", fixedAssetGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InvoiceSubLineV2 as global::Microsoft.Dynamics.DataEntities.InvoiceSubLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InvoiceSubLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InvoiceSubLineV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InvoiceSubLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InvoiceSubLineV2 as global::Microsoft.Dynamics.DataEntities.InvoiceSubLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productReceiptNumber">The value of productReceiptNumber</param>
        /// <param name="invoiceLineReference">The value of invoiceLineReference</param>
        /// <param name="purchaseOrder">The value of purchaseOrder</param>
        /// <param name="invoiceLineNumber">The value of invoiceLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.InvoiceSubLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InvoiceSubLineV2> _source,
            string dataAreaId, 
            string productReceiptNumber, 
            string invoiceLineReference, 
            string purchaseOrder, 
            decimal invoiceLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductReceiptNumber", productReceiptNumber }, 
                { "InvoiceLineReference", invoiceLineReference }, 
                { "PurchaseOrder", purchaseOrder }, 
                { "InvoiceLineNumber", invoiceLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.InvoiceSubLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeParameter as global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeParameter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeParameter as global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="workerId">The value of workerId</param>
        /// <param name="taxCodeParameterName">The value of taxCodeParameterName</param>
        /// <param name="taxCodeId">The value of taxCodeId</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        /// <param name="companyInfoId">The value of companyInfoId</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeParameter> _source,
            string workerId, 
            string taxCodeParameterName, 
            string taxCodeId, 
            string countryRegionId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo, 
            string companyInfoId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "WorkerId", workerId }, 
                { "TaxCodeParameterName", taxCodeParameterName }, 
                { "TaxCodeId", taxCodeId }, 
                { "CountryRegionId", countryRegionId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }, 
                { "CompanyInfoId", companyInfoId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerTaxCodeParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductMaster as global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductMaster> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductMaster as global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductMaster> _source,
            string dataAreaId, 
            string itemNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobPreferredExam as global::Microsoft.Dynamics.DataEntities.JobPreferredExamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobPreferredExamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobPreferredExam> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobPreferredExamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobPreferredExam as global::Microsoft.Dynamics.DataEntities.JobPreferredExamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        /// <param name="testId">The value of testId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobPreferredExamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobPreferredExam> _source,
            string jobId, 
            string testId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }, 
                { "TestId", testId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobPreferredExamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchBookVATProcessParameter as global::Microsoft.Dynamics.DataEntities.PurchBookVATProcessParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchBookVATProcessParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchBookVATProcessParameter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchBookVATProcessParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchBookVATProcessParameter as global::Microsoft.Dynamics.DataEntities.PurchBookVATProcessParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="vATOperationCode">The value of vATOperationCode</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchBookVATProcessParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchBookVATProcessParameter> _source,
            string dataAreaId, 
            string vATOperationCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VATOperationCode", vATOperationCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchBookVATProcessParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AbsenceReason as global::Microsoft.Dynamics.DataEntities.AbsenceReasonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AbsenceReasonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AbsenceReason> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AbsenceReasonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AbsenceReason as global::Microsoft.Dynamics.DataEntities.AbsenceReasonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="absenceCode">The value of absenceCode</param>
        /// <param name="reasonCodeId">The value of reasonCodeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AbsenceReasonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AbsenceReason> _source,
            string dataAreaId, 
            string absenceCode, 
            string reasonCodeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AbsenceCode", absenceCode }, 
                { "ReasonCodeId", reasonCodeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AbsenceReasonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExchangeRateType as global::Microsoft.Dynamics.DataEntities.ExchangeRateTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExchangeRateTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExchangeRateType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExchangeRateTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExchangeRateType as global::Microsoft.Dynamics.DataEntities.ExchangeRateTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.ExchangeRateTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExchangeRateType> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExchangeRateTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperation as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperation as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operationId">The value of operationId</param>
        /// <param name="operationNumber">The value of operationNumber</param>
        /// <param name="engineeringChangeOrderProductRouteId">The value of engineeringChangeOrderProductRouteId</param>
        /// <param name="operationPriority">The value of operationPriority</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperation> _source,
            string dataAreaId, 
            string operationId, 
            int operationNumber, 
            string engineeringChangeOrderProductRouteId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RouteOprPriority> operationPriority, 
            string engineeringChangeOrderNumber, 
            decimal engineeringChangeOrderProductLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperationId", operationId }, 
                { "OperationNumber", operationNumber }, 
                { "EngineeringChangeOrderProductRouteId", engineeringChangeOrderProductRouteId }, 
                { "OperationPriority", operationPriority }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlRule as global::Microsoft.Dynamics.DataEntities.BudgetControlRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlRule as global::Microsoft.Dynamics.DataEntities.BudgetControlRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlRule> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSetupDerivedValueModel as global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSetupDerivedValueModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSetupDerivedValueModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSetupDerivedValueModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSetupDerivedValueModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSetupDerivedValueModel as global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSetupDerivedValueModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="valueModelId">The value of valueModelId</param>
        /// <param name="derivedValueModelId">The value of derivedValueModelId</param>
        /// <param name="transactionType">The value of transactionType</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSetupDerivedValueModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSetupDerivedValueModel> _source,
            string dataAreaId, 
            string valueModelId, 
            string derivedValueModelId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.AssetTransType> transactionType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ValueModelId", valueModelId }, 
                { "DerivedValueModelId", derivedValueModelId }, 
                { "TransactionType", transactionType }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetValueModelSetupDerivedValueModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorParameter as global::Microsoft.Dynamics.DataEntities.VendorParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorParameter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorParameter as global::Microsoft.Dynamics.DataEntities.VendorParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorParameter> _source,
            string dataAreaId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationEligibilityRule as global::Microsoft.Dynamics.DataEntities.CompensationEligibilityRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationEligibilityRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationEligibilityRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationEligibilityRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationEligibilityRule as global::Microsoft.Dynamics.DataEntities.CompensationEligibilityRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="eligibility">The value of eligibility</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationEligibilityRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationEligibilityRule> _source,
            string dataAreaId, 
            string eligibility)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Eligibility", eligibility }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationEligibilityRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCalendar as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCalendarSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCalendarSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCalendar> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCalendarSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCalendar as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCalendarSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="internalId">The value of internalId</param>
        /// <param name="expectedStartOriginal">The value of expectedStartOriginal</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="criticalityId">The value of criticalityId</param>
        /// <param name="criticalityName">The value of criticalityName</param>
        /// <param name="responsibleWorkerPersonnelNumber">The value of responsibleWorkerPersonnelNumber</param>
        /// <param name="jobTradeId">The value of jobTradeId</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        /// <param name="jobVariantId">The value of jobVariantId</param>
        /// <param name="responsibleWorkerGroupId">The value of responsibleWorkerGroupId</param>
        /// <param name="maintenancePlanId">The value of maintenancePlanId</param>
        /// <param name="maintenancePlanLineNumber">The value of maintenancePlanLineNumber</param>
        /// <param name="requestId">The value of requestId</param>
        /// <param name="maintenanceAssetRoundLineNumber">The value of maintenanceAssetRoundLineNumber</param>
        /// <param name="roundId">The value of roundId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCalendarSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCalendar> _source,
            string dataAreaId, 
            string internalId, 
            global::System.DateTimeOffset expectedStartOriginal, 
            string maintenanceAssetId, 
            int criticalityId, 
            string criticalityName, 
            string responsibleWorkerPersonnelNumber, 
            string jobTradeId, 
            string jobTypeId, 
            string jobVariantId, 
            string responsibleWorkerGroupId, 
            string maintenancePlanId, 
            decimal maintenancePlanLineNumber, 
            string requestId, 
            long maintenanceAssetRoundLineNumber, 
            string roundId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InternalId", internalId }, 
                { "ExpectedStartOriginal", expectedStartOriginal }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "CriticalityId", criticalityId }, 
                { "CriticalityName", criticalityName }, 
                { "ResponsibleWorkerPersonnelNumber", responsibleWorkerPersonnelNumber }, 
                { "JobTradeId", jobTradeId }, 
                { "JobTypeId", jobTypeId }, 
                { "JobVariantId", jobVariantId }, 
                { "ResponsibleWorkerGroupId", responsibleWorkerGroupId }, 
                { "MaintenancePlanId", maintenancePlanId }, 
                { "MaintenancePlanLineNumber", maintenancePlanLineNumber }, 
                { "RequestId", requestId }, 
                { "MaintenanceAssetRoundLineNumber", maintenanceAssetRoundLineNumber }, 
                { "RoundId", roundId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCalendarSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionDefaultDimension as global::Microsoft.Dynamics.DataEntities.PositionDefaultDimensionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionDefaultDimensionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionDefaultDimension> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionDefaultDimensionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionDefaultDimension as global::Microsoft.Dynamics.DataEntities.PositionDefaultDimensionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="positionId">The value of positionId</param>
        /// <param name="legalEntityDataArea">The value of legalEntityDataArea</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionDefaultDimensionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionDefaultDimension> _source,
            string dataAreaId, 
            string positionId, 
            string legalEntityDataArea)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PositionId", positionId }, 
                { "LegalEntityDataArea", legalEntityDataArea }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionDefaultDimensionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADItemCode as global::Microsoft.Dynamics.DataEntities.SADItemCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SADItemCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADItemCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SADItemCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADItemCode as global::Microsoft.Dynamics.DataEntities.SADItemCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemCommodityCode">The value of itemCommodityCode</param>
        public static global::Microsoft.Dynamics.DataEntities.SADItemCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADItemCode> _source,
            string dataAreaId, 
            string itemCommodityCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemCommodityCode", itemCommodityCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.SADItemCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditable as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditable as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operatingUnitNumber">The value of operatingUnitNumber</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="registerNumber">The value of registerNumber</param>
        /// <param name="transactionId">The value of transactionId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditable> _source,
            string dataAreaId, 
            string operatingUnitNumber, 
            string storeNumber, 
            string registerNumber, 
            string transactionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperatingUnitNumber", operatingUnitNumber }, 
                { "StoreNumber", storeNumber }, 
                { "RegisterNumber", registerNumber }, 
                { "TransactionId", transactionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitHcmDetail as global::Microsoft.Dynamics.DataEntities.BenefitHcmDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitHcmDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitHcmDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitHcmDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitHcmDetail as global::Microsoft.Dynamics.DataEntities.BenefitHcmDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitId">The value of benefitId</param>
        /// <param name="effective">The value of effective</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitHcmDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitHcmDetail> _source,
            string benefitId, 
            global::System.DateTimeOffset effective)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitId", benefitId }, 
                { "Effective", effective }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitHcmDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PaymentTerm as global::Microsoft.Dynamics.DataEntities.PaymentTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PaymentTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PaymentTerm> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PaymentTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PaymentTerm as global::Microsoft.Dynamics.DataEntities.PaymentTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.PaymentTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PaymentTerm> _source,
            string dataAreaId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.PaymentTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseParticipant as global::Microsoft.Dynamics.DataEntities.CourseParticipantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseParticipantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseParticipant> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseParticipantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseParticipant as global::Microsoft.Dynamics.DataEntities.CourseParticipantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="courseId">The value of courseId</param>
        /// <param name="personId">The value of personId</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseParticipantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseParticipant> _source,
            string dataAreaId, 
            string courseId, 
            string personId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CourseId", courseId }, 
                { "PersonId", personId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseParticipantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleV2 as global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleV2 as global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workPolicyName">The value of workPolicyName</param>
        /// <param name="workOrderType">The value of workOrderType</param>
        /// <param name="workProcess">The value of workProcess</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleV2> _source,
            string dataAreaId, 
            string workPolicyName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.WHSWorkTransType> workOrderType, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.WhsWorkProcess> workProcess)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkPolicyName", workPolicyName }, 
                { "WorkOrderType", workOrderType }, 
                { "WorkProcess", workProcess }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectV2 as global::Microsoft.Dynamics.DataEntities.ProjectV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectV2 as global::Microsoft.Dynamics.DataEntities.ProjectV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projectId">The value of projectId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectV2> _source,
            string dataAreaId, 
            string projectId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjectId", projectId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Responsibility as global::Microsoft.Dynamics.DataEntities.ResponsibilitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ResponsibilitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Responsibility> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ResponsibilitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Responsibility as global::Microsoft.Dynamics.DataEntities.ResponsibilitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="responsibilityId">The value of responsibilityId</param>
        public static global::Microsoft.Dynamics.DataEntities.ResponsibilitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Responsibility> _source,
            string responsibilityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ResponsibilityId", responsibilityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ResponsibilitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OrganizationHierarchyType as global::Microsoft.Dynamics.DataEntities.OrganizationHierarchyTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OrganizationHierarchyTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OrganizationHierarchyType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OrganizationHierarchyTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OrganizationHierarchyType as global::Microsoft.Dynamics.DataEntities.OrganizationHierarchyTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.OrganizationHierarchyTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OrganizationHierarchyType> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.OrganizationHierarchyTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlConfiguration as global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlConfiguration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlConfiguration as global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlConfiguration> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorker as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorker> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorker as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workerPersonnelNumber">The value of workerPersonnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorker> _source,
            string dataAreaId, 
            string workerPersonnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkerPersonnelNumber", workerPersonnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalDiscountCustomerGroup as global::Microsoft.Dynamics.DataEntities.TotalDiscountCustomerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalDiscountCustomerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalDiscountCustomerGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TotalDiscountCustomerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalDiscountCustomerGroup as global::Microsoft.Dynamics.DataEntities.TotalDiscountCustomerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalDiscountCustomerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalDiscountCustomerGroup> _source,
            string dataAreaId, 
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupCode", groupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.TotalDiscountCustomerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountV2 as global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountV2 as global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="currencyCode">The value of currencyCode</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="posting">The value of posting</param>
        public static global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountV2> _source,
            string currencyCode, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CurrencyGainLossAccountType> posting)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CurrencyCode", currencyCode }, 
                { "LegalEntityId", legalEntityId }, 
                { "Posting", posting }
            };
            return new global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetCode as global::Microsoft.Dynamics.DataEntities.BudgetCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetCode as global::Microsoft.Dynamics.DataEntities.BudgetCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="budgetCode">The value of budgetCode</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetCode> _source,
            string dataAreaId, 
            string budgetCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BudgetCode", budgetCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailAffiliation as global::Microsoft.Dynamics.DataEntities.RetailAffiliationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailAffiliationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailAffiliation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailAffiliationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailAffiliation as global::Microsoft.Dynamics.DataEntities.RetailAffiliationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailAffiliationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailAffiliation> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailAffiliationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseCategory as global::Microsoft.Dynamics.DataEntities.ExpenseCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExpenseCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseCategory as global::Microsoft.Dynamics.DataEntities.ExpenseCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="expenseCategory">The value of expenseCategory</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseCategory> _source,
            string dataAreaId, 
            string expenseCategory)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ExpenseCategory", expenseCategory }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExpenseCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobCardProductionJournalEntry as global::Microsoft.Dynamics.DataEntities.JobCardProductionJournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobCardProductionJournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobCardProductionJournalEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobCardProductionJournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobCardProductionJournalEntry as global::Microsoft.Dynamics.DataEntities.JobCardProductionJournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        /// <param name="journalLineNumber">The value of journalLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.JobCardProductionJournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobCardProductionJournalEntry> _source,
            string dataAreaId, 
            string journalNumber, 
            decimal journalLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }, 
                { "JournalLineNumber", journalLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobCardProductionJournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventFund as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventFundSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventFundSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventFund> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventFundSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventFund as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventFundSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="tradeAllowanceAgreementMerchandisingEventId">The value of tradeAllowanceAgreementMerchandisingEventId</param>
        /// <param name="promotionFundId">The value of promotionFundId</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventFundSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventFund> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementId, 
            string customerAccountNumber, 
            string tradeAllowanceAgreementMerchandisingEventId, 
            string promotionFundId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "TradeAllowanceAgreementMerchandisingEventId", tradeAllowanceAgreementMerchandisingEventId }, 
                { "PromotionFundId", promotionFundId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventFundSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CashDiscount as global::Microsoft.Dynamics.DataEntities.CashDiscountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CashDiscountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CashDiscount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CashDiscountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CashDiscount as global::Microsoft.Dynamics.DataEntities.CashDiscountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="cashDiscountCode">The value of cashDiscountCode</param>
        public static global::Microsoft.Dynamics.DataEntities.CashDiscountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CashDiscount> _source,
            string dataAreaId, 
            string cashDiscountCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CashDiscountCode", cashDiscountCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.CashDiscountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionWorkerAssignment as global::Microsoft.Dynamics.DataEntities.PositionWorkerAssignmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionWorkerAssignmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionWorkerAssignment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionWorkerAssignmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionWorkerAssignment as global::Microsoft.Dynamics.DataEntities.PositionWorkerAssignmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="positionId">The value of positionId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionWorkerAssignmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionWorkerAssignment> _source,
            string positionId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PositionId", positionId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionWorkerAssignmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineV2 as global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineV2 as global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="inventoryOwnerId">The value of inventoryOwnerId</param>
        /// <param name="inventoryStatusId">The value of inventoryStatusId</param>
        /// <param name="itemBatchNumber">The value of itemBatchNumber</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="itemSerialNumber">The value of itemSerialNumber</param>
        /// <param name="licensePlateNumber">The value of licensePlateNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="warehouseLocationId">The value of warehouseLocationId</param>
        /// <param name="warehouseWorkId">The value of warehouseWorkId</param>
        public static global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineV2> _source,
            string dataAreaId, 
            string inventoryOwnerId, 
            string inventoryStatusId, 
            string itemBatchNumber, 
            string itemNumber, 
            string itemSerialNumber, 
            string licensePlateNumber, 
            decimal lineNumber, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            string warehouseLocationId, 
            string warehouseWorkId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InventoryOwnerId", inventoryOwnerId }, 
                { "InventoryStatusId", inventoryStatusId }, 
                { "ItemBatchNumber", itemBatchNumber }, 
                { "ItemNumber", itemNumber }, 
                { "ItemSerialNumber", itemSerialNumber }, 
                { "LicensePlateNumber", licensePlateNumber }, 
                { "LineNumber", lineNumber }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "WarehouseLocationId", warehouseLocationId }, 
                { "WarehouseWorkId", warehouseWorkId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterColorTranslation as global::Microsoft.Dynamics.DataEntities.ProductMasterColorTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterColorTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterColorTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterColorTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterColorTranslation as global::Microsoft.Dynamics.DataEntities.ProductMasterColorTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productMasterColorId">The value of productMasterColorId</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterColorTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterColorTranslation> _source,
            string productMasterNumber, 
            string productMasterColorId, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductMasterColorId", productMasterColorId }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterColorTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalCalendarEntity as global::Microsoft.Dynamics.DataEntities.FiscalCalendarEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalCalendarEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalCalendarEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FiscalCalendarEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalCalendarEntity as global::Microsoft.Dynamics.DataEntities.FiscalCalendarEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="calendarId">The value of calendarId</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalCalendarEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalCalendarEntity> _source,
            string calendarId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CalendarId", calendarId }
            };
            return new global::Microsoft.Dynamics.DataEntities.FiscalCalendarEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ScreeningType as global::Microsoft.Dynamics.DataEntities.ScreeningTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ScreeningTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ScreeningType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ScreeningTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ScreeningType as global::Microsoft.Dynamics.DataEntities.ScreeningTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="screeningTypeId">The value of screeningTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.ScreeningTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ScreeningType> _source,
            string screeningTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ScreeningTypeId", screeningTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ScreeningTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EmploymentTerm as global::Microsoft.Dynamics.DataEntities.EmploymentTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EmploymentTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EmploymentTerm> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EmploymentTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EmploymentTerm as global::Microsoft.Dynamics.DataEntities.EmploymentTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="employmentStartDate">The value of employmentStartDate</param>
        /// <param name="employmentEndDate">The value of employmentEndDate</param>
        /// <param name="agreementTermId">The value of agreementTermId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.EmploymentTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EmploymentTerm> _source,
            string personnelNumber, 
            string legalEntityId, 
            global::System.DateTimeOffset employmentStartDate, 
            global::System.DateTimeOffset employmentEndDate, 
            string agreementTermId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "LegalEntityId", legalEntityId }, 
                { "EmploymentStartDate", employmentStartDate }, 
                { "EmploymentEndDate", employmentEndDate }, 
                { "AgreementTermId", agreementTermId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.EmploymentTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterHeader as global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterHeader as global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterHeader> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CodaParameter as global::Microsoft.Dynamics.DataEntities.CodaParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CodaParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CodaParameter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CodaParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CodaParameter as global::Microsoft.Dynamics.DataEntities.CodaParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        public static global::Microsoft.Dynamics.DataEntities.CodaParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CodaParameter> _source,
            string dataAreaId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CodaParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Position as global::Microsoft.Dynamics.DataEntities.PositionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Position> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Position as global::Microsoft.Dynamics.DataEntities.PositionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="positionId">The value of positionId</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Position> _source,
            string positionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PositionId", positionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DisposableIncomeEarning as global::Microsoft.Dynamics.DataEntities.DisposableIncomeEarningSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DisposableIncomeEarningSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DisposableIncomeEarning> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DisposableIncomeEarningSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DisposableIncomeEarning as global::Microsoft.Dynamics.DataEntities.DisposableIncomeEarningSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="earningCodeId">The value of earningCodeId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.DisposableIncomeEarningSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DisposableIncomeEarning> _source,
            string earningCodeId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EarningCodeId", earningCodeId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.DisposableIncomeEarningSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateEducationDiscipline as global::Microsoft.Dynamics.DataEntities.JobTemplateEducationDisciplineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateEducationDisciplineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateEducationDiscipline> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateEducationDisciplineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateEducationDiscipline as global::Microsoft.Dynamics.DataEntities.JobTemplateEducationDisciplineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTemplateId">The value of jobTemplateId</param>
        /// <param name="educationId">The value of educationId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateEducationDisciplineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateEducationDiscipline> _source,
            string jobTemplateId, 
            string educationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTemplateId", jobTemplateId }, 
                { "EducationId", educationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateEducationDisciplineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetPriority as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetPrioritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetPrioritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetPriority> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetPrioritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetPriority as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetPrioritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="productId">The value of productId</param>
        /// <param name="modelProductId">The value of modelProductId</param>
        /// <param name="modelId">The value of modelId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="workOrderTypeId">The value of workOrderTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetPrioritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetPriority> _source,
            string dataAreaId, 
            string functionalLocationId, 
            string maintenanceAssetTypeId, 
            string productId, 
            string modelProductId, 
            string modelId, 
            string maintenanceAssetId, 
            string workOrderTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationId", functionalLocationId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "ProductId", productId }, 
                { "ModelProductId", modelProductId }, 
                { "ModelId", modelId }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "WorkOrderTypeId", workOrderTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetPrioritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSReleasedDistinctProduct as global::Microsoft.Dynamics.DataEntities.CDSReleasedDistinctProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSReleasedDistinctProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSReleasedDistinctProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSReleasedDistinctProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSReleasedDistinctProduct as global::Microsoft.Dynamics.DataEntities.CDSReleasedDistinctProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productNumber">The value of productNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSReleasedDistinctProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSReleasedDistinctProduct> _source,
            string dataAreaId, 
            string productNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductNumber", productNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSReleasedDistinctProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableDiscountLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableDiscountLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableDiscountLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableDiscountLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableDiscountLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableDiscountLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableDiscountLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operatingUnitNumber">The value of operatingUnitNumber</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="registerNumber">The value of registerNumber</param>
        /// <param name="transactionId">The value of transactionId</param>
        /// <param name="salesLineNumber">The value of salesLineNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableDiscountLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableDiscountLine> _source,
            string dataAreaId, 
            string operatingUnitNumber, 
            string storeNumber, 
            string registerNumber, 
            string transactionId, 
            decimal salesLineNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperatingUnitNumber", operatingUnitNumber }, 
                { "StoreNumber", storeNumber }, 
                { "RegisterNumber", registerNumber }, 
                { "TransactionId", transactionId }, 
                { "SalesLineNumber", salesLineNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableDiscountLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxRegion as global::Microsoft.Dynamics.DataEntities.TaxRegionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxRegionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxRegion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxRegionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxRegion as global::Microsoft.Dynamics.DataEntities.TaxRegionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="locationId">The value of locationId</param>
        /// <param name="validFrom">The value of validFrom</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxRegionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxRegion> _source,
            string locationId, 
            global::System.DateTimeOffset validFrom)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LocationId", locationId }, 
                { "ValidFrom", validFrom }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxRegionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSucceedJobType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSucceedJobTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSucceedJobTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSucceedJobType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSucceedJobTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSucceedJobType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSucceedJobTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        /// <param name="jobTypeIdSucceed">The value of jobTypeIdSucceed</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSucceedJobTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSucceedJobType> _source,
            string dataAreaId, 
            string jobTypeId, 
            string jobTypeIdSucceed)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JobTypeId", jobTypeId }, 
                { "JobTypeIdSucceed", jobTypeIdSucceed }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeSucceedJobTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobPreferredCertificate as global::Microsoft.Dynamics.DataEntities.JobPreferredCertificateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobPreferredCertificateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobPreferredCertificate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobPreferredCertificateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobPreferredCertificate as global::Microsoft.Dynamics.DataEntities.JobPreferredCertificateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        /// <param name="certificateTypeId">The value of certificateTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobPreferredCertificateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobPreferredCertificate> _source,
            string jobId, 
            string certificateTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }, 
                { "CertificateTypeId", certificateTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobPreferredCertificateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV2 as global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV2 as global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="inventorySiteId">The value of inventorySiteId</param>
        /// <param name="inventoryWarehouseId">The value of inventoryWarehouseId</param>
        /// <param name="itemBatchNumber">The value of itemBatchNumber</param>
        /// <param name="itemSerialNumber">The value of itemSerialNumber</param>
        /// <param name="warehouseLocationId">The value of warehouseLocationId</param>
        /// <param name="licensePlateNumber">The value of licensePlateNumber</param>
        /// <param name="inventoryStatusId">The value of inventoryStatusId</param>
        /// <param name="inventoryGtdId">The value of inventoryGtdId</param>
        /// <param name="inventoryOwnerId">The value of inventoryOwnerId</param>
        /// <param name="inventoryProfileId">The value of inventoryProfileId</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV2> _source,
            string dataAreaId, 
            string journalNumber, 
            string itemNumber, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string inventorySiteId, 
            string inventoryWarehouseId, 
            string itemBatchNumber, 
            string itemSerialNumber, 
            string warehouseLocationId, 
            string licensePlateNumber, 
            string inventoryStatusId, 
            string inventoryGtdId, 
            string inventoryOwnerId, 
            string inventoryProfileId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }, 
                { "ItemNumber", itemNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "InventorySiteId", inventorySiteId }, 
                { "InventoryWarehouseId", inventoryWarehouseId }, 
                { "ItemBatchNumber", itemBatchNumber }, 
                { "ItemSerialNumber", itemSerialNumber }, 
                { "WarehouseLocationId", warehouseLocationId }, 
                { "LicensePlateNumber", licensePlateNumber }, 
                { "InventoryStatusId", inventoryStatusId }, 
                { "InventoryGtdId", inventoryGtdId }, 
                { "InventoryOwnerId", inventoryOwnerId }, 
                { "InventoryProfileId", inventoryProfileId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantExternalCode as global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantExternalCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantExternalCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantExternalCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantExternalCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantExternalCode as global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantExternalCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="releasedProductVariantExternalCodeClassId">The value of releasedProductVariantExternalCodeClassId</param>
        /// <param name="productVariantNumber">The value of productVariantNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantExternalCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantExternalCode> _source,
            string dataAreaId, 
            string releasedProductVariantExternalCodeClassId, 
            string productVariantNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReleasedProductVariantExternalCodeClassId", releasedProductVariantExternalCodeClassId }, 
                { "ProductVariantNumber", productVariantNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedReleasedProductVariantExternalCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationMaintenancePlan as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationMaintenancePlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationMaintenancePlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationMaintenancePlan> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationMaintenancePlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationMaintenancePlan as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationMaintenancePlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="modelId">The value of modelId</param>
        /// <param name="maintenancePlanId">The value of maintenancePlanId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationMaintenancePlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationMaintenancePlan> _source,
            string dataAreaId, 
            string functionalLocationId, 
            string maintenanceAssetTypeId, 
            string modelId, 
            string maintenancePlanId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationId", functionalLocationId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "ModelId", modelId }, 
                { "MaintenancePlanId", maintenancePlanId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationMaintenancePlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV2 as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV2 as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bOMId">The value of bOMId</param>
        /// <param name="lineCreationSequenceNumber">The value of lineCreationSequenceNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV2> _source,
            string dataAreaId, 
            string bOMId, 
            int lineCreationSequenceNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BOMId", bOMId }, 
                { "LineCreationSequenceNumber", lineCreationSequenceNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetJournalHeader as global::Microsoft.Dynamics.DataEntities.AssetJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetJournalHeader as global::Microsoft.Dynamics.DataEntities.AssetJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetJournalHeader> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EveryProduct as global::Microsoft.Dynamics.DataEntities.EveryProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EveryProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EveryProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EveryProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EveryProduct as global::Microsoft.Dynamics.DataEntities.EveryProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EveryProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EveryProduct> _source,
            string productNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EveryProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateExam as global::Microsoft.Dynamics.DataEntities.JobTemplateExamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateExamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateExam> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateExamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateExam as global::Microsoft.Dynamics.DataEntities.JobTemplateExamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTemplateId">The value of jobTemplateId</param>
        /// <param name="testId">The value of testId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateExamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateExam> _source,
            string jobTemplateId, 
            string testId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTemplateId", jobTemplateId }, 
                { "TestId", testId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateExamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionUnionAgreement as global::Microsoft.Dynamics.DataEntities.PositionUnionAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionUnionAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionUnionAgreement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionUnionAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionUnionAgreement as global::Microsoft.Dynamics.DataEntities.PositionUnionAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="positionId">The value of positionId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionUnionAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionUnionAgreement> _source,
            string positionId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PositionId", positionId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionUnionAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogPriceGroup as global::Microsoft.Dynamics.DataEntities.RetailCatalogPriceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogPriceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogPriceGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogPriceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogPriceGroup as global::Microsoft.Dynamics.DataEntities.RetailCatalogPriceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="catalogNumber">The value of catalogNumber</param>
        /// <param name="priceGroupLegalEntity">The value of priceGroupLegalEntity</param>
        /// <param name="priceGroupId">The value of priceGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogPriceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogPriceGroup> _source,
            string catalogNumber, 
            string priceGroupLegalEntity, 
            string priceGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CatalogNumber", catalogNumber }, 
                { "PriceGroupLegalEntity", priceGroupLegalEntity }, 
                { "PriceGroupId", priceGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogPriceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Parameters as global::Microsoft.Dynamics.DataEntities.ParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Parameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Parameters as global::Microsoft.Dynamics.DataEntities.ParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="key">The value of key</param>
        public static global::Microsoft.Dynamics.DataEntities.ParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Parameters> _source,
            string dataAreaId, 
            int key)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "key", key }
            };
            return new global::Microsoft.Dynamics.DataEntities.ParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalLine as global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalLine as global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalLine> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderDocumentAttachment as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderDocumentAttachmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderDocumentAttachmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderDocumentAttachment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderDocumentAttachmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderDocumentAttachment as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderDocumentAttachmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="documentId">The value of documentId</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderDocumentAttachmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderDocumentAttachment> _source,
            string dataAreaId, 
            global::System.Guid documentId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DocumentId", documentId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderDocumentAttachmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankAccountDisbursement as global::Microsoft.Dynamics.DataEntities.BankAccountDisbursementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BankAccountDisbursementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankAccountDisbursement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BankAccountDisbursementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankAccountDisbursement as global::Microsoft.Dynamics.DataEntities.BankAccountDisbursementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="accountIdentificationId">The value of accountIdentificationId</param>
        /// <param name="company">The value of company</param>
        public static global::Microsoft.Dynamics.DataEntities.BankAccountDisbursementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankAccountDisbursement> _source,
            string personnelNumber, 
            string accountIdentificationId, 
            string company)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "AccountIdentificationId", accountIdentificationId }, 
                { "Company", company }
            };
            return new global::Microsoft.Dynamics.DataEntities.BankAccountDisbursementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLine as global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLine as global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productSizeGroupId">The value of productSizeGroupId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLine> _source,
            string productSizeGroupId, 
            string productSizeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductSizeGroupId", productSizeGroupId }, 
                { "ProductSizeId", productSizeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocation as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocation as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocation> _source,
            string dataAreaId, 
            string functionalLocationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationId", functionalLocationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdvanceReport as global::Microsoft.Dynamics.DataEntities.AdvanceReportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AdvanceReportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdvanceReport> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AdvanceReportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdvanceReport as global::Microsoft.Dynamics.DataEntities.AdvanceReportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="advanceReportId">The value of advanceReportId</param>
        public static global::Microsoft.Dynamics.DataEntities.AdvanceReportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdvanceReport> _source,
            string dataAreaId, 
            string advanceReportId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AdvanceReportId", advanceReportId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AdvanceReportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocation as global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocation as global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="departmentNumber">The value of departmentNumber</param>
        /// <param name="plan">The value of plan</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocation> _source,
            string dataAreaId, 
            string departmentNumber, 
            string plan)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DepartmentNumber", departmentNumber }, 
                { "Plan", plan }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccountStructureActivation as global::Microsoft.Dynamics.DataEntities.AccountStructureActivationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AccountStructureActivationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccountStructureActivation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AccountStructureActivationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccountStructureActivation as global::Microsoft.Dynamics.DataEntities.AccountStructureActivationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accountStructure">The value of accountStructure</param>
        public static global::Microsoft.Dynamics.DataEntities.AccountStructureActivationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccountStructureActivation> _source,
            string accountStructure)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccountStructure", accountStructure }
            };
            return new global::Microsoft.Dynamics.DataEntities.AccountStructureActivationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationTranslation as global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationTranslation as global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productMasterConfigurationId">The value of productMasterConfigurationId</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationTranslation> _source,
            string productMasterNumber, 
            string productMasterConfigurationId, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductMasterConfigurationId", productMasterConfigurationId }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayoutImageZone as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutImageZoneSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutImageZoneSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayoutImageZone> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutImageZoneSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayoutImageZone as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutImageZoneSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="layoutId">The value of layoutId</param>
        /// <param name="deviceType">The value of deviceType</param>
        /// <param name="zoneId">The value of zoneId</param>
        /// <param name="pictureId">The value of pictureId</param>
        /// <param name="layoutSizeId">The value of layoutSizeId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutImageZoneSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayoutImageZone> _source,
            string layoutId, 
            int deviceType, 
            string zoneId, 
            int pictureId, 
            string layoutSizeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LayoutId", layoutId }, 
                { "DeviceType", deviceType }, 
                { "ZoneId", zoneId }, 
                { "PictureId", pictureId }, 
                { "LayoutSizeId", layoutSizeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutImageZoneSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalLine as global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalLine as global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalLine> _source,
            string dataAreaId, 
            string journalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventoryCountingJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OrderCommittedLicensePlateReservation as global::Microsoft.Dynamics.DataEntities.OrderCommittedLicensePlateReservationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OrderCommittedLicensePlateReservationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OrderCommittedLicensePlateReservation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OrderCommittedLicensePlateReservationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OrderCommittedLicensePlateReservation as global::Microsoft.Dynamics.DataEntities.OrderCommittedLicensePlateReservationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="inventoryLotId">The value of inventoryLotId</param>
        /// <param name="licensePlateNumber">The value of licensePlateNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OrderCommittedLicensePlateReservationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OrderCommittedLicensePlateReservation> _source,
            string dataAreaId, 
            string inventoryLotId, 
            string licensePlateNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InventoryLotId", inventoryLotId }, 
                { "LicensePlateNumber", licensePlateNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OrderCommittedLicensePlateReservationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicy as global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicy as global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="policyName">The value of policyName</param>
        public static global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicy> _source,
            string dataAreaId, 
            string policyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PolicyName", policyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRule as global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRule as global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="replenishmentRule">The value of replenishmentRule</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRule> _source,
            string dataAreaId, 
            string replenishmentRule)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReplenishmentRule", replenishmentRule }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccrualEarningCode as global::Microsoft.Dynamics.DataEntities.AccrualEarningCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AccrualEarningCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccrualEarningCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AccrualEarningCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccrualEarningCode as global::Microsoft.Dynamics.DataEntities.AccrualEarningCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accrualId">The value of accrualId</param>
        /// <param name="earningCodeId">The value of earningCodeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AccrualEarningCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccrualEarningCode> _source,
            string accrualId, 
            string earningCodeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccrualId", accrualId }, 
                { "EarningCodeId", earningCodeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AccrualEarningCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefault as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefault> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefault as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="productId">The value of productId</param>
        /// <param name="modelProductId">The value of modelProductId</param>
        /// <param name="modelId">The value of modelId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefault> _source,
            string dataAreaId, 
            string maintenanceAssetTypeId, 
            string productId, 
            string modelProductId, 
            string modelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "ProductId", productId }, 
                { "ModelProductId", modelProductId }, 
                { "ModelId", modelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeAttributeRequirement as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeAttributeRequirementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeAttributeRequirementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeAttributeRequirement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeAttributeRequirementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeAttributeRequirement as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeAttributeRequirementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationTypeId">The value of functionalLocationTypeId</param>
        /// <param name="attributeTypeId">The value of attributeTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeAttributeRequirementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeAttributeRequirement> _source,
            string dataAreaId, 
            string functionalLocationTypeId, 
            string attributeTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationTypeId", functionalLocationTypeId }, 
                { "AttributeTypeId", attributeTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeAttributeRequirementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Season as global::Microsoft.Dynamics.DataEntities.SeasonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SeasonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Season> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SeasonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Season as global::Microsoft.Dynamics.DataEntities.SeasonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="seasonCode">The value of seasonCode</param>
        public static global::Microsoft.Dynamics.DataEntities.SeasonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Season> _source,
            string dataAreaId, 
            string seasonCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SeasonCode", seasonCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.SeasonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseType as global::Microsoft.Dynamics.DataEntities.CourseTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseType as global::Microsoft.Dynamics.DataEntities.CourseTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="courseType">The value of courseType</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseType> _source,
            string courseType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CourseType", courseType }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseZoneGroup as global::Microsoft.Dynamics.DataEntities.WarehouseZoneGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseZoneGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseZoneGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseZoneGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseZoneGroup as global::Microsoft.Dynamics.DataEntities.WarehouseZoneGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseZoneGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseZoneGroup> _source,
            string dataAreaId, 
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseZoneGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalFee as global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalFeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalFeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalFee> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalFeeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalFee as global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalFeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="sourceJournalBatchNumber">The value of sourceJournalBatchNumber</param>
        /// <param name="sourceJournalLineNumber">The value of sourceJournalLineNumber</param>
        /// <param name="paymentFeeId">The value of paymentFeeId</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalFeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalFee> _source,
            string dataAreaId, 
            string sourceJournalBatchNumber, 
            decimal sourceJournalLineNumber, 
            string paymentFeeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SourceJournalBatchNumber", sourceJournalBatchNumber }, 
                { "SourceJournalLineNumber", sourceJournalLineNumber }, 
                { "PaymentFeeId", paymentFeeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalFeeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorProductDescription as global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorProductDescription> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorProductDescription as global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="vendorAccountNumber">The value of vendorAccountNumber</param>
        /// <param name="productDescriptionVendorGroupId">The value of productDescriptionVendorGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorProductDescription> _source,
            string dataAreaId, 
            string itemNumber, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string vendorAccountNumber, 
            string productDescriptionVendorGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "VendorAccountNumber", vendorAccountNumber }, 
                { "ProductDescriptionVendorGroupId", productDescriptionVendorGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorProductDescriptionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchyRole as global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchyRoleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchyRoleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchyRole> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchyRoleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchyRole as global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchyRoleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="hierarchyRole">The value of hierarchyRole</param>
        /// <param name="productCategoryHierarchyName">The value of productCategoryHierarchyName</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchyRoleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchyRole> _source,
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.EcoResCategoryNamedHierarchyRole> hierarchyRole, 
            string productCategoryHierarchyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "HierarchyRole", hierarchyRole }, 
                { "ProductCategoryHierarchyName", productCategoryHierarchyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchyRoleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductV2 as global::Microsoft.Dynamics.DataEntities.ReleasedProductV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductV2 as global::Microsoft.Dynamics.DataEntities.ReleasedProductV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductV2> _source,
            string dataAreaId, 
            string itemNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitComponent as global::Microsoft.Dynamics.DataEntities.RetailKitComponentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitComponentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitComponent> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailKitComponentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitComponent as global::Microsoft.Dynamics.DataEntities.RetailKitComponentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="kitProductNumber">The value of kitProductNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitComponentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitComponent> _source,
            string kitProductNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "KitProductNumber", kitProductNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailKitComponentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleaseKindTable as global::Microsoft.Dynamics.DataEntities.ReleaseKindTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleaseKindTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleaseKindTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleaseKindTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleaseKindTable as global::Microsoft.Dynamics.DataEntities.ReleaseKindTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="releaseKindId">The value of releaseKindId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleaseKindTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleaseKindTable> _source,
            string dataAreaId, 
            string releaseKindId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReleaseKindId", releaseKindId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleaseKindTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV3 as global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV3> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV3 as global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="operationalSiteId">The value of operationalSiteId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV3> _source,
            string dataAreaId, 
            string itemNumber, 
            string operationalSiteId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "OperationalSiteId", operationalSiteId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TransferredTimeAndAttendanceActivityRegistration as global::Microsoft.Dynamics.DataEntities.TransferredTimeAndAttendanceActivityRegistrationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TransferredTimeAndAttendanceActivityRegistrationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferredTimeAndAttendanceActivityRegistration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TransferredTimeAndAttendanceActivityRegistrationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TransferredTimeAndAttendanceActivityRegistration as global::Microsoft.Dynamics.DataEntities.TransferredTimeAndAttendanceActivityRegistrationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workerPersonnelNumber">The value of workerPersonnelNumber</param>
        /// <param name="timeProfileDate">The value of timeProfileDate</param>
        /// <param name="transferredActivityRegistrationEntryNumber">The value of transferredActivityRegistrationEntryNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.TransferredTimeAndAttendanceActivityRegistrationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferredTimeAndAttendanceActivityRegistration> _source,
            string dataAreaId, 
            string workerPersonnelNumber, 
            global::System.DateTimeOffset timeProfileDate, 
            long transferredActivityRegistrationEntryNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkerPersonnelNumber", workerPersonnelNumber }, 
                { "TimeProfileDate", timeProfileDate }, 
                { "TransferredActivityRegistrationEntryNumber", transferredActivityRegistrationEntryNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.TransferredTimeAndAttendanceActivityRegistrationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterConfiguration as global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterConfiguration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterConfiguration as global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterConfiguration> _source,
            string productMasterNumber, 
            string productConfigurationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductConfigurationId", productConfigurationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Person as global::Microsoft.Dynamics.DataEntities.PersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Person> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Person as global::Microsoft.Dynamics.DataEntities.PersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Person> _source,
            string partyNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeV2 as global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeV2 as global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="releasedProductVariantExternalCodeClassId">The value of releasedProductVariantExternalCodeClassId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="productColorId">The value of productColorId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeV2> _source,
            string dataAreaId, 
            string releasedProductVariantExternalCodeClassId, 
            string itemNumber, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            string productColorId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReleasedProductVariantExternalCodeClassId", releasedProductVariantExternalCodeClassId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "ProductColorId", productColorId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogProductAttributeValue as global::Microsoft.Dynamics.DataEntities.RetailCatalogProductAttributeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogProductAttributeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogProductAttributeValue> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogProductAttributeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogProductAttributeValue as global::Microsoft.Dynamics.DataEntities.RetailCatalogProductAttributeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="catalogNumber">The value of catalogNumber</param>
        /// <param name="categoryHierarchyName">The value of categoryHierarchyName</param>
        /// <param name="categoryName">The value of categoryName</param>
        /// <param name="displayProductNumber">The value of displayProductNumber</param>
        /// <param name="attributeGroupName">The value of attributeGroupName</param>
        /// <param name="attributeName">The value of attributeName</param>
        /// <param name="attributeTypeName">The value of attributeTypeName</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogProductAttributeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogProductAttributeValue> _source,
            string catalogNumber, 
            string categoryHierarchyName, 
            string categoryName, 
            string displayProductNumber, 
            string attributeGroupName, 
            string attributeName, 
            string attributeTypeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CatalogNumber", catalogNumber }, 
                { "CategoryHierarchyName", categoryHierarchyName }, 
                { "CategoryName", categoryName }, 
                { "DisplayProductNumber", displayProductNumber }, 
                { "AttributeGroupName", attributeGroupName }, 
                { "AttributeName", attributeName }, 
                { "AttributeTypeName", attributeTypeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogProductAttributeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreementLine as global::Microsoft.Dynamics.DataEntities.SalesAgreementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreementLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreementLine as global::Microsoft.Dynamics.DataEntities.SalesAgreementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesAgreementId">The value of salesAgreementId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreementLine> _source,
            string dataAreaId, 
            string salesAgreementId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesAgreementId", salesAgreementId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonSkill as global::Microsoft.Dynamics.DataEntities.PersonSkillSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonSkillSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonSkill> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonSkillSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonSkill as global::Microsoft.Dynamics.DataEntities.PersonSkillSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="levelType">The value of levelType</param>
        /// <param name="skillId">The value of skillId</param>
        /// <param name="levelDate">The value of levelDate</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonSkillSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonSkill> _source,
            string partyNumber, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.HrmSkillLevelType> levelType, 
            string skillId, 
            global::System.DateTimeOffset levelDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "LevelType", levelType }, 
                { "SkillId", skillId }, 
                { "LevelDate", levelDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonSkillSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxGroup as global::Microsoft.Dynamics.DataEntities.TaxGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxGroup as global::Microsoft.Dynamics.DataEntities.TaxGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxGroupCode">The value of taxGroupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxGroup> _source,
            string dataAreaId, 
            string taxGroupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxGroupCode", taxGroupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModel as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModel as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lifecycleModelId">The value of lifecycleModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModel> _source,
            string dataAreaId, 
            string lifecycleModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LifecycleModelId", lifecycleModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSize as global::Microsoft.Dynamics.DataEntities.ProductSizeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSizeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSize> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductSizeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSize as global::Microsoft.Dynamics.DataEntities.ProductSizeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="sizeId">The value of sizeId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSizeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSize> _source,
            string sizeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SizeId", sizeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductSizeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonDetails as global::Microsoft.Dynamics.DataEntities.PersonDetailsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonDetailsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonDetails> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonDetailsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonDetails as global::Microsoft.Dynamics.DataEntities.PersonDetailsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonDetailsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonDetails> _source,
            string partyNumber, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonDetailsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerRebate as global::Microsoft.Dynamics.DataEntities.CustomerRebateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerRebateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerRebate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerRebateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerRebate as global::Microsoft.Dynamics.DataEntities.CustomerRebateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="rebateId">The value of rebateId</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerRebateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerRebate> _source,
            string dataAreaId, 
            string rebateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RebateId", rebateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerRebateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlOverBudgetPermission as global::Microsoft.Dynamics.DataEntities.BudgetControlOverBudgetPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlOverBudgetPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlOverBudgetPermission> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlOverBudgetPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlOverBudgetPermission as global::Microsoft.Dynamics.DataEntities.BudgetControlOverBudgetPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="userGroupId">The value of userGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlOverBudgetPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlOverBudgetPermission> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            string userGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "UserGroupId", userGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlOverBudgetPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionV2 as global::Microsoft.Dynamics.DataEntities.PositionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionV2 as global::Microsoft.Dynamics.DataEntities.PositionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="positionId">The value of positionId</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionV2> _source,
            string positionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PositionId", positionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Expenses as global::Microsoft.Dynamics.DataEntities.ExpensesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpensesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Expenses> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExpensesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Expenses as global::Microsoft.Dynamics.DataEntities.ExpensesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="expenseTransactionNumber">The value of expenseTransactionNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpensesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Expenses> _source,
            string dataAreaId, 
            string expenseTransactionNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ExpenseTransactionNumber", expenseTransactionNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExpensesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReconciliationMatchRuleSet as global::Microsoft.Dynamics.DataEntities.ReconciliationMatchRuleSetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReconciliationMatchRuleSetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReconciliationMatchRuleSet> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReconciliationMatchRuleSetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReconciliationMatchRuleSet as global::Microsoft.Dynamics.DataEntities.ReconciliationMatchRuleSetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="matchingRuleSet">The value of matchingRuleSet</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ReconciliationMatchRuleSetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReconciliationMatchRuleSet> _source,
            string matchingRuleSet, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "MatchingRuleSet", matchingRuleSet }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReconciliationMatchRuleSetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectLedgerPostingDefinition as global::Microsoft.Dynamics.DataEntities.ProjectLedgerPostingDefinitionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectLedgerPostingDefinitionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectLedgerPostingDefinition> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectLedgerPostingDefinitionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectLedgerPostingDefinition as global::Microsoft.Dynamics.DataEntities.ProjectLedgerPostingDefinitionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projectAccountType">The value of projectAccountType</param>
        /// <param name="projectId">The value of projectId</param>
        /// <param name="projectGroup">The value of projectGroup</param>
        /// <param name="categoryId">The value of categoryId</param>
        /// <param name="categoryGroup">The value of categoryGroup</param>
        /// <param name="taxGroupId">The value of taxGroupId</param>
        /// <param name="projectContractId">The value of projectContractId</param>
        /// <param name="fundingSourceId">The value of fundingSourceId</param>
        /// <param name="borrowingLegalEntity">The value of borrowingLegalEntity</param>
        /// <param name="lendingLegalEntity">The value of lendingLegalEntity</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectLedgerPostingDefinitionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectLedgerPostingDefinition> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.ProjAccountType> projectAccountType, 
            string projectId, 
            string projectGroup, 
            string categoryId, 
            string categoryGroup, 
            string taxGroupId, 
            string projectContractId, 
            string fundingSourceId, 
            string borrowingLegalEntity, 
            string lendingLegalEntity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjectAccountType", projectAccountType }, 
                { "ProjectId", projectId }, 
                { "ProjectGroup", projectGroup }, 
                { "CategoryId", categoryId }, 
                { "CategoryGroup", categoryGroup }, 
                { "TaxGroupId", taxGroupId }, 
                { "ProjectContractId", projectContractId }, 
                { "FundingSourceId", fundingSourceId }, 
                { "BorrowingLegalEntity", borrowingLegalEntity }, 
                { "LendingLegalEntity", lendingLegalEntity }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectLedgerPostingDefinitionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReasonCode as global::Microsoft.Dynamics.DataEntities.ReasonCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReasonCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReasonCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReasonCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReasonCode as global::Microsoft.Dynamics.DataEntities.ReasonCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="reasonCodeId">The value of reasonCodeId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReasonCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReasonCode> _source,
            string reasonCodeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ReasonCodeId", reasonCodeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReasonCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PlannedTimeAndAttendanceAbsenceRegistration as global::Microsoft.Dynamics.DataEntities.PlannedTimeAndAttendanceAbsenceRegistrationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PlannedTimeAndAttendanceAbsenceRegistrationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PlannedTimeAndAttendanceAbsenceRegistration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PlannedTimeAndAttendanceAbsenceRegistrationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PlannedTimeAndAttendanceAbsenceRegistration as global::Microsoft.Dynamics.DataEntities.PlannedTimeAndAttendanceAbsenceRegistrationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workerPersonnelNumber">The value of workerPersonnelNumber</param>
        /// <param name="plannedAbsenceRegistrationEntryNumber">The value of plannedAbsenceRegistrationEntryNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PlannedTimeAndAttendanceAbsenceRegistrationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PlannedTimeAndAttendanceAbsenceRegistration> _source,
            string dataAreaId, 
            string workerPersonnelNumber, 
            long plannedAbsenceRegistrationEntryNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkerPersonnelNumber", workerPersonnelNumber }, 
                { "PlannedAbsenceRegistrationEntryNumber", plannedAbsenceRegistrationEntryNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PlannedTimeAndAttendanceAbsenceRegistrationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTrans as global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTransSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTransSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTrans> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTransSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTrans as global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTransSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalId">The value of journalId</param>
        /// <param name="voucher">The value of voucher</param>
        /// <param name="lineNum">The value of lineNum</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTransSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTrans> _source,
            string dataAreaId, 
            string journalId, 
            string voucher, 
            decimal lineNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalId", journalId }, 
                { "Voucher", voucher }, 
                { "LineNum", lineNum }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTransSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OfficeAddinLegalEntity as global::Microsoft.Dynamics.DataEntities.OfficeAddinLegalEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OfficeAddinLegalEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OfficeAddinLegalEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OfficeAddinLegalEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OfficeAddinLegalEntity as global::Microsoft.Dynamics.DataEntities.OfficeAddinLegalEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="companyId">The value of companyId</param>
        public static global::Microsoft.Dynamics.DataEntities.OfficeAddinLegalEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OfficeAddinLegalEntity> _source,
            string companyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CompanyId", companyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.OfficeAddinLegalEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseHotel as global::Microsoft.Dynamics.DataEntities.CourseHotelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseHotelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseHotel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseHotelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseHotel as global::Microsoft.Dynamics.DataEntities.CourseHotelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="courseLocationId">The value of courseLocationId</param>
        /// <param name="hotelId">The value of hotelId</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseHotelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseHotel> _source,
            string dataAreaId, 
            string courseLocationId, 
            string hotelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CourseLocationId", courseLocationId }, 
                { "HotelId", hotelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseHotelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendPaymModeBankAccounts as global::Microsoft.Dynamics.DataEntities.VendPaymModeBankAccountsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendPaymModeBankAccountsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendPaymModeBankAccounts> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendPaymModeBankAccountsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendPaymModeBankAccounts as global::Microsoft.Dynamics.DataEntities.VendPaymModeBankAccountsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lineId">The value of lineId</param>
        public static global::Microsoft.Dynamics.DataEntities.VendPaymModeBankAccountsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendPaymModeBankAccounts> _source,
            string dataAreaId, 
            global::System.Guid lineId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LineId", lineId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendPaymModeBankAccountsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateSkill as global::Microsoft.Dynamics.DataEntities.JobTemplateSkillSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateSkillSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateSkill> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateSkillSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateSkill as global::Microsoft.Dynamics.DataEntities.JobTemplateSkillSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTemplateId">The value of jobTemplateId</param>
        /// <param name="skillId">The value of skillId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateSkillSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateSkill> _source,
            string jobTemplateId, 
            string skillId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTemplateId", jobTemplateId }, 
                { "SkillId", skillId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateSkillSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerV3 as global::Microsoft.Dynamics.DataEntities.CustomerV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerV3> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerV3 as global::Microsoft.Dynamics.DataEntities.CustomerV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="customerAccount">The value of customerAccount</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerV3> _source,
            string dataAreaId, 
            string customerAccount)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CustomerAccount", customerAccount }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceSpecificationType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceSpecificationTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceSpecificationTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceSpecificationType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceSpecificationTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceSpecificationType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceSpecificationTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="attributeTypeId">The value of attributeTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceSpecificationTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceSpecificationType> _source,
            string dataAreaId, 
            string attributeTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AttributeTypeId", attributeTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceSpecificationTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PSAForecast as global::Microsoft.Dynamics.DataEntities.PSAForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PSAForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PSAForecast> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PSAForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PSAForecast as global::Microsoft.Dynamics.DataEntities.PSAForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="transId">The value of transId</param>
        public static global::Microsoft.Dynamics.DataEntities.PSAForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PSAForecast> _source,
            string dataAreaId, 
            string transId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TransId", transId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PSAForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DiscussionType as global::Microsoft.Dynamics.DataEntities.DiscussionTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DiscussionTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DiscussionType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DiscussionTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DiscussionType as global::Microsoft.Dynamics.DataEntities.DiscussionTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="discussionTypeId">The value of discussionTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.DiscussionTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DiscussionType> _source,
            string discussionTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DiscussionTypeId", discussionTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.DiscussionTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.IssuingAgency as global::Microsoft.Dynamics.DataEntities.IssuingAgencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.IssuingAgencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.IssuingAgency> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.IssuingAgencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.IssuingAgency as global::Microsoft.Dynamics.DataEntities.IssuingAgencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="issuingAgency">The value of issuingAgency</param>
        public static global::Microsoft.Dynamics.DataEntities.IssuingAgencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.IssuingAgency> _source,
            string issuingAgency)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "IssuingAgency", issuingAgency }
            };
            return new global::Microsoft.Dynamics.DataEntities.IssuingAgencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LaborUnionAgreement as global::Microsoft.Dynamics.DataEntities.LaborUnionAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LaborUnionAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LaborUnionAgreement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LaborUnionAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LaborUnionAgreement as global::Microsoft.Dynamics.DataEntities.LaborUnionAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="unionId">The value of unionId</param>
        /// <param name="agreementName">The value of agreementName</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        public static global::Microsoft.Dynamics.DataEntities.LaborUnionAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LaborUnionAgreement> _source,
            string unionId, 
            string agreementName, 
            string legalEntityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UnionId", unionId }, 
                { "AgreementName", agreementName }, 
                { "LegalEntityId", legalEntityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.LaborUnionAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseOnHandIncludingCatchWeightItem as global::Microsoft.Dynamics.DataEntities.WarehouseOnHandIncludingCatchWeightItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseOnHandIncludingCatchWeightItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseOnHandIncludingCatchWeightItem> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseOnHandIncludingCatchWeightItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseOnHandIncludingCatchWeightItem as global::Microsoft.Dynamics.DataEntities.WarehouseOnHandIncludingCatchWeightItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="inventorySiteId">The value of inventorySiteId</param>
        /// <param name="inventoryWarehouseId">The value of inventoryWarehouseId</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseOnHandIncludingCatchWeightItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseOnHandIncludingCatchWeightItem> _source,
            string dataAreaId, 
            string itemNumber, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            string inventorySiteId, 
            string inventoryWarehouseId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "InventorySiteId", inventorySiteId }, 
                { "InventoryWarehouseId", inventoryWarehouseId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseOnHandIncludingCatchWeightItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineNote as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineNoteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineNoteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineNote> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineNoteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineNote as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineNoteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseAgreementId">The value of purchaseAgreementId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="documentAttachmentTypeCode">The value of documentAttachmentTypeCode</param>
        /// <param name="attachmentDescription">The value of attachmentDescription</param>
        /// <param name="attachedDateTime">The value of attachedDateTime</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineNoteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineNote> _source,
            string dataAreaId, 
            string purchaseAgreementId, 
            decimal lineNumber, 
            string documentAttachmentTypeCode, 
            string attachmentDescription, 
            global::System.DateTimeOffset attachedDateTime)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseAgreementId", purchaseAgreementId }, 
                { "LineNumber", lineNumber }, 
                { "DocumentAttachmentTypeCode", documentAttachmentTypeCode }, 
                { "AttachmentDescription", attachmentDescription }, 
                { "AttachedDateTime", attachedDateTime }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineNoteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeVariant as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeVariant> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeVariant as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        /// <param name="jobVariantId">The value of jobVariantId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeVariant> _source,
            string dataAreaId, 
            string jobTypeId, 
            string jobVariantId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JobTypeId", jobTypeId }, 
                { "JobVariantId", jobVariantId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineTranslation as global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineTranslation as global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productStyleGroupId">The value of productStyleGroupId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineTranslation> _source,
            string productStyleGroupId, 
            string productStyleId, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductStyleGroupId", productStyleGroupId }, 
                { "ProductStyleId", productStyleId }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductStyleGroupLineTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineV2 as global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineV2 as global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineV2> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemMaterialCodeShipTxtTranslation as global::Microsoft.Dynamics.DataEntities.ItemMaterialCodeShipTxtTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemMaterialCodeShipTxtTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemMaterialCodeShipTxtTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ItemMaterialCodeShipTxtTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemMaterialCodeShipTxtTranslation as global::Microsoft.Dynamics.DataEntities.ItemMaterialCodeShipTxtTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="languageId">The value of languageId</param>
        /// <param name="material">The value of material</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemMaterialCodeShipTxtTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemMaterialCodeShipTxtTranslation> _source,
            string dataAreaId, 
            string languageId, 
            long material)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LanguageId", languageId }, 
                { "Material", material }
            };
            return new global::Microsoft.Dynamics.DataEntities.ItemMaterialCodeShipTxtTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntry as global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntry as global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="entryNumber">The value of entryNumber</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntry> _source,
            string dataAreaId, 
            string entryNumber, 
            string legalEntityId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EntryNumber", entryNumber }, 
                { "LegalEntityId", legalEntityId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ServiceAgreementLine as global::Microsoft.Dynamics.DataEntities.ServiceAgreementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ServiceAgreementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ServiceAgreementLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ServiceAgreementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ServiceAgreementLine as global::Microsoft.Dynamics.DataEntities.ServiceAgreementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="serviceAgreementId">The value of serviceAgreementId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ServiceAgreementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ServiceAgreementLine> _source,
            string dataAreaId, 
            string serviceAgreementId, 
            int lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ServiceAgreementId", serviceAgreementId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ServiceAgreementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoutePendingRouteCostCategoryUnitCost as global::Microsoft.Dynamics.DataEntities.RoutePendingRouteCostCategoryUnitCostSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RoutePendingRouteCostCategoryUnitCostSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoutePendingRouteCostCategoryUnitCost> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RoutePendingRouteCostCategoryUnitCostSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoutePendingRouteCostCategoryUnitCost as global::Microsoft.Dynamics.DataEntities.RoutePendingRouteCostCategoryUnitCostSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="routeCostCategoryId">The value of routeCostCategoryId</param>
        /// <param name="costingVersionId">The value of costingVersionId</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="effectiveDate">The value of effectiveDate</param>
        public static global::Microsoft.Dynamics.DataEntities.RoutePendingRouteCostCategoryUnitCostSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoutePendingRouteCostCategoryUnitCost> _source,
            string dataAreaId, 
            string routeCostCategoryId, 
            string costingVersionId, 
            string productionSiteId, 
            global::System.DateTimeOffset effectiveDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RouteCostCategoryId", routeCostCategoryId }, 
                { "CostingVersionId", costingVersionId }, 
                { "ProductionSiteId", productionSiteId }, 
                { "EffectiveDate", effectiveDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.RoutePendingRouteCostCategoryUnitCostSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CoveredDependentRelationship as global::Microsoft.Dynamics.DataEntities.CoveredDependentRelationshipSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CoveredDependentRelationshipSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CoveredDependentRelationship> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CoveredDependentRelationshipSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CoveredDependentRelationship as global::Microsoft.Dynamics.DataEntities.CoveredDependentRelationshipSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitId">The value of benefitId</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="enrollmentStart">The value of enrollmentStart</param>
        /// <param name="enrollmentEnd">The value of enrollmentEnd</param>
        /// <param name="relationshipTypeId">The value of relationshipTypeId</param>
        /// <param name="childPartyId">The value of childPartyId</param>
        /// <param name="partyRelationshipDataAreaId">The value of partyRelationshipDataAreaId</param>
        /// <param name="partyRelationshipValidTo">The value of partyRelationshipValidTo</param>
        /// <param name="partyRelationshipValidFrom">The value of partyRelationshipValidFrom</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.CoveredDependentRelationshipSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CoveredDependentRelationship> _source,
            string benefitId, 
            string personnelNumber, 
            global::System.DateTimeOffset enrollmentStart, 
            global::System.DateTimeOffset enrollmentEnd, 
            string relationshipTypeId, 
            string childPartyId, 
            string partyRelationshipDataAreaId, 
            global::System.DateTimeOffset partyRelationshipValidTo, 
            global::System.DateTimeOffset partyRelationshipValidFrom, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitId", benefitId }, 
                { "PersonnelNumber", personnelNumber }, 
                { "EnrollmentStart", enrollmentStart }, 
                { "EnrollmentEnd", enrollmentEnd }, 
                { "RelationshipTypeId", relationshipTypeId }, 
                { "ChildPartyId", childPartyId }, 
                { "PartyRelationshipDataAreaId", partyRelationshipDataAreaId }, 
                { "PartyRelationshipValidTo", partyRelationshipValidTo }, 
                { "PartyRelationshipValidFrom", partyRelationshipValidFrom }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.CoveredDependentRelationshipSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderLine as global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderLine as global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderLine> _source,
            string dataAreaId, 
            string purchaseOrderNumber, 
            long lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobVariant as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobVariant> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobVariant as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="jobVariantId">The value of jobVariantId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobVariant> _source,
            string dataAreaId, 
            string jobVariantId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JobVariantId", jobVariantId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchy as global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchy as global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="hierarchyName">The value of hierarchyName</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchy> _source,
            string hierarchyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "HierarchyName", hierarchyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductCategoryHierarchySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ValidationProjectTask as global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValidationProjectTask> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ValidationProjectTask as global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataValidationProject_Name">The value of dataValidationProject_Name</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValidationProjectTask> _source,
            string dataValidationProject_Name, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DataValidationProject_Name", dataValidationProject_Name }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Title as global::Microsoft.Dynamics.DataEntities.TitleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TitleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Title> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TitleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Title as global::Microsoft.Dynamics.DataEntities.TitleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="titleId">The value of titleId</param>
        public static global::Microsoft.Dynamics.DataEntities.TitleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Title> _source,
            string titleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TitleId", titleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TitleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetConsumptionUnit as global::Microsoft.Dynamics.DataEntities.AssetConsumptionUnitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetConsumptionUnitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetConsumptionUnit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetConsumptionUnitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetConsumptionUnit as global::Microsoft.Dynamics.DataEntities.AssetConsumptionUnitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="unitId">The value of unitId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetConsumptionUnitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetConsumptionUnit> _source,
            string dataAreaId, 
            string unitId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "UnitId", unitId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetConsumptionUnitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Project as global::Microsoft.Dynamics.DataEntities.ProjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Project> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Project as global::Microsoft.Dynamics.DataEntities.ProjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projectID">The value of projectID</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Project> _source,
            string dataAreaId, 
            string projectID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjectID", projectID }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableAddressLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableAddressLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableAddressLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableAddressLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableAddressLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableAddressLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableAddressLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operatingUnitNumber">The value of operatingUnitNumber</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="registerNumber">The value of registerNumber</param>
        /// <param name="transactionId">The value of transactionId</param>
        /// <param name="salesLineNumber">The value of salesLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableAddressLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableAddressLine> _source,
            string dataAreaId, 
            string operatingUnitNumber, 
            string storeNumber, 
            string registerNumber, 
            string transactionId, 
            decimal salesLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperatingUnitNumber", operatingUnitNumber }, 
                { "StoreNumber", storeNumber }, 
                { "RegisterNumber", registerNumber }, 
                { "TransactionId", transactionId }, 
                { "SalesLineNumber", salesLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableAddressLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxPeriod as global::Microsoft.Dynamics.DataEntities.TaxPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxPeriod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxPeriod as global::Microsoft.Dynamics.DataEntities.TaxPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxPeriodId">The value of taxPeriodId</param>
        /// <param name="fromDate">The value of fromDate</param>
        /// <param name="toDate">The value of toDate</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxPeriod> _source,
            string dataAreaId, 
            string taxPeriodId, 
            global::System.DateTimeOffset fromDate, 
            global::System.DateTimeOffset toDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxPeriodId", taxPeriodId }, 
                { "FromDate", fromDate }, 
                { "ToDate", toDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderOriginCode as global::Microsoft.Dynamics.DataEntities.SalesOrderOriginCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderOriginCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderOriginCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderOriginCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderOriginCode as global::Microsoft.Dynamics.DataEntities.SalesOrderOriginCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="originCode">The value of originCode</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderOriginCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderOriginCode> _source,
            string dataAreaId, 
            string originCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OriginCode", originCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderOriginCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentDetail as global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentDetail as global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="regulatoryEstablishmentId">The value of regulatoryEstablishmentId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        public static global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentDetail> _source,
            string regulatoryEstablishmentId, 
            string legalEntityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RegulatoryEstablishmentId", regulatoryEstablishmentId }, 
                { "LegalEntityId", legalEntityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RegulatoryEstablishmentDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductAttribute as global::Microsoft.Dynamics.DataEntities.ProductAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductAttribute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductAttribute as global::Microsoft.Dynamics.DataEntities.ProductAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productAttributeTypeName">The value of productAttributeTypeName</param>
        /// <param name="attributeName">The value of attributeName</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductAttribute> _source,
            string productAttributeTypeName, 
            string attributeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductAttributeTypeName", productAttributeTypeName }, 
                { "AttributeName", attributeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FBFiscalDocumentAdjustmentCodeLedger as global::Microsoft.Dynamics.DataEntities.FBFiscalDocumentAdjustmentCodeLedgerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FBFiscalDocumentAdjustmentCodeLedgerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FBFiscalDocumentAdjustmentCodeLedger> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FBFiscalDocumentAdjustmentCodeLedgerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FBFiscalDocumentAdjustmentCodeLedger as global::Microsoft.Dynamics.DataEntities.FBFiscalDocumentAdjustmentCodeLedgerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="fBFiscalDocumentAdjustmentCodeIdentification">The value of fBFiscalDocumentAdjustmentCodeIdentification</param>
        /// <param name="company">The value of company</param>
        public static global::Microsoft.Dynamics.DataEntities.FBFiscalDocumentAdjustmentCodeLedgerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FBFiscalDocumentAdjustmentCodeLedger> _source,
            string fBFiscalDocumentAdjustmentCodeIdentification, 
            string company)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FBFiscalDocumentAdjustmentCodeIdentification", fBFiscalDocumentAdjustmentCodeIdentification }, 
                { "Company", company }
            };
            return new global::Microsoft.Dynamics.DataEntities.FBFiscalDocumentAdjustmentCodeLedgerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryReservationHierarchy as global::Microsoft.Dynamics.DataEntities.InventoryReservationHierarchySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryReservationHierarchySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryReservationHierarchy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventoryReservationHierarchySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryReservationHierarchy as global::Microsoft.Dynamics.DataEntities.InventoryReservationHierarchySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="hierarchyName">The value of hierarchyName</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryReservationHierarchySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryReservationHierarchy> _source,
            string hierarchyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "HierarchyName", hierarchyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventoryReservationHierarchySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceHeader as global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceHeader as global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="invoiceIdentifier">The value of invoiceIdentifier</param>
        public static global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceHeader> _source,
            string dataAreaId, 
            long invoiceIdentifier)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InvoiceIdentifier", invoiceIdentifier }
            };
            return new global::Microsoft.Dynamics.DataEntities.FreeTextInvoiceHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionHeader as global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionHeader as global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="statementSectionId">The value of statementSectionId</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionHeader> _source,
            string statementSectionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StatementSectionId", statementSectionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TotalCompStatementSectionHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccountStructureConstraint as global::Microsoft.Dynamics.DataEntities.AccountStructureConstraintSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AccountStructureConstraintSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccountStructureConstraint> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AccountStructureConstraintSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccountStructureConstraint as global::Microsoft.Dynamics.DataEntities.AccountStructureConstraintSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accountStructure">The value of accountStructure</param>
        /// <param name="status">The value of status</param>
        /// <param name="position">The value of position</param>
        public static global::Microsoft.Dynamics.DataEntities.AccountStructureConstraintSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccountStructureConstraint> _source,
            string accountStructure, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DimensionHierarchyConstraintStatus> status, 
            int position)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccountStructure", accountStructure }, 
                { "Status", status }, 
                { "Position", position }
            };
            return new global::Microsoft.Dynamics.DataEntities.AccountStructureConstraintSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CostStatementEntry as global::Microsoft.Dynamics.DataEntities.CostStatementEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CostStatementEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CostStatementEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CostStatementEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CostStatementEntry as global::Microsoft.Dynamics.DataEntities.CostStatementEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="costStatementType">The value of costStatementType</param>
        /// <param name="accountingDate">The value of accountingDate</param>
        /// <param name="levelOneCostStatementLineCategoryName">The value of levelOneCostStatementLineCategoryName</param>
        /// <param name="levelTwoCostStatementLineCategoryName">The value of levelTwoCostStatementLineCategoryName</param>
        /// <param name="levelThreeCostStatementLineCategoryName">The value of levelThreeCostStatementLineCategoryName</param>
        /// <param name="operationalSiteId">The value of operationalSiteId</param>
        /// <param name="costResourceType">The value of costResourceType</param>
        /// <param name="costResourceId">The value of costResourceId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        public static global::Microsoft.Dynamics.DataEntities.CostStatementEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CostStatementEntry> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementType> costStatementType, 
            global::System.DateTimeOffset accountingDate, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementLineCategoryLevel1> levelOneCostStatementLineCategoryName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementLineCategoryLevel2> levelTwoCostStatementLineCategoryName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CostStatementLineCategoryLevel3> levelThreeCostStatementLineCategoryName, 
            string operationalSiteId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.InventValueReportResourceType> costResourceType, 
            string costResourceId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CostStatementType", costStatementType }, 
                { "AccountingDate", accountingDate }, 
                { "LevelOneCostStatementLineCategoryName", levelOneCostStatementLineCategoryName }, 
                { "LevelTwoCostStatementLineCategoryName", levelTwoCostStatementLineCategoryName }, 
                { "LevelThreeCostStatementLineCategoryName", levelThreeCostStatementLineCategoryName }, 
                { "OperationalSiteId", operationalSiteId }, 
                { "CostResourceType", costResourceType }, 
                { "CostResourceId", costResourceId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CostStatementEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2 as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2 as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesOrderNumber">The value of salesOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2> _source,
            string dataAreaId, 
            string salesOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesOrderNumber", salesOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ContactPerson as global::Microsoft.Dynamics.DataEntities.ContactPersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ContactPersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ContactPerson> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ContactPersonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ContactPerson as global::Microsoft.Dynamics.DataEntities.ContactPersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="contactPersonId">The value of contactPersonId</param>
        public static global::Microsoft.Dynamics.DataEntities.ContactPersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ContactPerson> _source,
            string dataAreaId, 
            string contactPersonId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ContactPersonId", contactPersonId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ContactPersonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTable as global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTable as global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="oMOperatingUnit_PartyNumber">The value of oMOperatingUnit_PartyNumber</param>
        /// <param name="tenderTypeId">The value of tenderTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTable> _source,
            string dataAreaId, 
            string oMOperatingUnit_PartyNumber, 
            string tenderTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OMOperatingUnit_PartyNumber", oMOperatingUnit_PartyNumber }, 
                { "TenderTypeId", tenderTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemCoverageSettings as global::Microsoft.Dynamics.DataEntities.ItemCoverageSettingsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemCoverageSettingsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemCoverageSettings> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ItemCoverageSettingsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemCoverageSettings as global::Microsoft.Dynamics.DataEntities.ItemCoverageSettingsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="coverageWarehouseLocationId">The value of coverageWarehouseLocationId</param>
        /// <param name="coverageItemBatchNumber">The value of coverageItemBatchNumber</param>
        /// <param name="coverageProductColorId">The value of coverageProductColorId</param>
        /// <param name="coverageProductSizeId">The value of coverageProductSizeId</param>
        /// <param name="coverageProductStyleId">The value of coverageProductStyleId</param>
        /// <param name="coverageWarehouseId">The value of coverageWarehouseId</param>
        /// <param name="coverageItemSerialNumber">The value of coverageItemSerialNumber</param>
        /// <param name="coverageSiteId">The value of coverageSiteId</param>
        /// <param name="coverageInventoryStatusId">The value of coverageInventoryStatusId</param>
        /// <param name="coverageProductConfigurationId">The value of coverageProductConfigurationId</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemCoverageSettingsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemCoverageSettings> _source,
            string dataAreaId, 
            string itemNumber, 
            string coverageWarehouseLocationId, 
            string coverageItemBatchNumber, 
            string coverageProductColorId, 
            string coverageProductSizeId, 
            string coverageProductStyleId, 
            string coverageWarehouseId, 
            string coverageItemSerialNumber, 
            string coverageSiteId, 
            string coverageInventoryStatusId, 
            string coverageProductConfigurationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "CoverageWarehouseLocationId", coverageWarehouseLocationId }, 
                { "CoverageItemBatchNumber", coverageItemBatchNumber }, 
                { "CoverageProductColorId", coverageProductColorId }, 
                { "CoverageProductSizeId", coverageProductSizeId }, 
                { "CoverageProductStyleId", coverageProductStyleId }, 
                { "CoverageWarehouseId", coverageWarehouseId }, 
                { "CoverageItemSerialNumber", coverageItemSerialNumber }, 
                { "CoverageSiteId", coverageSiteId }, 
                { "CoverageInventoryStatusId", coverageInventoryStatusId }, 
                { "CoverageProductConfigurationId", coverageProductConfigurationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ItemCoverageSettingsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdCertificate as global::Microsoft.Dynamics.DataEntities.WithholdCertificateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdCertificateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdCertificate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WithholdCertificateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdCertificate as global::Microsoft.Dynamics.DataEntities.WithholdCertificateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="certificateNumber">The value of certificateNumber</param>
        /// <param name="accountType">The value of accountType</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdCertificateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdCertificate> _source,
            string dataAreaId, 
            string certificateNumber, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TaxWithholdACType_IN> accountType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CertificateNumber", certificateNumber }, 
                { "AccountType", accountType }
            };
            return new global::Microsoft.Dynamics.DataEntities.WithholdCertificateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue2 as global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue2 as global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="catalogNumber">The value of catalogNumber</param>
        /// <param name="internalOrganizationPartyNumber">The value of internalOrganizationPartyNumber</param>
        /// <param name="displayProductNumber">The value of displayProductNumber</param>
        /// <param name="attributeTypeName">The value of attributeTypeName</param>
        /// <param name="attributeName">The value of attributeName</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue2> _source,
            string catalogNumber, 
            string internalOrganizationPartyNumber, 
            string displayProductNumber, 
            string attributeTypeName, 
            string attributeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CatalogNumber", catalogNumber }, 
                { "InternalOrganizationPartyNumber", internalOrganizationPartyNumber }, 
                { "DisplayProductNumber", displayProductNumber }, 
                { "AttributeTypeName", attributeTypeName }, 
                { "AttributeName", attributeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PartyEmployeeRelationship as global::Microsoft.Dynamics.DataEntities.PartyEmployeeRelationshipSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PartyEmployeeRelationshipSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PartyEmployeeRelationship> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PartyEmployeeRelationshipSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PartyEmployeeRelationship as global::Microsoft.Dynamics.DataEntities.PartyEmployeeRelationshipSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="trvHcmWorker_PersonnelNumber">The value of trvHcmWorker_PersonnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PartyEmployeeRelationshipSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PartyEmployeeRelationship> _source,
            string dataAreaId, 
            string trvHcmWorker_PersonnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TrvHcmWorker_PersonnelNumber", trvHcmWorker_PersonnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PartyEmployeeRelationshipSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.IdentificationType as global::Microsoft.Dynamics.DataEntities.IdentificationTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.IdentificationTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.IdentificationType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.IdentificationTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.IdentificationType as global::Microsoft.Dynamics.DataEntities.IdentificationTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="identificationTypeId">The value of identificationTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.IdentificationTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.IdentificationType> _source,
            string identificationTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "IdentificationTypeId", identificationTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.IdentificationTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Team as global::Microsoft.Dynamics.DataEntities.TeamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TeamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Team> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TeamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Team as global::Microsoft.Dynamics.DataEntities.TeamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.TeamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Team> _source,
            string partyNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.TeamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailButtonGrid as global::Microsoft.Dynamics.DataEntities.RetailButtonGridSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailButtonGridSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailButtonGrid> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailButtonGridSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailButtonGrid as global::Microsoft.Dynamics.DataEntities.RetailButtonGridSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="buttonGridId">The value of buttonGridId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailButtonGridSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailButtonGrid> _source,
            string buttonGridId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ButtonGridId", buttonGridId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailButtonGridSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FormW2BoxReportingAdjustment as global::Microsoft.Dynamics.DataEntities.FormW2BoxReportingAdjustmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FormW2BoxReportingAdjustmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FormW2BoxReportingAdjustment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FormW2BoxReportingAdjustmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FormW2BoxReportingAdjustment as global::Microsoft.Dynamics.DataEntities.FormW2BoxReportingAdjustmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="w2BoxNumber">The value of w2BoxNumber</param>
        /// <param name="reportingDate">The value of reportingDate</param>
        public static global::Microsoft.Dynamics.DataEntities.FormW2BoxReportingAdjustmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FormW2BoxReportingAdjustment> _source,
            string dataAreaId, 
            string personnelNumber, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.PayrollW2BoxNumber> w2BoxNumber, 
            global::System.DateTimeOffset reportingDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PersonnelNumber", personnelNumber }, 
                { "W2BoxNumber", w2BoxNumber }, 
                { "ReportingDate", reportingDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.FormW2BoxReportingAdjustmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntry as global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntry as global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="inventorySiteId">The value of inventorySiteId</param>
        /// <param name="inventoryWarehouseId">The value of inventoryWarehouseId</param>
        /// <param name="itemBatchNumber">The value of itemBatchNumber</param>
        /// <param name="itemSerialNumber">The value of itemSerialNumber</param>
        /// <param name="warehouseLocationId">The value of warehouseLocationId</param>
        /// <param name="licensePlateNumber">The value of licensePlateNumber</param>
        /// <param name="inventoryStatusId">The value of inventoryStatusId</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntry> _source,
            string dataAreaId, 
            string journalNumber, 
            string itemNumber, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string inventorySiteId, 
            string inventoryWarehouseId, 
            string itemBatchNumber, 
            string itemSerialNumber, 
            string warehouseLocationId, 
            string licensePlateNumber, 
            string inventoryStatusId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }, 
                { "ItemNumber", itemNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "InventorySiteId", inventorySiteId }, 
                { "InventoryWarehouseId", inventoryWarehouseId }, 
                { "ItemBatchNumber", itemBatchNumber }, 
                { "ItemSerialNumber", itemSerialNumber }, 
                { "WarehouseLocationId", warehouseLocationId }, 
                { "LicensePlateNumber", licensePlateNumber }, 
                { "InventoryStatusId", inventoryStatusId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequest as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequest> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequest as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="requestId">The value of requestId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequest> _source,
            string dataAreaId, 
            string requestId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RequestId", requestId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup as global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup as global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemBatch as global::Microsoft.Dynamics.DataEntities.ItemBatchSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemBatchSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemBatch> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ItemBatchSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemBatch as global::Microsoft.Dynamics.DataEntities.ItemBatchSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="batchNumber">The value of batchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemBatchSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemBatch> _source,
            string dataAreaId, 
            string itemNumber, 
            string batchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "BatchNumber", batchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ItemBatchSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileDetails as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileDetailsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileDetailsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileDetails> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileDetailsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileDetails as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileDetailsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="timeProfileId">The value of timeProfileId</param>
        /// <param name="weekDay">The value of weekDay</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileDetailsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileDetails> _source,
            string dataAreaId, 
            string timeProfileId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.JmgDayIdEnum> weekDay)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TimeProfileId", timeProfileId }, 
                { "WeekDay", weekDay }
            };
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileDetailsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV2 as global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV2 as global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="operationalSiteId">The value of operationalSiteId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV2> _source,
            string dataAreaId, 
            string itemNumber, 
            string operationalSiteId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "OperationalSiteId", operationalSiteId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductSpecificOrderSettingV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderCDS as global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderCDSSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderCDSSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderCDS> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderCDSSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderCDS as global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderCDSSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="integrationComputedKey">The value of integrationComputedKey</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderCDSSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderCDS> _source,
            string dataAreaId, 
            string integrationComputedKey)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "IntegrationComputedKey", integrationComputedKey }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerJournalHeaderCDSSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineInquiry as global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineInquirySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineInquirySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineInquiry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineInquirySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineInquiry as global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineInquirySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        /// <param name="lineNum">The value of lineNum</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineInquirySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineInquiry> _source,
            string dataAreaId, 
            string payStatementNumber, 
            decimal lineNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PayStatementNumber", payStatementNumber }, 
                { "LineNum", lineNum }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayStatementEarningLineInquirySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration as global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration as global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="projectName">The value of projectName</param>
        public static global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source,
            string projectName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProjectName", projectName }
            };
            return new global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OfBusiness as global::Microsoft.Dynamics.DataEntities.OfBusinessSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OfBusinessSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OfBusiness> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OfBusinessSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OfBusiness as global::Microsoft.Dynamics.DataEntities.OfBusinessSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lineOfBusiness">The value of lineOfBusiness</param>
        public static global::Microsoft.Dynamics.DataEntities.OfBusinessSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OfBusiness> _source,
            string dataAreaId, 
            string lineOfBusiness)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LineOfBusiness", lineOfBusiness }
            };
            return new global::Microsoft.Dynamics.DataEntities.OfBusinessSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStore as global::Microsoft.Dynamics.DataEntities.RetailStoreSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStore> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStore as global::Microsoft.Dynamics.DataEntities.RetailStoreSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="retailChannelId">The value of retailChannelId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStore> _source,
            string retailChannelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RetailChannelId", retailChannelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalDiscountVendorGroup as global::Microsoft.Dynamics.DataEntities.TotalDiscountVendorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalDiscountVendorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalDiscountVendorGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TotalDiscountVendorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TotalDiscountVendorGroup as global::Microsoft.Dynamics.DataEntities.TotalDiscountVendorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.TotalDiscountVendorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TotalDiscountVendorGroup> _source,
            string dataAreaId, 
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupCode", groupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.TotalDiscountVendorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductionPool as global::Microsoft.Dynamics.DataEntities.ProductionPoolSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductionPoolSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductionPool> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductionPoolSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductionPool as global::Microsoft.Dynamics.DataEntities.ProductionPoolSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="poolId">The value of poolId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductionPoolSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductionPool> _source,
            string dataAreaId, 
            string poolId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PoolId", poolId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductionPoolSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentFee as global::Microsoft.Dynamics.DataEntities.CustomerPaymentFeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentFeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentFee> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentFeeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentFee as global::Microsoft.Dynamics.DataEntities.CustomerPaymentFeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentFeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentFee> _source,
            string dataAreaId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentFeeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobGroup as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobGroup as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="jobGroupId">The value of jobGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobGroup> _source,
            string dataAreaId, 
            string jobGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JobGroupId", jobGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ConsolidateAccount as global::Microsoft.Dynamics.DataEntities.ConsolidateAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ConsolidateAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ConsolidateAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ConsolidateAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ConsolidateAccount as global::Microsoft.Dynamics.DataEntities.ConsolidateAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="consolidationAccountGroup">The value of consolidationAccountGroup</param>
        /// <param name="chartOfAccounts">The value of chartOfAccounts</param>
        /// <param name="mainAccount">The value of mainAccount</param>
        public static global::Microsoft.Dynamics.DataEntities.ConsolidateAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ConsolidateAccount> _source,
            string consolidationAccountGroup, 
            string chartOfAccounts, 
            string mainAccount)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ConsolidationAccountGroup", consolidationAccountGroup }, 
                { "ChartOfAccounts", chartOfAccounts }, 
                { "MainAccount", mainAccount }
            };
            return new global::Microsoft.Dynamics.DataEntities.ConsolidateAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesQuotationLine as global::Microsoft.Dynamics.DataEntities.SalesQuotationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesQuotationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesQuotationLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesQuotationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesQuotationLine as global::Microsoft.Dynamics.DataEntities.SalesQuotationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="inventoryLotId">The value of inventoryLotId</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesQuotationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesQuotationLine> _source,
            string dataAreaId, 
            string inventoryLotId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InventoryLotId", inventoryLotId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesQuotationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV3 as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV3> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV3 as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="manufacturedItemNumber">The value of manufacturedItemNumber</param>
        /// <param name="bOMId">The value of bOMId</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="isActive">The value of isActive</param>
        /// <param name="validFromDate">The value of validFromDate</param>
        /// <param name="fromQuantity">The value of fromQuantity</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV3> _source,
            string dataAreaId, 
            string manufacturedItemNumber, 
            string bOMId, 
            string productionSiteId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.NoYes> isActive, 
            global::System.DateTimeOffset validFromDate, 
            decimal fromQuantity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ManufacturedItemNumber", manufacturedItemNumber }, 
                { "BOMId", bOMId }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "IsActive", isActive }, 
                { "ValidFromDate", validFromDate }, 
                { "FromQuantity", fromQuantity }
            };
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ServiceAccountingCode as global::Microsoft.Dynamics.DataEntities.ServiceAccountingCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ServiceAccountingCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ServiceAccountingCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ServiceAccountingCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ServiceAccountingCode as global::Microsoft.Dynamics.DataEntities.ServiceAccountingCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="sAC">The value of sAC</param>
        public static global::Microsoft.Dynamics.DataEntities.ServiceAccountingCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ServiceAccountingCode> _source,
            string dataAreaId, 
            string sAC)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SAC", sAC }
            };
            return new global::Microsoft.Dynamics.DataEntities.ServiceAccountingCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MainAccountCompany as global::Microsoft.Dynamics.DataEntities.MainAccountCompanySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MainAccountCompanySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MainAccountCompany> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MainAccountCompanySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MainAccountCompany as global::Microsoft.Dynamics.DataEntities.MainAccountCompanySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="mainAccountId">The value of mainAccountId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        public static global::Microsoft.Dynamics.DataEntities.MainAccountCompanySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MainAccountCompany> _source,
            string mainAccountId, 
            string legalEntityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "MainAccountId", mainAccountId }, 
                { "LegalEntityId", legalEntityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.MainAccountCompanySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductGroup as global::Microsoft.Dynamics.DataEntities.ProductGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductGroup as global::Microsoft.Dynamics.DataEntities.ProductGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductGroup> _source,
            string dataAreaId, 
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeferralsLedgerAccounts as global::Microsoft.Dynamics.DataEntities.DeferralsLedgerAccountsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DeferralsLedgerAccountsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeferralsLedgerAccounts> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DeferralsLedgerAccountsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeferralsLedgerAccounts as global::Microsoft.Dynamics.DataEntities.DeferralsLedgerAccountsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="num">The value of num</param>
        /// <param name="transactionType">The value of transactionType</param>
        /// <param name="groupings">The value of groupings</param>
        /// <param name="postingProfile">The value of postingProfile</param>
        /// <param name="postValue">The value of postValue</param>
        public static global::Microsoft.Dynamics.DataEntities.DeferralsLedgerAccountsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeferralsLedgerAccounts> _source,
            string dataAreaId, 
            string num, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RDeferralsTransType> transactionType, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RDeferralsTableGroupAllBook> groupings, 
            string postingProfile, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RDeferralsPostValue> postValue)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Num", num }, 
                { "TransactionType", transactionType }, 
                { "Groupings", groupings }, 
                { "PostingProfile", postingProfile }, 
                { "PostValue", postValue }
            };
            return new global::Microsoft.Dynamics.DataEntities.DeferralsLedgerAccountsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EmploymentDetail as global::Microsoft.Dynamics.DataEntities.EmploymentDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EmploymentDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EmploymentDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EmploymentDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EmploymentDetail as global::Microsoft.Dynamics.DataEntities.EmploymentDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="employmentStartDate">The value of employmentStartDate</param>
        /// <param name="employmentEndDate">The value of employmentEndDate</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.EmploymentDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EmploymentDetail> _source,
            string personnelNumber, 
            string legalEntityId, 
            global::System.DateTimeOffset employmentStartDate, 
            global::System.DateTimeOffset employmentEndDate, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "LegalEntityId", legalEntityId }, 
                { "EmploymentStartDate", employmentStartDate }, 
                { "EmploymentEndDate", employmentEndDate }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.EmploymentDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchGroup as global::Microsoft.Dynamics.DataEntities.BatchGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BatchGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BatchGroup as global::Microsoft.Dynamics.DataEntities.BatchGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupId">The value of groupId</param>
        /// <param name="serverId">The value of serverId</param>
        public static global::Microsoft.Dynamics.DataEntities.BatchGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchGroup> _source,
            string groupId, 
            string serverId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupId", groupId }, 
                { "ServerId", serverId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BatchGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlGroupCriterion as global::Microsoft.Dynamics.DataEntities.BudgetControlGroupCriterionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlGroupCriterionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlGroupCriterion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlGroupCriterionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlGroupCriterion as global::Microsoft.Dynamics.DataEntities.BudgetControlGroupCriterionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="memberName">The value of memberName</param>
        /// <param name="dimensionAttributeId">The value of dimensionAttributeId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlGroupCriterionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlGroupCriterion> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            string memberName, 
            string dimensionAttributeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "MemberName", memberName }, 
                { "DimensionAttributeId", dimensionAttributeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlGroupCriterionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayPeriod as global::Microsoft.Dynamics.DataEntities.PayPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayPeriod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayPeriod as global::Microsoft.Dynamics.DataEntities.PayPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="payCycleId">The value of payCycleId</param>
        /// <param name="periodStartDate">The value of periodStartDate</param>
        /// <param name="periodEndDate">The value of periodEndDate</param>
        public static global::Microsoft.Dynamics.DataEntities.PayPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayPeriod> _source,
            string payCycleId, 
            global::System.DateTimeOffset periodStartDate, 
            global::System.DateTimeOffset periodEndDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PayCycleId", payCycleId }, 
                { "PeriodStartDate", periodStartDate }, 
                { "PeriodEndDate", periodEndDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionDuration as global::Microsoft.Dynamics.DataEntities.PositionDurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionDurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionDuration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionDurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionDuration as global::Microsoft.Dynamics.DataEntities.PositionDurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="positionId">The value of positionId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionDurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionDuration> _source,
            string positionId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PositionId", positionId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionDurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetDimension as global::Microsoft.Dynamics.DataEntities.BudgetDimensionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetDimensionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetDimension> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetDimensionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetDimension as global::Microsoft.Dynamics.DataEntities.BudgetDimensionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="dimensionAttributeId">The value of dimensionAttributeId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetDimensionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetDimension> _source,
            string dataAreaId, 
            string legalEntityId, 
            string dimensionAttributeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "DimensionAttributeId", dimensionAttributeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetDimensionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CashFlowForecastExternalSourceEntry as global::Microsoft.Dynamics.DataEntities.CashFlowForecastExternalSourceEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CashFlowForecastExternalSourceEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CashFlowForecastExternalSourceEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CashFlowForecastExternalSourceEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CashFlowForecastExternalSourceEntry as global::Microsoft.Dynamics.DataEntities.CashFlowForecastExternalSourceEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="entryId">The value of entryId</param>
        public static global::Microsoft.Dynamics.DataEntities.CashFlowForecastExternalSourceEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CashFlowForecastExternalSourceEntry> _source,
            string entryId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EntryId", entryId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CashFlowForecastExternalSourceEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RouteVersion as global::Microsoft.Dynamics.DataEntities.RouteVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RouteVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RouteVersion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RouteVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RouteVersion as global::Microsoft.Dynamics.DataEntities.RouteVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="validFromQuantity">The value of validFromQuantity</param>
        /// <param name="validFromDate">The value of validFromDate</param>
        /// <param name="routeId">The value of routeId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="isActive">The value of isActive</param>
        public static global::Microsoft.Dynamics.DataEntities.RouteVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RouteVersion> _source,
            string dataAreaId, 
            decimal validFromQuantity, 
            global::System.DateTimeOffset validFromDate, 
            string routeId, 
            string productSizeId, 
            string productColorId, 
            string productionSiteId, 
            string productConfigurationId, 
            string productStyleId, 
            string itemNumber, 
            int isActive)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ValidFromQuantity", validFromQuantity }, 
                { "ValidFromDate", validFromDate }, 
                { "RouteId", routeId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductColorId", productColorId }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductStyleId", productStyleId }, 
                { "ItemNumber", itemNumber }, 
                { "IsActive", isActive }
            };
            return new global::Microsoft.Dynamics.DataEntities.RouteVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SupplyForecastEntry as global::Microsoft.Dynamics.DataEntities.SupplyForecastEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SupplyForecastEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SupplyForecastEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SupplyForecastEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SupplyForecastEntry as global::Microsoft.Dynamics.DataEntities.SupplyForecastEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="forecastEntryNumber">The value of forecastEntryNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SupplyForecastEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SupplyForecastEntry> _source,
            string dataAreaId, 
            long forecastEntryNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ForecastEntryNumber", forecastEntryNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SupplyForecastEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReturnOrderLine as global::Microsoft.Dynamics.DataEntities.ReturnOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReturnOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReturnOrderLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReturnOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReturnOrderLine as global::Microsoft.Dynamics.DataEntities.ReturnOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="returnOrderNumber">The value of returnOrderNumber</param>
        /// <param name="returnInventoryLotId">The value of returnInventoryLotId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReturnOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReturnOrderLine> _source,
            string dataAreaId, 
            string returnOrderNumber, 
            string returnInventoryLotId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReturnOrderNumber", returnOrderNumber }, 
                { "ReturnInventoryLotId", returnInventoryLotId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReturnOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSizeGroup as global::Microsoft.Dynamics.DataEntities.ProductSizeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSizeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSizeGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductSizeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSizeGroup as global::Microsoft.Dynamics.DataEntities.ProductSizeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSizeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSizeGroup> _source,
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductSizeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SequenceTable as global::Microsoft.Dynamics.DataEntities.SequenceTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SequenceTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SequenceTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SequenceTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SequenceTable as global::Microsoft.Dynamics.DataEntities.SequenceTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="numberSequenceCode">The value of numberSequenceCode</param>
        /// <param name="scopeType">The value of scopeType</param>
        /// <param name="scopeValue">The value of scopeValue</param>
        public static global::Microsoft.Dynamics.DataEntities.SequenceTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SequenceTable> _source,
            string numberSequenceCode, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.NumberSequenceType> scopeType, 
            string scopeValue)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "NumberSequenceCode", numberSequenceCode }, 
                { "ScopeType", scopeType }, 
                { "ScopeValue", scopeValue }
            };
            return new global::Microsoft.Dynamics.DataEntities.SequenceTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PostingDefinitionEntry as global::Microsoft.Dynamics.DataEntities.PostingDefinitionEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PostingDefinitionEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PostingDefinitionEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PostingDefinitionEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PostingDefinitionEntry as global::Microsoft.Dynamics.DataEntities.PostingDefinitionEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="matchCriteriaLedgerAccountDisplayValue">The value of matchCriteriaLedgerAccountDisplayValue</param>
        /// <param name="matchCriteriaLedgerAccountAccountStructure">The value of matchCriteriaLedgerAccountAccountStructure</param>
        /// <param name="generatedEntryLedgerAccountDisplayValue">The value of generatedEntryLedgerAccountDisplayValue</param>
        /// <param name="postingDefinitionId">The value of postingDefinitionId</param>
        /// <param name="validFrom">The value of validFrom</param>
        public static global::Microsoft.Dynamics.DataEntities.PostingDefinitionEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PostingDefinitionEntry> _source,
            string dataAreaId, 
            string matchCriteriaLedgerAccountDisplayValue, 
            string matchCriteriaLedgerAccountAccountStructure, 
            string generatedEntryLedgerAccountDisplayValue, 
            string postingDefinitionId, 
            global::System.DateTimeOffset validFrom)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MatchCriteriaLedgerAccountDisplayValue", matchCriteriaLedgerAccountDisplayValue }, 
                { "MatchCriteriaLedgerAccountAccountStructure", matchCriteriaLedgerAccountAccountStructure }, 
                { "GeneratedEntryLedgerAccountDisplayValue", generatedEntryLedgerAccountDisplayValue }, 
                { "PostingDefinitionId", postingDefinitionId }, 
                { "ValidFrom", validFrom }
            };
            return new global::Microsoft.Dynamics.DataEntities.PostingDefinitionEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FreightBillDetail as global::Microsoft.Dynamics.DataEntities.FreightBillDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FreightBillDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FreightBillDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FreightBillDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FreightBillDetail as global::Microsoft.Dynamics.DataEntities.FreightBillDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="freightBillId">The value of freightBillId</param>
        /// <param name="freightBillDetailEntryNumber">The value of freightBillDetailEntryNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.FreightBillDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FreightBillDetail> _source,
            string dataAreaId, 
            string freightBillId, 
            long freightBillDetailEntryNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FreightBillId", freightBillId }, 
                { "FreightBillDetailEntryNumber", freightBillDetailEntryNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.FreightBillDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DefaultDescriptionParameters as global::Microsoft.Dynamics.DataEntities.DefaultDescriptionParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DefaultDescriptionParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DefaultDescriptionParameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DefaultDescriptionParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DefaultDescriptionParameters as global::Microsoft.Dynamics.DataEntities.DefaultDescriptionParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="description">The value of description</param>
        /// <param name="language">The value of language</param>
        /// <param name="parameterNumber">The value of parameterNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.DefaultDescriptionParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DefaultDescriptionParameters> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LedgerTransTxt> description, 
            string language, 
            int parameterNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Description", description }, 
                { "Language", language }, 
                { "ParameterNumber", parameterNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.DefaultDescriptionParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="requestTypeId">The value of requestTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestType> _source,
            string dataAreaId, 
            string requestTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RequestTypeId", requestTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.QualityOrderHeader as global::Microsoft.Dynamics.DataEntities.QualityOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.QualityOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.QualityOrderHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.QualityOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.QualityOrderHeader as global::Microsoft.Dynamics.DataEntities.QualityOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="qualityOrderNumber">The value of qualityOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.QualityOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.QualityOrderHeader> _source,
            string dataAreaId, 
            string qualityOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "QualityOrderNumber", qualityOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.QualityOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttribute as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttribute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttribute as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        /// <param name="attributeTypeId">The value of attributeTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttribute> _source,
            string dataAreaId, 
            string functionalLocationId, 
            string attributeTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationId", functionalLocationId }, 
                { "AttributeTypeId", attributeTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCallCenter as global::Microsoft.Dynamics.DataEntities.RetailCallCenterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCallCenterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCallCenter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailCallCenterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCallCenter as global::Microsoft.Dynamics.DataEntities.RetailCallCenterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="retailChannelId">The value of retailChannelId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCallCenterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCallCenter> _source,
            string retailChannelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RetailChannelId", retailChannelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailCallCenterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailEventNotificationProfile as global::Microsoft.Dynamics.DataEntities.RetailEventNotificationProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailEventNotificationProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailEventNotificationProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailEventNotificationProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailEventNotificationProfile as global::Microsoft.Dynamics.DataEntities.RetailEventNotificationProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="profileId">The value of profileId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailEventNotificationProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailEventNotificationProfile> _source,
            string dataAreaId, 
            string profileId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProfileId", profileId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailEventNotificationProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentLineLedgerJournal as global::Microsoft.Dynamics.DataEntities.SADDocumentLineLedgerJournalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentLineLedgerJournalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentLineLedgerJournal> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentLineLedgerJournalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentLineLedgerJournal as global::Microsoft.Dynamics.DataEntities.SADDocumentLineLedgerJournalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="sADDate">The value of sADDate</param>
        /// <param name="sADNumber">The value of sADNumber</param>
        /// <param name="position">The value of position</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentLineLedgerJournalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentLineLedgerJournal> _source,
            string dataAreaId, 
            global::System.DateTimeOffset sADDate, 
            string sADNumber, 
            int position)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SADDate", sADDate }, 
                { "SADNumber", sADNumber }, 
                { "Position", position }
            };
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentLineLedgerJournalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxCodeLimit as global::Microsoft.Dynamics.DataEntities.TaxCodeLimitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxCodeLimitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxCodeLimit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxCodeLimitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxCodeLimit as global::Microsoft.Dynamics.DataEntities.TaxCodeLimitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxCodeId">The value of taxCodeId</param>
        /// <param name="fromDate">The value of fromDate</param>
        /// <param name="toDate">The value of toDate</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxCodeLimitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxCodeLimit> _source,
            string dataAreaId, 
            string taxCodeId, 
            global::System.DateTimeOffset fromDate, 
            global::System.DateTimeOffset toDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxCodeId", taxCodeId }, 
                { "FromDate", fromDate }, 
                { "ToDate", toDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxCodeLimitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RelationshipType as global::Microsoft.Dynamics.DataEntities.RelationshipTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RelationshipTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RelationshipType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RelationshipTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RelationshipType as global::Microsoft.Dynamics.DataEntities.RelationshipTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="iD">The value of iD</param>
        public static global::Microsoft.Dynamics.DataEntities.RelationshipTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RelationshipType> _source,
            string iD)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ID", iD }
            };
            return new global::Microsoft.Dynamics.DataEntities.RelationshipTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectExpenseForecast as global::Microsoft.Dynamics.DataEntities.ProjectExpenseForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectExpenseForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectExpenseForecast> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectExpenseForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectExpenseForecast as global::Microsoft.Dynamics.DataEntities.ProjectExpenseForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="transId">The value of transId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectExpenseForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectExpenseForecast> _source,
            string dataAreaId, 
            string transId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TransId", transId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectExpenseForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAsset as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAsset> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAsset as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAsset> _source,
            string dataAreaId, 
            string maintenanceAssetId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetId", maintenanceAssetId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTable as global::Microsoft.Dynamics.DataEntities.CourseTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTable as global::Microsoft.Dynamics.DataEntities.CourseTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="courseId">The value of courseId</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTable> _source,
            string dataAreaId, 
            string courseId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CourseId", courseId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationLine as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationLine as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseAgreementId">The value of purchaseAgreementId</param>
        /// <param name="confirmationNumber">The value of confirmationNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationLine> _source,
            string dataAreaId, 
            string purchaseAgreementId, 
            string confirmationNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseAgreementId", purchaseAgreementId }, 
                { "ConfirmationNumber", confirmationNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetDocument as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetDocumentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetDocumentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetDocument> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetDocumentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetDocument as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetDocumentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="productId">The value of productId</param>
        /// <param name="modelProductId">The value of modelProductId</param>
        /// <param name="modelId">The value of modelId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="jobGroupId">The value of jobGroupId</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        /// <param name="jobVariantId">The value of jobVariantId</param>
        /// <param name="jobTradeId">The value of jobTradeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetDocumentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetDocument> _source,
            string dataAreaId, 
            string functionalLocationId, 
            string maintenanceAssetTypeId, 
            string productId, 
            string modelProductId, 
            string modelId, 
            string maintenanceAssetId, 
            string jobGroupId, 
            string jobTypeId, 
            string jobVariantId, 
            string jobTradeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationId", functionalLocationId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "ProductId", productId }, 
                { "ModelProductId", modelProductId }, 
                { "ModelId", modelId }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "JobGroupId", jobGroupId }, 
                { "JobTypeId", jobTypeId }, 
                { "JobVariantId", jobVariantId }, 
                { "JobTradeId", jobTradeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetDocumentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandRequest as global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandRequestSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandRequestSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandRequest> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandRequestSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandRequest as global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandRequestSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="requestId">The value of requestId</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandRequestSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandRequest> _source,
            string dataAreaId, 
            string requestId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RequestId", requestId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSInventoryOnHandRequestSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductReleasePolicyLegalEntityRule as global::Microsoft.Dynamics.DataEntities.ProductReleasePolicyLegalEntityRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductReleasePolicyLegalEntityRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductReleasePolicyLegalEntityRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductReleasePolicyLegalEntityRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductReleasePolicyLegalEntityRule as global::Microsoft.Dynamics.DataEntities.ProductReleasePolicyLegalEntityRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="productReleasePolicyName">The value of productReleasePolicyName</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductReleasePolicyLegalEntityRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductReleasePolicyLegalEntityRule> _source,
            string legalEntityId, 
            string productReleasePolicyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LegalEntityId", legalEntityId }, 
                { "ProductReleasePolicyName", productReleasePolicyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductReleasePolicyLegalEntityRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SlipJournalTable as global::Microsoft.Dynamics.DataEntities.SlipJournalTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SlipJournalTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SlipJournalTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SlipJournalTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SlipJournalTable as global::Microsoft.Dynamics.DataEntities.SlipJournalTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SlipJournalTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SlipJournalTable> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SlipJournalTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.UnitOfMeasure as global::Microsoft.Dynamics.DataEntities.UnitOfMeasureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.UnitOfMeasureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.UnitOfMeasure> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.UnitOfMeasureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.UnitOfMeasure as global::Microsoft.Dynamics.DataEntities.UnitOfMeasureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="unitSymbol">The value of unitSymbol</param>
        public static global::Microsoft.Dynamics.DataEntities.UnitOfMeasureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.UnitOfMeasure> _source,
            string unitSymbol)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UnitSymbol", unitSymbol }
            };
            return new global::Microsoft.Dynamics.DataEntities.UnitOfMeasureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersion as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersion as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="manufacturedItemNumber">The value of manufacturedItemNumber</param>
        /// <param name="bOMId">The value of bOMId</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="isActive">The value of isActive</param>
        /// <param name="validFromDate">The value of validFromDate</param>
        /// <param name="fromQuantity">The value of fromQuantity</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersion> _source,
            string dataAreaId, 
            string manufacturedItemNumber, 
            string bOMId, 
            string productionSiteId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            int isActive, 
            global::System.DateTimeOffset validFromDate, 
            decimal fromQuantity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ManufacturedItemNumber", manufacturedItemNumber }, 
                { "BOMId", bOMId }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "IsActive", isActive }, 
                { "ValidFromDate", validFromDate }, 
                { "FromQuantity", fromQuantity }
            };
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderLineDocumentAttachment as global::Microsoft.Dynamics.DataEntities.SalesOrderLineDocumentAttachmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderLineDocumentAttachmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderLineDocumentAttachment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderLineDocumentAttachmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderLineDocumentAttachment as global::Microsoft.Dynamics.DataEntities.SalesOrderLineDocumentAttachmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="documentId">The value of documentId</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderLineDocumentAttachmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderLineDocumentAttachment> _source,
            string dataAreaId, 
            global::System.Guid documentId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DocumentId", documentId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderLineDocumentAttachmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SentProductReleaseHeader as global::Microsoft.Dynamics.DataEntities.SentProductReleaseHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SentProductReleaseHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SentProductReleaseHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SentProductReleaseHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SentProductReleaseHeader as global::Microsoft.Dynamics.DataEntities.SentProductReleaseHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="releasingLegalEntityId">The value of releasingLegalEntityId</param>
        /// <param name="releaseStatus">The value of releaseStatus</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.SentProductReleaseHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SentProductReleaseHeader> _source,
            string dataAreaId, 
            string productNumber, 
            string releasingLegalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.EngChgReleaseStatus> releaseStatus, 
            string productVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductNumber", productNumber }, 
                { "ReleasingLegalEntityId", releasingLegalEntityId }, 
                { "ReleaseStatus", releaseStatus }, 
                { "ProductVersionId", productVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SentProductReleaseHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ChartOfAccounts as global::Microsoft.Dynamics.DataEntities.ChartOfAccountsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ChartOfAccountsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ChartOfAccounts> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ChartOfAccountsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ChartOfAccounts as global::Microsoft.Dynamics.DataEntities.ChartOfAccountsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="chartOfAccounts">The value of chartOfAccounts</param>
        public static global::Microsoft.Dynamics.DataEntities.ChartOfAccountsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ChartOfAccounts> _source,
            string chartOfAccounts)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ChartOfAccounts", chartOfAccounts }
            };
            return new global::Microsoft.Dynamics.DataEntities.ChartOfAccountsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementTemplate as global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementTemplate as global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="templateId">The value of templateId</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplate> _source,
            string templateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TemplateId", templateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationWorker as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationWorkerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationWorkerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationWorker> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationWorkerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationWorker as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationWorkerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        /// <param name="workerPersonnelNumber">The value of workerPersonnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationWorkerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationWorker> _source,
            string dataAreaId, 
            string functionalLocationId, 
            string workerPersonnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationId", functionalLocationId }, 
                { "WorkerPersonnelNumber", workerPersonnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationWorkerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PSAActual as global::Microsoft.Dynamics.DataEntities.PSAActualSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PSAActualSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PSAActual> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PSAActualSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PSAActual as global::Microsoft.Dynamics.DataEntities.PSAActualSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="transId">The value of transId</param>
        public static global::Microsoft.Dynamics.DataEntities.PSAActualSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PSAActual> _source,
            string dataAreaId, 
            string transId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TransId", transId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PSAActualSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelState> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lifecycleStateId">The value of lifecycleStateId</param>
        /// <param name="lifecycleModelId">The value of lifecycleModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelState> _source,
            string dataAreaId, 
            string lifecycleStateId, 
            string lifecycleModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LifecycleStateId", lifecycleStateId }, 
                { "LifecycleModelId", lifecycleModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTable as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTable as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workOrderId">The value of workOrderId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTable> _source,
            string dataAreaId, 
            string workOrderId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkOrderId", workOrderId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityOnlySalesTable as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityOnlySalesTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityOnlySalesTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityOnlySalesTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityOnlySalesTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityOnlySalesTable as global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityOnlySalesTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesOrderNumber">The value of salesOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityOnlySalesTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityOnlySalesTable> _source,
            string dataAreaId, 
            string salesOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesOrderNumber", salesOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderHeaderV2EntityOnlySalesTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerBankAccount as global::Microsoft.Dynamics.DataEntities.WorkerBankAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerBankAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerBankAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerBankAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerBankAccount as global::Microsoft.Dynamics.DataEntities.WorkerBankAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="accountIdentification">The value of accountIdentification</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerBankAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerBankAccount> _source,
            string personnelNumber, 
            string accountIdentification)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "AccountIdentification", accountIdentification }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerBankAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductLifecycleState as global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductLifecycleState> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductLifecycleState as global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="lifecycleStateId">The value of lifecycleStateId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductLifecycleState> _source,
            string lifecycleStateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LifecycleStateId", lifecycleStateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AAXSalesTableReadOnly as global::Microsoft.Dynamics.DataEntities.AAXSalesTableReadOnlySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AAXSalesTableReadOnlySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AAXSalesTableReadOnly> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AAXSalesTableReadOnlySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AAXSalesTableReadOnly as global::Microsoft.Dynamics.DataEntities.AAXSalesTableReadOnlySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesId">The value of salesId</param>
        public static global::Microsoft.Dynamics.DataEntities.AAXSalesTableReadOnlySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AAXSalesTableReadOnly> _source,
            string dataAreaId, 
            string salesId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesId", salesId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AAXSalesTableReadOnlySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerResponsible as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerResponsibleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerResponsibleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerResponsible> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerResponsibleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerResponsible as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerResponsibleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="jobGroupId">The value of jobGroupId</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        /// <param name="jobVariantId">The value of jobVariantId</param>
        /// <param name="jobTradeId">The value of jobTradeId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerResponsibleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerResponsible> _source,
            string dataAreaId, 
            string maintenanceAssetTypeId, 
            string maintenanceAssetId, 
            string jobGroupId, 
            string jobTypeId, 
            string jobVariantId, 
            string jobTradeId, 
            string functionalLocationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "JobGroupId", jobGroupId }, 
                { "JobTypeId", jobTypeId }, 
                { "JobVariantId", jobVariantId }, 
                { "JobTradeId", jobTradeId }, 
                { "FunctionalLocationId", functionalLocationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkerResponsibleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CoveredBeneficiaryRelationship as global::Microsoft.Dynamics.DataEntities.CoveredBeneficiaryRelationshipSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CoveredBeneficiaryRelationshipSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CoveredBeneficiaryRelationship> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CoveredBeneficiaryRelationshipSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CoveredBeneficiaryRelationship as global::Microsoft.Dynamics.DataEntities.CoveredBeneficiaryRelationshipSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitId">The value of benefitId</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="enrollmentStart">The value of enrollmentStart</param>
        /// <param name="enrollmentEnd">The value of enrollmentEnd</param>
        /// <param name="relationshipTypeId">The value of relationshipTypeId</param>
        /// <param name="childPartyId">The value of childPartyId</param>
        /// <param name="partyRelationshipDataAreaId">The value of partyRelationshipDataAreaId</param>
        /// <param name="partyRelationshipValidTo">The value of partyRelationshipValidTo</param>
        /// <param name="partyRelationshipValidFrom">The value of partyRelationshipValidFrom</param>
        public static global::Microsoft.Dynamics.DataEntities.CoveredBeneficiaryRelationshipSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CoveredBeneficiaryRelationship> _source,
            string benefitId, 
            string personnelNumber, 
            global::System.DateTimeOffset enrollmentStart, 
            global::System.DateTimeOffset enrollmentEnd, 
            string relationshipTypeId, 
            string childPartyId, 
            string partyRelationshipDataAreaId, 
            global::System.DateTimeOffset partyRelationshipValidTo, 
            global::System.DateTimeOffset partyRelationshipValidFrom)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitId", benefitId }, 
                { "PersonnelNumber", personnelNumber }, 
                { "EnrollmentStart", enrollmentStart }, 
                { "EnrollmentEnd", enrollmentEnd }, 
                { "RelationshipTypeId", relationshipTypeId }, 
                { "ChildPartyId", childPartyId }, 
                { "PartyRelationshipDataAreaId", partyRelationshipDataAreaId }, 
                { "PartyRelationshipValidTo", partyRelationshipValidTo }, 
                { "PartyRelationshipValidFrom", partyRelationshipValidFrom }
            };
            return new global::Microsoft.Dynamics.DataEntities.CoveredBeneficiaryRelationshipSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseSubCategory as global::Microsoft.Dynamics.DataEntities.ExpenseSubCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseSubCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseSubCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExpenseSubCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseSubCategory as global::Microsoft.Dynamics.DataEntities.ExpenseSubCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="expenseCategory">The value of expenseCategory</param>
        /// <param name="sharedSubCategoryName">The value of sharedSubCategoryName</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseSubCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseSubCategory> _source,
            string dataAreaId, 
            string expenseCategory, 
            string sharedSubCategoryName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ExpenseCategory", expenseCategory }, 
                { "SharedSubCategoryName", sharedSubCategoryName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExpenseSubCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TillLayoutSize as global::Microsoft.Dynamics.DataEntities.TillLayoutSizeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TillLayoutSizeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TillLayoutSize> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TillLayoutSizeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TillLayoutSize as global::Microsoft.Dynamics.DataEntities.TillLayoutSizeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="layoutSizeId">The value of layoutSizeId</param>
        public static global::Microsoft.Dynamics.DataEntities.TillLayoutSizeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TillLayoutSize> _source,
            string layoutSizeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LayoutSizeId", layoutSizeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TillLayoutSizeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailHardwareStation as global::Microsoft.Dynamics.DataEntities.RetailHardwareStationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailHardwareStationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailHardwareStation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailHardwareStationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailHardwareStation as global::Microsoft.Dynamics.DataEntities.RetailHardwareStationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="hardwareStationId">The value of hardwareStationId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailHardwareStationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailHardwareStation> _source,
            string hardwareStationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "HardwareStationId", hardwareStationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailHardwareStationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OperationalSite as global::Microsoft.Dynamics.DataEntities.OperationalSiteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OperationalSiteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OperationalSite> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OperationalSiteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OperationalSite as global::Microsoft.Dynamics.DataEntities.OperationalSiteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="siteId">The value of siteId</param>
        public static global::Microsoft.Dynamics.DataEntities.OperationalSiteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OperationalSite> _source,
            string dataAreaId, 
            string siteId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SiteId", siteId }
            };
            return new global::Microsoft.Dynamics.DataEntities.OperationalSiteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterV2 as global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterV2 as global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterV2> _source,
            string dataAreaId, 
            string itemNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductMasterV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreTenderType as global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreTenderType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreTenderType as global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="retailChannelId">The value of retailChannelId</param>
        /// <param name="paymentMethodNumber">The value of paymentMethodNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreTenderType> _source,
            string dataAreaId, 
            string retailChannelId, 
            string paymentMethodNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RetailChannelId", retailChannelId }, 
                { "PaymentMethodNumber", paymentMethodNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeader as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeader as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="royaltyAgreementId">The value of royaltyAgreementId</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeader> _source,
            string dataAreaId, 
            string royaltyAgreementId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RoyaltyAgreementId", royaltyAgreementId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccrualPlanRule as global::Microsoft.Dynamics.DataEntities.AccrualPlanRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AccrualPlanRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccrualPlanRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AccrualPlanRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccrualPlanRule as global::Microsoft.Dynamics.DataEntities.AccrualPlanRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accrualId">The value of accrualId</param>
        /// <param name="employmentMonths">The value of employmentMonths</param>
        public static global::Microsoft.Dynamics.DataEntities.AccrualPlanRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccrualPlanRule> _source,
            string accrualId, 
            decimal employmentMonths)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccrualId", accrualId }, 
                { "EmploymentMonths", employmentMonths }
            };
            return new global::Microsoft.Dynamics.DataEntities.AccrualPlanRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreementLinesFulfillment as global::Microsoft.Dynamics.DataEntities.SalesAgreementLinesFulfillmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementLinesFulfillmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreementLinesFulfillment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementLinesFulfillmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreementLinesFulfillment as global::Microsoft.Dynamics.DataEntities.SalesAgreementLinesFulfillmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesAgreementId">The value of salesAgreementId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementLinesFulfillmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreementLinesFulfillment> _source,
            string dataAreaId, 
            string salesAgreementId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesAgreementId", salesAgreementId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementLinesFulfillmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCode as global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCode as global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="earningCodeId">The value of earningCodeId</param>
        /// <param name="positionId">The value of positionId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCode> _source,
            string personnelNumber, 
            string earningCodeId, 
            string positionId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "EarningCodeId", earningCodeId }, 
                { "PositionId", positionId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerPositionEarningCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitReleasedSubstitute as global::Microsoft.Dynamics.DataEntities.RetailKitReleasedSubstituteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitReleasedSubstituteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitReleasedSubstitute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailKitReleasedSubstituteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitReleasedSubstitute as global::Microsoft.Dynamics.DataEntities.RetailKitReleasedSubstituteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="kitProductNumber">The value of kitProductNumber</param>
        /// <param name="kitComponentLineNumber">The value of kitComponentLineNumber</param>
        /// <param name="substituteProductNumber">The value of substituteProductNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitReleasedSubstituteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitReleasedSubstitute> _source,
            string dataAreaId, 
            string kitProductNumber, 
            decimal kitComponentLineNumber, 
            string substituteProductNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "KitProductNumber", kitProductNumber }, 
                { "KitComponentLineNumber", kitComponentLineNumber }, 
                { "SubstituteProductNumber", substituteProductNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailKitReleasedSubstituteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BalanceControl as global::Microsoft.Dynamics.DataEntities.BalanceControlSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BalanceControlSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BalanceControl> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BalanceControlSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BalanceControl as global::Microsoft.Dynamics.DataEntities.BalanceControlSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="mainAccountId">The value of mainAccountId</param>
        /// <param name="chartOfAccounts">The value of chartOfAccounts</param>
        public static global::Microsoft.Dynamics.DataEntities.BalanceControlSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BalanceControl> _source,
            string dataAreaId, 
            string mainAccountId, 
            string chartOfAccounts)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MainAccountId", mainAccountId }, 
                { "ChartOfAccounts", chartOfAccounts }
            };
            return new global::Microsoft.Dynamics.DataEntities.BalanceControlSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ClassroomGroup as global::Microsoft.Dynamics.DataEntities.ClassroomGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ClassroomGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ClassroomGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ClassroomGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ClassroomGroup as global::Microsoft.Dynamics.DataEntities.ClassroomGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="classroomGroupId">The value of classroomGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.ClassroomGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ClassroomGroup> _source,
            string dataAreaId, 
            string classroomGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ClassroomGroupId", classroomGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ClassroomGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorGroup as global::Microsoft.Dynamics.DataEntities.VendorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorGroup as global::Microsoft.Dynamics.DataEntities.VendorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="vendorGroupId">The value of vendorGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorGroup> _source,
            string dataAreaId, 
            string vendorGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VendorGroupId", vendorGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ConsolidateAccountGroup as global::Microsoft.Dynamics.DataEntities.ConsolidateAccountGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ConsolidateAccountGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ConsolidateAccountGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ConsolidateAccountGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ConsolidateAccountGroup as global::Microsoft.Dynamics.DataEntities.ConsolidateAccountGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="consolidationAccountGroup">The value of consolidationAccountGroup</param>
        /// <param name="chartOfAccounts">The value of chartOfAccounts</param>
        /// <param name="mainAccount">The value of mainAccount</param>
        public static global::Microsoft.Dynamics.DataEntities.ConsolidateAccountGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ConsolidateAccountGroup> _source,
            string consolidationAccountGroup, 
            string chartOfAccounts, 
            string mainAccount)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ConsolidationAccountGroup", consolidationAccountGroup }, 
                { "ChartOfAccounts", chartOfAccounts }, 
                { "MainAccount", mainAccount }
            };
            return new global::Microsoft.Dynamics.DataEntities.ConsolidateAccountGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SkillType as global::Microsoft.Dynamics.DataEntities.SkillTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SkillTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SkillType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SkillTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SkillType as global::Microsoft.Dynamics.DataEntities.SkillTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="skillType">The value of skillType</param>
        public static global::Microsoft.Dynamics.DataEntities.SkillTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SkillType> _source,
            string skillType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SkillType", skillType }
            };
            return new global::Microsoft.Dynamics.DataEntities.SkillTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenancePlan as global::Microsoft.Dynamics.DataEntities.AssetMaintenancePlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenancePlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenancePlan> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenancePlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenancePlan as global::Microsoft.Dynamics.DataEntities.AssetMaintenancePlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenancePlanId">The value of maintenancePlanId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenancePlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenancePlan> _source,
            string dataAreaId, 
            string maintenancePlanId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenancePlanId", maintenancePlanId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenancePlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayAgreementLine as global::Microsoft.Dynamics.DataEntities.PayAgreementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayAgreementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayAgreementLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayAgreementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayAgreementLine as global::Microsoft.Dynamics.DataEntities.PayAgreementLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="recordId">The value of recordId</param>
        public static global::Microsoft.Dynamics.DataEntities.PayAgreementLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayAgreementLine> _source,
            string dataAreaId, 
            long recordId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RecordId", recordId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayAgreementLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerPostalAddressV2 as global::Microsoft.Dynamics.DataEntities.WorkerPostalAddressV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerPostalAddressV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerPostalAddressV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerPostalAddressV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerPostalAddressV2 as global::Microsoft.Dynamics.DataEntities.WorkerPostalAddressV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="addressLocationId">The value of addressLocationId</param>
        /// <param name="effective">The value of effective</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerPostalAddressV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerPostalAddressV2> _source,
            string personnelNumber, 
            string addressLocationId, 
            global::System.DateTimeOffset effective)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "AddressLocationId", addressLocationId }, 
                { "Effective", effective }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerPostalAddressV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayoutReportZone as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutReportZoneSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutReportZoneSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayoutReportZone> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutReportZoneSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayoutReportZone as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutReportZoneSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="layoutId">The value of layoutId</param>
        /// <param name="deviceType">The value of deviceType</param>
        /// <param name="zoneId">The value of zoneId</param>
        /// <param name="reportID">The value of reportID</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutReportZoneSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayoutReportZone> _source,
            string layoutId, 
            int deviceType, 
            string zoneId, 
            string reportID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LayoutId", layoutId }, 
                { "DeviceType", deviceType }, 
                { "ZoneId", zoneId }, 
                { "ReportID", reportID }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutReportZoneSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseInstructor as global::Microsoft.Dynamics.DataEntities.CourseInstructorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseInstructorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseInstructor> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseInstructorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseInstructor as global::Microsoft.Dynamics.DataEntities.CourseInstructorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="personId">The value of personId</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseInstructorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseInstructor> _source,
            string dataAreaId, 
            string personId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PersonId", personId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseInstructorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetParameters as global::Microsoft.Dynamics.DataEntities.BudgetParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetParameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetParameters as global::Microsoft.Dynamics.DataEntities.BudgetParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetParameters> _source,
            string dataAreaId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeCategory as global::Microsoft.Dynamics.DataEntities.EngineeringChangeCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeCategory as global::Microsoft.Dynamics.DataEntities.EngineeringChangeCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="categoryName">The value of categoryName</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeCategory> _source,
            string categoryName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CategoryName", categoryName }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerAccountAlias as global::Microsoft.Dynamics.DataEntities.LedgerAccountAliasSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerAccountAliasSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerAccountAlias> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerAccountAliasSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerAccountAlias as global::Microsoft.Dynamics.DataEntities.LedgerAccountAliasSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        /// <param name="aliasType">The value of aliasType</param>
        /// <param name="userInfo">The value of userInfo</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerAccountAliasSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerAccountAlias> _source,
            string name, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DimensionAliasType> aliasType, 
            string userInfo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }, 
                { "AliasType", aliasType }, 
                { "UserInfo", userInfo }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerAccountAliasSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSPurchaseOrderLine as global::Microsoft.Dynamics.DataEntities.CDSPurchaseOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSPurchaseOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSPurchaseOrderLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSPurchaseOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSPurchaseOrderLine as global::Microsoft.Dynamics.DataEntities.CDSPurchaseOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSPurchaseOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSPurchaseOrderLine> _source,
            string dataAreaId, 
            string purchaseOrderNumber, 
            long lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSPurchaseOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankCheckLayout as global::Microsoft.Dynamics.DataEntities.BankCheckLayoutSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BankCheckLayoutSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankCheckLayout> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BankCheckLayoutSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankCheckLayout as global::Microsoft.Dynamics.DataEntities.BankCheckLayoutSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bankAccountId">The value of bankAccountId</param>
        public static global::Microsoft.Dynamics.DataEntities.BankCheckLayoutSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankCheckLayout> _source,
            string dataAreaId, 
            string bankAccountId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BankAccountId", bankAccountId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BankCheckLayoutSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModel as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModel as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="requestLifecycleModelId">The value of requestLifecycleModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModel> _source,
            string dataAreaId, 
            string requestLifecycleModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RequestLifecycleModelId", requestLifecycleModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRequestLifecycleModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeductionArrear as global::Microsoft.Dynamics.DataEntities.DeductionArrearSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DeductionArrearSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeductionArrear> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DeductionArrearSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeductionArrear as global::Microsoft.Dynamics.DataEntities.DeductionArrearSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        /// <param name="benefitId">The value of benefitId</param>
        public static global::Microsoft.Dynamics.DataEntities.DeductionArrearSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeductionArrear> _source,
            string dataAreaId, 
            string payStatementNumber, 
            string benefitId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PayStatementNumber", payStatementNumber }, 
                { "BenefitId", benefitId }
            };
            return new global::Microsoft.Dynamics.DataEntities.DeductionArrearSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationPerformanceRating as global::Microsoft.Dynamics.DataEntities.CompensationPerformanceRatingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationPerformanceRatingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationPerformanceRating> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationPerformanceRatingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationPerformanceRating as global::Microsoft.Dynamics.DataEntities.CompensationPerformanceRatingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="rating">The value of rating</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationPerformanceRatingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationPerformanceRating> _source,
            string dataAreaId, 
            string rating)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Rating", rating }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationPerformanceRatingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeCard as global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeCardSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeCardSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeCard> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeCardSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeCard as global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeCardSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tenderTypeId">The value of tenderTypeId</param>
        /// <param name="cardTypeId">The value of cardTypeId</param>
        /// <param name="oMOperatingUnitNumber">The value of oMOperatingUnitNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeCardSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeCard> _source,
            string dataAreaId, 
            string tenderTypeId, 
            string cardTypeId, 
            string oMOperatingUnitNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TenderTypeId", tenderTypeId }, 
                { "CardTypeId", cardTypeId }, 
                { "OMOperatingUnitNumber", oMOperatingUnitNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeCardSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistoryDetail as global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistoryDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistoryDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistoryDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistoryDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistoryDetail as global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistoryDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="transDate">The value of transDate</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        /// <param name="code">The value of code</param>
        public static global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistoryDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistoryDetail> _source,
            string dataAreaId, 
            string personnelNumber, 
            global::System.DateTimeOffset transDate, 
            string payStatementNumber, 
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PersonnelNumber", personnelNumber }, 
                { "TransDate", transDate }, 
                { "PayStatementNumber", payStatementNumber }, 
                { "Code", code }
            };
            return new global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistoryDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethod as global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethod as global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethod> _source,
            string dataAreaId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MaterialDisposalCode as global::Microsoft.Dynamics.DataEntities.MaterialDisposalCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MaterialDisposalCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MaterialDisposalCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MaterialDisposalCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MaterialDisposalCode as global::Microsoft.Dynamics.DataEntities.MaterialDisposalCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="materialDisposalCode">The value of materialDisposalCode</param>
        public static global::Microsoft.Dynamics.DataEntities.MaterialDisposalCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MaterialDisposalCode> _source,
            string materialDisposalCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "MaterialDisposalCode", materialDisposalCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.MaterialDisposalCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelState> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lifecycleModelId">The value of lifecycleModelId</param>
        /// <param name="lifecycleStateId">The value of lifecycleStateId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelState> _source,
            string dataAreaId, 
            string lifecycleModelId, 
            string lifecycleStateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LifecycleModelId", lifecycleModelId }, 
                { "LifecycleStateId", lifecycleStateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetLifecycleModelStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationStructure as global::Microsoft.Dynamics.DataEntities.CompensationStructureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationStructureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationStructure> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationStructureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationStructure as global::Microsoft.Dynamics.DataEntities.CompensationStructureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="grid">The value of grid</param>
        /// <param name="levelId">The value of levelId</param>
        /// <param name="referencePoint">The value of referencePoint</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationStructureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationStructure> _source,
            string dataAreaId, 
            string grid, 
            string levelId, 
            string referencePoint)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Grid", grid }, 
                { "LevelId", levelId }, 
                { "ReferencePoint", referencePoint }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationStructureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PhysicalProductDimensionDetails as global::Microsoft.Dynamics.DataEntities.PhysicalProductDimensionDetailsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PhysicalProductDimensionDetailsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PhysicalProductDimensionDetails> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PhysicalProductDimensionDetailsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PhysicalProductDimensionDetails as global::Microsoft.Dynamics.DataEntities.PhysicalProductDimensionDetailsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="dimensionType">The value of dimensionType</param>
        /// <param name="physicalUnitSymbol">The value of physicalUnitSymbol</param>
        public static global::Microsoft.Dynamics.DataEntities.PhysicalProductDimensionDetailsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PhysicalProductDimensionDetails> _source,
            string productNumber, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.EcoResPhysicalDimensionType> dimensionType, 
            string physicalUnitSymbol)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }, 
                { "DimensionType", dimensionType }, 
                { "PhysicalUnitSymbol", physicalUnitSymbol }
            };
            return new global::Microsoft.Dynamics.DataEntities.PhysicalProductDimensionDetailsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionForecast as global::Microsoft.Dynamics.DataEntities.PositionForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionForecast> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionForecast as global::Microsoft.Dynamics.DataEntities.PositionForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="forecastPositionId">The value of forecastPositionId</param>
        /// <param name="budgetPlanningProcessName">The value of budgetPlanningProcessName</param>
        /// <param name="budgetPlanScenarioName">The value of budgetPlanScenarioName</param>
        /// <param name="costElementName">The value of costElementName</param>
        /// <param name="costElementDataAreaId">The value of costElementDataAreaId</param>
        /// <param name="costElementEffectiveDate">The value of costElementEffectiveDate</param>
        /// <param name="costElementExpirationDate">The value of costElementExpirationDate</param>
        /// <param name="costElementLineStartDate">The value of costElementLineStartDate</param>
        /// <param name="costElementLineEndDate">The value of costElementLineEndDate</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionForecast> _source,
            string forecastPositionId, 
            string budgetPlanningProcessName, 
            string budgetPlanScenarioName, 
            string costElementName, 
            string costElementDataAreaId, 
            global::System.DateTimeOffset costElementEffectiveDate, 
            global::System.DateTimeOffset costElementExpirationDate, 
            global::System.DateTimeOffset costElementLineStartDate, 
            global::System.DateTimeOffset costElementLineEndDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ForecastPositionId", forecastPositionId }, 
                { "BudgetPlanningProcessName", budgetPlanningProcessName }, 
                { "BudgetPlanScenarioName", budgetPlanScenarioName }, 
                { "CostElementName", costElementName }, 
                { "CostElementDataAreaId", costElementDataAreaId }, 
                { "CostElementEffectiveDate", costElementEffectiveDate }, 
                { "CostElementExpirationDate", costElementExpirationDate }, 
                { "CostElementLineStartDate", costElementLineStartDate }, 
                { "CostElementLineEndDate", costElementLineEndDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MediaType as global::Microsoft.Dynamics.DataEntities.MediaTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MediaTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MediaType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MediaTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MediaType as global::Microsoft.Dynamics.DataEntities.MediaTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="mediaTypeId">The value of mediaTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.MediaTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MediaType> _source,
            string dataAreaId, 
            string mediaTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MediaTypeId", mediaTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.MediaTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.UnitOfMeasureTranslation as global::Microsoft.Dynamics.DataEntities.UnitOfMeasureTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.UnitOfMeasureTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.UnitOfMeasureTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.UnitOfMeasureTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.UnitOfMeasureTranslation as global::Microsoft.Dynamics.DataEntities.UnitOfMeasureTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="unitSymbol">The value of unitSymbol</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.UnitOfMeasureTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.UnitOfMeasureTranslation> _source,
            string unitSymbol, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UnitSymbol", unitSymbol }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.UnitOfMeasureTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryFilingAgency as global::Microsoft.Dynamics.DataEntities.InjuryFilingAgencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryFilingAgencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryFilingAgency> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjuryFilingAgencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryFilingAgency as global::Microsoft.Dynamics.DataEntities.InjuryFilingAgencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="filingAgencyId">The value of filingAgencyId</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryFilingAgencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryFilingAgency> _source,
            string filingAgencyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FilingAgencyId", filingAgencyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjuryFilingAgencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.GroupRetailTaxFilter as global::Microsoft.Dynamics.DataEntities.GroupRetailTaxFilterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.GroupRetailTaxFilterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.GroupRetailTaxFilter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.GroupRetailTaxFilterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.GroupRetailTaxFilter as global::Microsoft.Dynamics.DataEntities.GroupRetailTaxFilterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxGroupId">The value of taxGroupId</param>
        /// <param name="city">The value of city</param>
        /// <param name="countryRegion">The value of countryRegion</param>
        /// <param name="county">The value of county</param>
        /// <param name="district">The value of district</param>
        /// <param name="state">The value of state</param>
        /// <param name="zipCode">The value of zipCode</param>
        public static global::Microsoft.Dynamics.DataEntities.GroupRetailTaxFilterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.GroupRetailTaxFilter> _source,
            string dataAreaId, 
            string taxGroupId, 
            string city, 
            string countryRegion, 
            string county, 
            string district, 
            string state, 
            string zipCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxGroupId", taxGroupId }, 
                { "City", city }, 
                { "CountryRegion", countryRegion }, 
                { "County", county }, 
                { "District", district }, 
                { "State", state }, 
                { "ZipCode", zipCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.GroupRetailTaxFilterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationPerformancePlan as global::Microsoft.Dynamics.DataEntities.CompensationPerformancePlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationPerformancePlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationPerformancePlan> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationPerformancePlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationPerformancePlan as global::Microsoft.Dynamics.DataEntities.CompensationPerformancePlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="plan">The value of plan</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationPerformancePlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationPerformancePlan> _source,
            string dataAreaId, 
            string plan)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Plan", plan }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationPerformancePlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingTaxCode as global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingTaxCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingTaxCode as global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="withholdingCode">The value of withholdingCode</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingTaxCode> _source,
            string dataAreaId, 
            string withholdingCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WithholdingCode", withholdingCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxPostingGroupV2 as global::Microsoft.Dynamics.DataEntities.TaxPostingGroupV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxPostingGroupV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxPostingGroupV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxPostingGroupV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxPostingGroupV2 as global::Microsoft.Dynamics.DataEntities.TaxPostingGroupV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxPostingGroupCode">The value of taxPostingGroupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxPostingGroupV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxPostingGroupV2> _source,
            string dataAreaId, 
            string taxPostingGroupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxPostingGroupCode", taxPostingGroupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxPostingGroupV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VoucherType as global::Microsoft.Dynamics.DataEntities.VoucherTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VoucherTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VoucherType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VoucherTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VoucherType as global::Microsoft.Dynamics.DataEntities.VoucherTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="voucherType">The value of voucherType</param>
        public static global::Microsoft.Dynamics.DataEntities.VoucherTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VoucherType> _source,
            string dataAreaId, 
            string voucherType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VoucherType", voucherType }
            };
            return new global::Microsoft.Dynamics.DataEntities.VoucherTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PlannedOrder as global::Microsoft.Dynamics.DataEntities.PlannedOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PlannedOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PlannedOrder> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PlannedOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PlannedOrder as global::Microsoft.Dynamics.DataEntities.PlannedOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="requirementPlanId">The value of requirementPlanId</param>
        /// <param name="plannedOrderNumber">The value of plannedOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PlannedOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PlannedOrder> _source,
            string dataAreaId, 
            string requirementPlanId, 
            string plannedOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RequirementPlanId", requirementPlanId }, 
                { "PlannedOrderNumber", plannedOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PlannedOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSpecificUnitOfMeasureConversion as global::Microsoft.Dynamics.DataEntities.ProductSpecificUnitOfMeasureConversionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSpecificUnitOfMeasureConversionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSpecificUnitOfMeasureConversion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductSpecificUnitOfMeasureConversionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSpecificUnitOfMeasureConversion as global::Microsoft.Dynamics.DataEntities.ProductSpecificUnitOfMeasureConversionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="fromUnitSymbol">The value of fromUnitSymbol</param>
        /// <param name="toUnitSymbol">The value of toUnitSymbol</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSpecificUnitOfMeasureConversionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSpecificUnitOfMeasureConversion> _source,
            string productNumber, 
            string fromUnitSymbol, 
            string toUnitSymbol)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }, 
                { "FromUnitSymbol", fromUnitSymbol }, 
                { "ToUnitSymbol", toUnitSymbol }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductSpecificUnitOfMeasureConversionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineTranslation as global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineTranslation as global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productSizeGroupId">The value of productSizeGroupId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineTranslation> _source,
            string productSizeGroupId, 
            string productSizeId, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductSizeGroupId", productSizeGroupId }, 
                { "ProductSizeId", productSizeId }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductSizeGroupLineTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductOwner as global::Microsoft.Dynamics.DataEntities.ProductOwnerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductOwnerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductOwner> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductOwnerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductOwner as global::Microsoft.Dynamics.DataEntities.ProductOwnerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productOwnerId">The value of productOwnerId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductOwnerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductOwner> _source,
            string productOwnerId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductOwnerId", productOwnerId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductOwnerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxItemGroup as global::Microsoft.Dynamics.DataEntities.TaxItemGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxItemGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxItemGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxItemGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxItemGroup as global::Microsoft.Dynamics.DataEntities.TaxItemGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxItemGroupCode">The value of taxItemGroupCode</param>
        /// <param name="taxCodeId">The value of taxCodeId</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxItemGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxItemGroup> _source,
            string dataAreaId, 
            string taxItemGroupCode, 
            string taxCodeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxItemGroupCode", taxItemGroupCode }, 
                { "TaxCodeId", taxCodeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxItemGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorRebateAgreementHeader as global::Microsoft.Dynamics.DataEntities.VendorRebateAgreementHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorRebateAgreementHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorRebateAgreementHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorRebateAgreementHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorRebateAgreementHeader as global::Microsoft.Dynamics.DataEntities.VendorRebateAgreementHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="rebateAgreementId">The value of rebateAgreementId</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorRebateAgreementHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorRebateAgreementHeader> _source,
            string dataAreaId, 
            string rebateAgreementId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RebateAgreementId", rebateAgreementId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorRebateAgreementHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LegalEntity as global::Microsoft.Dynamics.DataEntities.LegalEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LegalEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LegalEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LegalEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LegalEntity as global::Microsoft.Dynamics.DataEntities.LegalEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        public static global::Microsoft.Dynamics.DataEntities.LegalEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LegalEntity> _source,
            string legalEntityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LegalEntityId", legalEntityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.LegalEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualInquiry as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualInquirySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualInquirySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualInquiry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualInquirySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualInquiry as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualInquirySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workerName">The value of workerName</param>
        /// <param name="accrualId">The value of accrualId</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualInquirySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualInquiry> _source,
            string dataAreaId, 
            string workerName, 
            string accrualId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkerName", workerName }, 
                { "AccrualId", accrualId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualInquirySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp as global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientAppSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientAppSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientAppSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp as global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientAppSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="clientApplicationId">The value of clientApplicationId</param>
        public static global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientAppSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp> _source,
            string clientApplicationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ClientApplicationId", clientApplicationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientAppSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog as global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalogSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalogSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalogSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog as global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalogSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="businessEventId">The value of businessEventId</param>
        public static global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalogSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source,
            string businessEventId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BusinessEventId", businessEventId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalogSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailPackagePurchase as global::Microsoft.Dynamics.DataEntities.RetailPackagePurchaseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailPackagePurchaseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailPackagePurchase> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailPackagePurchaseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailPackagePurchase as global::Microsoft.Dynamics.DataEntities.RetailPackagePurchaseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseId">The value of purchaseId</param>
        /// <param name="packageId">The value of packageId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailPackagePurchaseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailPackagePurchase> _source,
            string dataAreaId, 
            string purchaseId, 
            string packageId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseId", purchaseId }, 
                { "PackageId", packageId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailPackagePurchaseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionHierarchyType as global::Microsoft.Dynamics.DataEntities.PositionHierarchyTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionHierarchyTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionHierarchyType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionHierarchyTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionHierarchyType as global::Microsoft.Dynamics.DataEntities.PositionHierarchyTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionHierarchyTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionHierarchyType> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionHierarchyTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationHeader as global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationHeader as global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        /// <param name="confirmationNumber">The value of confirmationNumber</param>
        /// <param name="confirmationDate">The value of confirmationDate</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationHeader> _source,
            string dataAreaId, 
            string purchaseOrderNumber, 
            string confirmationNumber, 
            global::System.DateTimeOffset confirmationDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }, 
                { "ConfirmationNumber", confirmationNumber }, 
                { "ConfirmationDate", confirmationDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLine as global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLine as global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLine> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendInvoiceRegisterLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjQuotationLine as global::Microsoft.Dynamics.DataEntities.ProjQuotationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjQuotationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjQuotationLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjQuotationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjQuotationLine as global::Microsoft.Dynamics.DataEntities.ProjQuotationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="inventoryLotId">The value of inventoryLotId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjQuotationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjQuotationLine> _source,
            string dataAreaId, 
            string inventoryLotId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InventoryLotId", inventoryLotId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjQuotationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsHeader as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsHeader as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="bOMId">The value of bOMId</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsHeader> _source,
            string dataAreaId, 
            string engineeringChangeOrderNumber, 
            decimal engineeringChangeOrderProductLineNumber, 
            string productionSiteId, 
            string bOMId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }, 
                { "ProductionSiteId", productionSiteId }, 
                { "BOMId", bOMId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductBillOfMaterialsHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventOperationalSiteCurrentPostalAddress as global::Microsoft.Dynamics.DataEntities.InventOperationalSiteCurrentPostalAddressSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventOperationalSiteCurrentPostalAddressSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventOperationalSiteCurrentPostalAddress> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventOperationalSiteCurrentPostalAddressSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventOperationalSiteCurrentPostalAddress as global::Microsoft.Dynamics.DataEntities.InventOperationalSiteCurrentPostalAddressSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operationalSiteLegalEntityId">The value of operationalSiteLegalEntityId</param>
        /// <param name="operationalSiteId">The value of operationalSiteId</param>
        /// <param name="addressLocationId">The value of addressLocationId</param>
        public static global::Microsoft.Dynamics.DataEntities.InventOperationalSiteCurrentPostalAddressSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventOperationalSiteCurrentPostalAddress> _source,
            string dataAreaId, 
            string operationalSiteLegalEntityId, 
            string operationalSiteId, 
            string addressLocationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperationalSiteLegalEntityId", operationalSiteLegalEntityId }, 
                { "OperationalSiteId", operationalSiteId }, 
                { "AddressLocationId", addressLocationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventOperationalSiteCurrentPostalAddressSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeGroup as global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeGroup as global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="oMOperatingUnitNumber">The value of oMOperatingUnitNumber</param>
        /// <param name="attributeGroupName">The value of attributeGroupName</param>
        /// <param name="attributeModifier">The value of attributeModifier</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeGroup> _source,
            string oMOperatingUnitNumber, 
            string attributeGroupName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeModifier> attributeModifier)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "OMOperatingUnitNumber", oMOperatingUnitNumber }, 
                { "AttributeGroupName", attributeGroupName }, 
                { "AttributeModifier", attributeModifier }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailChannelAttributeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankAccount as global::Microsoft.Dynamics.DataEntities.BankAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BankAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BankAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankAccount as global::Microsoft.Dynamics.DataEntities.BankAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bankAccountId">The value of bankAccountId</param>
        public static global::Microsoft.Dynamics.DataEntities.BankAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankAccount> _source,
            string dataAreaId, 
            string bankAccountId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BankAccountId", bankAccountId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BankAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerParameters as global::Microsoft.Dynamics.DataEntities.CustomerParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerParameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerParameters as global::Microsoft.Dynamics.DataEntities.CustomerParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerParameters> _source,
            string dataAreaId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectWBSDraft as global::Microsoft.Dynamics.DataEntities.ProjectWBSDraftSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectWBSDraftSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectWBSDraft> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectWBSDraftSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectWBSDraft as global::Microsoft.Dynamics.DataEntities.ProjectWBSDraftSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projectId">The value of projectId</param>
        /// <param name="wBSId">The value of wBSId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectWBSDraftSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectWBSDraft> _source,
            string dataAreaId, 
            string projectId, 
            string wBSId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjectId", projectId }, 
                { "WBSId", wBSId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectWBSDraftSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReplenishmentRuleLinesV2 as global::Microsoft.Dynamics.DataEntities.ReplenishmentRuleLinesV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReplenishmentRuleLinesV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReplenishmentRuleLinesV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReplenishmentRuleLinesV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReplenishmentRuleLinesV2 as global::Microsoft.Dynamics.DataEntities.ReplenishmentRuleLinesV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="replenishmentRule">The value of replenishmentRule</param>
        /// <param name="type">The value of type</param>
        /// <param name="relationId">The value of relationId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReplenishmentRuleLinesV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReplenishmentRuleLinesV2> _source,
            string dataAreaId, 
            string replenishmentRule, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleType> type, 
            long relationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReplenishmentRule", replenishmentRule }, 
                { "Type", type }, 
                { "RelationId", relationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReplenishmentRuleLinesV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmation as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmation as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseAgreementId">The value of purchaseAgreementId</param>
        /// <param name="confirmationNumber">The value of confirmationNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmation> _source,
            string dataAreaId, 
            string purchaseAgreementId, 
            string confirmationNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseAgreementId", purchaseAgreementId }, 
                { "ConfirmationNumber", confirmationNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementConfirmationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.StoreShelf as global::Microsoft.Dynamics.DataEntities.StoreShelfSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.StoreShelfSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.StoreShelf> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.StoreShelfSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.StoreShelf as global::Microsoft.Dynamics.DataEntities.StoreShelfSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="sectionNumber">The value of sectionNumber</param>
        /// <param name="shelfNumber">The value of shelfNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.StoreShelfSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.StoreShelf> _source,
            string dataAreaId, 
            string storeNumber, 
            string sectionNumber, 
            string shelfNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "StoreNumber", storeNumber }, 
                { "SectionNumber", sectionNumber }, 
                { "ShelfNumber", shelfNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.StoreShelfSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankTransactionGroup as global::Microsoft.Dynamics.DataEntities.BankTransactionGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BankTransactionGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankTransactionGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BankTransactionGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankTransactionGroup as global::Microsoft.Dynamics.DataEntities.BankTransactionGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="transactionGroupId">The value of transactionGroupId</param>
        /// <param name="transactionTypeId">The value of transactionTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.BankTransactionGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankTransactionGroup> _source,
            string dataAreaId, 
            string transactionGroupId, 
            string transactionTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TransactionGroupId", transactionGroupId }, 
                { "TransactionTypeId", transactionTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BankTransactionGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SystemNotification as global::Microsoft.Dynamics.DataEntities.SystemNotificationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SystemNotificationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SystemNotification> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SystemNotificationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SystemNotification as global::Microsoft.Dynamics.DataEntities.SystemNotificationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="ruleId">The value of ruleId</param>
        public static global::Microsoft.Dynamics.DataEntities.SystemNotificationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SystemNotification> _source,
            string ruleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RuleId", ruleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SystemNotificationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonUser as global::Microsoft.Dynamics.DataEntities.PersonUserSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonUserSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonUser> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonUserSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonUser as global::Microsoft.Dynamics.DataEntities.PersonUserSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="userId">The value of userId</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="validFrom">The value of validFrom</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonUserSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonUser> _source,
            string userId, 
            string partyNumber, 
            global::System.DateTimeOffset validFrom)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UserId", userId }, 
                { "PartyNumber", partyNumber }, 
                { "ValidFrom", validFrom }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonUserSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverity as global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeveritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeveritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeveritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverity as global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeveritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="severityName">The value of severityName</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeveritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeverity> _source,
            string severityName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SeverityName", severityName }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeSeveritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TransferPrice as global::Microsoft.Dynamics.DataEntities.TransferPriceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TransferPriceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferPrice> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TransferPriceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TransferPrice as global::Microsoft.Dynamics.DataEntities.TransferPriceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="resourceId">The value of resourceId</param>
        /// <param name="borrowingLegalEntity">The value of borrowingLegalEntity</param>
        /// <param name="projectId">The value of projectId</param>
        /// <param name="categoryId">The value of categoryId</param>
        /// <param name="effectiveDate">The value of effectiveDate</param>
        /// <param name="salesCurrency">The value of salesCurrency</param>
        /// <param name="transactionType">The value of transactionType</param>
        /// <param name="projectContractId">The value of projectContractId</param>
        /// <param name="roleId">The value of roleId</param>
        public static global::Microsoft.Dynamics.DataEntities.TransferPriceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferPrice> _source,
            string dataAreaId, 
            string resourceId, 
            string borrowingLegalEntity, 
            string projectId, 
            string categoryId, 
            global::System.DateTimeOffset effectiveDate, 
            string salesCurrency, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.ProjTransferPriceTransType> transactionType, 
            string projectContractId, 
            string roleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ResourceId", resourceId }, 
                { "BorrowingLegalEntity", borrowingLegalEntity }, 
                { "ProjectId", projectId }, 
                { "CategoryId", categoryId }, 
                { "EffectiveDate", effectiveDate }, 
                { "SalesCurrency", salesCurrency }, 
                { "TransactionType", transactionType }, 
                { "ProjectContractId", projectContractId }, 
                { "RoleId", roleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TransferPriceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectSalesItemRequirement as global::Microsoft.Dynamics.DataEntities.ProjectSalesItemRequirementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectSalesItemRequirementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectSalesItemRequirement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectSalesItemRequirementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectSalesItemRequirement as global::Microsoft.Dynamics.DataEntities.ProjectSalesItemRequirementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projectTransactionId">The value of projectTransactionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectSalesItemRequirementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectSalesItemRequirement> _source,
            string dataAreaId, 
            string projectTransactionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjectTransactionId", projectTransactionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectSalesItemRequirementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ServiceOrderHeader as global::Microsoft.Dynamics.DataEntities.ServiceOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ServiceOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ServiceOrderHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ServiceOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ServiceOrderHeader as global::Microsoft.Dynamics.DataEntities.ServiceOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="serviceOrderNumber">The value of serviceOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ServiceOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ServiceOrderHeader> _source,
            string dataAreaId, 
            string serviceOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ServiceOrderNumber", serviceOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ServiceOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlRuleOverBudgetPermission as global::Microsoft.Dynamics.DataEntities.BudgetControlRuleOverBudgetPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlRuleOverBudgetPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlRuleOverBudgetPermission> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlRuleOverBudgetPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlRuleOverBudgetPermission as global::Microsoft.Dynamics.DataEntities.BudgetControlRuleOverBudgetPermissionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="ruleName">The value of ruleName</param>
        /// <param name="userGroupId">The value of userGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlRuleOverBudgetPermissionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlRuleOverBudgetPermission> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            string ruleName, 
            string userGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "RuleName", ruleName }, 
                { "UserGroupId", userGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlRuleOverBudgetPermissionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Applicant as global::Microsoft.Dynamics.DataEntities.ApplicantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ApplicantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Applicant> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ApplicantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Applicant as global::Microsoft.Dynamics.DataEntities.ApplicantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="applicant">The value of applicant</param>
        public static global::Microsoft.Dynamics.DataEntities.ApplicantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Applicant> _source,
            string applicant)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Applicant", applicant }
            };
            return new global::Microsoft.Dynamics.DataEntities.ApplicantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonalContactPerson as global::Microsoft.Dynamics.DataEntities.PersonalContactPersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonalContactPersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonalContactPerson> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonalContactPersonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonalContactPerson as global::Microsoft.Dynamics.DataEntities.PersonalContactPersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="workerPersonnelNumber">The value of workerPersonnelNumber</param>
        /// <param name="contactPersonPartyNumber">The value of contactPersonPartyNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonalContactPersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonalContactPerson> _source,
            string workerPersonnelNumber, 
            string contactPersonPartyNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "WorkerPersonnelNumber", workerPersonnelNumber }, 
                { "ContactPersonPartyNumber", contactPersonPartyNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonalContactPersonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductStyle as global::Microsoft.Dynamics.DataEntities.ProductStyleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductStyleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductStyle> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductStyleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductStyle as global::Microsoft.Dynamics.DataEntities.ProductStyleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="styleId">The value of styleId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductStyleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductStyle> _source,
            string styleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StyleId", styleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductStyleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeductionArrearRecovery as global::Microsoft.Dynamics.DataEntities.DeductionArrearRecoverySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DeductionArrearRecoverySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeductionArrearRecovery> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DeductionArrearRecoverySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeductionArrearRecovery as global::Microsoft.Dynamics.DataEntities.DeductionArrearRecoverySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        /// <param name="benefitId">The value of benefitId</param>
        /// <param name="arrearsChangeType">The value of arrearsChangeType</param>
        /// <param name="recoveryCreatedBy">The value of recoveryCreatedBy</param>
        /// <param name="recoveryCreatedDateTime">The value of recoveryCreatedDateTime</param>
        public static global::Microsoft.Dynamics.DataEntities.DeductionArrearRecoverySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeductionArrearRecovery> _source,
            string dataAreaId, 
            string payStatementNumber, 
            string benefitId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.PrlArrearOffsetType> arrearsChangeType, 
            string recoveryCreatedBy, 
            global::System.DateTimeOffset recoveryCreatedDateTime)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PayStatementNumber", payStatementNumber }, 
                { "BenefitId", benefitId }, 
                { "ArrearsChangeType", arrearsChangeType }, 
                { "RecoveryCreatedBy", recoveryCreatedBy }, 
                { "RecoveryCreatedDateTime", recoveryCreatedDateTime }
            };
            return new global::Microsoft.Dynamics.DataEntities.DeductionArrearRecoverySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerContactInfo as global::Microsoft.Dynamics.DataEntities.CustomerContactInfoSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerContactInfoSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerContactInfo> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerContactInfoSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerContactInfo as global::Microsoft.Dynamics.DataEntities.CustomerContactInfoSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="customerDataAreaId">The value of customerDataAreaId</param>
        /// <param name="type">The value of type</param>
        /// <param name="locator">The value of locator</param>
        /// <param name="description">The value of description</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerContactInfoSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerContactInfo> _source,
            string dataAreaId, 
            string customerAccountNumber, 
            string customerDataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LogisticsElectronicAddressMethodType> type, 
            string locator, 
            string description)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "CustomerDataAreaId", customerDataAreaId }, 
                { "Type", type }, 
                { "Locator", locator }, 
                { "Description", description }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerContactInfoSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryBodyPart as global::Microsoft.Dynamics.DataEntities.InjuryBodyPartSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryBodyPartSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryBodyPart> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjuryBodyPartSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryBodyPart as global::Microsoft.Dynamics.DataEntities.InjuryBodyPartSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="bodyPartId">The value of bodyPartId</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryBodyPartSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryBodyPart> _source,
            string bodyPartId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BodyPartId", bodyPartId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjuryBodyPartSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalClassificationCode as global::Microsoft.Dynamics.DataEntities.FiscalClassificationCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalClassificationCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalClassificationCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FiscalClassificationCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalClassificationCode as global::Microsoft.Dynamics.DataEntities.FiscalClassificationCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fiscalClassificationCode">The value of fiscalClassificationCode</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalClassificationCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalClassificationCode> _source,
            string dataAreaId, 
            string fiscalClassificationCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FiscalClassificationCode", fiscalClassificationCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.FiscalClassificationCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationReferencePoint as global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationReferencePoint> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationReferencePoint as global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="referenceSetup">The value of referenceSetup</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationReferencePoint> _source,
            string dataAreaId, 
            string referenceSetup)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReferenceSetup", referenceSetup }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationReferencePointSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectFeeForecast as global::Microsoft.Dynamics.DataEntities.ProjectFeeForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectFeeForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectFeeForecast> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectFeeForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectFeeForecast as global::Microsoft.Dynamics.DataEntities.ProjectFeeForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="transactionID">The value of transactionID</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectFeeForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectFeeForecast> _source,
            string dataAreaId, 
            string transactionID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TransactionID", transactionID }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectFeeForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRelease as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductReleaseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductReleaseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRelease> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductReleaseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRelease as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductReleaseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="receivingLegalEntityId">The value of receivingLegalEntityId</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductReleaseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRelease> _source,
            string dataAreaId, 
            string engineeringChangeOrderNumber, 
            decimal engineeringChangeOrderProductLineNumber, 
            string productNumber, 
            string productVersionId, 
            string receivingLegalEntityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }, 
                { "ProductNumber", productNumber }, 
                { "ProductVersionId", productVersionId }, 
                { "ReceivingLegalEntityId", receivingLegalEntityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductReleaseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectDefaultOffsetAccount as global::Microsoft.Dynamics.DataEntities.ProjectDefaultOffsetAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectDefaultOffsetAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectDefaultOffsetAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectDefaultOffsetAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectDefaultOffsetAccount as global::Microsoft.Dynamics.DataEntities.ProjectDefaultOffsetAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projectID">The value of projectID</param>
        /// <param name="category">The value of category</param>
        /// <param name="offsetAccountType">The value of offsetAccountType</param>
        /// <param name="resourcePersonnelNumber">The value of resourcePersonnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectDefaultOffsetAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectDefaultOffsetAccount> _source,
            string dataAreaId, 
            string projectID, 
            string category, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.ProjOffsetType> offsetAccountType, 
            string resourcePersonnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjectID", projectID }, 
                { "Category", category }, 
                { "OffsetAccountType", offsetAccountType }, 
                { "ResourcePersonnelNumber", resourcePersonnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectDefaultOffsetAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductReleaseProductDetail as global::Microsoft.Dynamics.DataEntities.ProductReleaseProductDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductReleaseProductDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductReleaseProductDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductReleaseProductDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductReleaseProductDetail as global::Microsoft.Dynamics.DataEntities.ProductReleaseProductDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductReleaseProductDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductReleaseProductDetail> _source,
            string dataAreaId, 
            string productNumber, 
            string productVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductNumber", productNumber }, 
                { "ProductVersionId", productVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductReleaseProductDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RouteCardProductionJournalEntry as global::Microsoft.Dynamics.DataEntities.RouteCardProductionJournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RouteCardProductionJournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RouteCardProductionJournalEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RouteCardProductionJournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RouteCardProductionJournalEntry as global::Microsoft.Dynamics.DataEntities.RouteCardProductionJournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalLineNumber">The value of journalLineNumber</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RouteCardProductionJournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RouteCardProductionJournalEntry> _source,
            string dataAreaId, 
            decimal journalLineNumber, 
            string journalNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalLineNumber", journalLineNumber }, 
                { "JournalNumber", journalNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RouteCardProductionJournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionV2 as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionV2 as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="royaltyAgreementId">The value of royaltyAgreementId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="salesUnitSymbol">The value of salesUnitSymbol</param>
        /// <param name="qualifyingSiteId">The value of qualifyingSiteId</param>
        /// <param name="qualifyingWarehouseId">The value of qualifyingWarehouseId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionV2> _source,
            string dataAreaId, 
            string royaltyAgreementId, 
            string itemNumber, 
            string salesUnitSymbol, 
            string qualifyingSiteId, 
            string qualifyingWarehouseId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RoyaltyAgreementId", royaltyAgreementId }, 
                { "ItemNumber", itemNumber }, 
                { "SalesUnitSymbol", salesUnitSymbol }, 
                { "QualifyingSiteId", qualifyingSiteId }, 
                { "QualifyingWarehouseId", qualifyingWarehouseId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Warehouse as global::Microsoft.Dynamics.DataEntities.WarehouseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Warehouse> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Warehouse as global::Microsoft.Dynamics.DataEntities.WarehouseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="warehouseId">The value of warehouseId</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Warehouse> _source,
            string dataAreaId, 
            string warehouseId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WarehouseId", warehouseId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorBankAccount as global::Microsoft.Dynamics.DataEntities.VendorBankAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorBankAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorBankAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorBankAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorBankAccount as global::Microsoft.Dynamics.DataEntities.VendorBankAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="vendorAccountNumber">The value of vendorAccountNumber</param>
        /// <param name="vendorBankAccountId">The value of vendorBankAccountId</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorBankAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorBankAccount> _source,
            string dataAreaId, 
            string vendorAccountNumber, 
            string vendorBankAccountId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VendorAccountNumber", vendorAccountNumber }, 
                { "VendorBankAccountId", vendorBankAccountId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorBankAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2 as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2 as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="manufacturedItemNumber">The value of manufacturedItemNumber</param>
        /// <param name="bOMId">The value of bOMId</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="isActive">The value of isActive</param>
        /// <param name="validFromDate">The value of validFromDate</param>
        /// <param name="fromQuantity">The value of fromQuantity</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2> _source,
            string dataAreaId, 
            string manufacturedItemNumber, 
            string bOMId, 
            string productionSiteId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            int isActive, 
            global::System.DateTimeOffset validFromDate, 
            decimal fromQuantity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ManufacturedItemNumber", manufacturedItemNumber }, 
                { "BOMId", bOMId }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "IsActive", isActive }, 
                { "ValidFromDate", validFromDate }, 
                { "FromQuantity", fromQuantity }
            };
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccount as global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccount as global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="currencyCode">The value of currencyCode</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="posting">The value of posting</param>
        public static global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccount> _source,
            string currencyCode, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.CurrencyGainLossAccountType> posting)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CurrencyCode", currencyCode }, 
                { "LegalEntityId", legalEntityId }, 
                { "Posting", posting }
            };
            return new global::Microsoft.Dynamics.DataEntities.CurrencyRevaluationAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPriorityClassificationGroupEntity as global::Microsoft.Dynamics.DataEntities.CustomerPriorityClassificationGroupEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPriorityClassificationGroupEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPriorityClassificationGroupEntity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerPriorityClassificationGroupEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPriorityClassificationGroupEntity as global::Microsoft.Dynamics.DataEntities.CustomerPriorityClassificationGroupEntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="customerPriorityClassificationGroupCode">The value of customerPriorityClassificationGroupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPriorityClassificationGroupEntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPriorityClassificationGroupEntity> _source,
            string dataAreaId, 
            string customerPriorityClassificationGroupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CustomerPriorityClassificationGroupCode", customerPriorityClassificationGroupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerPriorityClassificationGroupEntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustPaymModeBankAccounts as global::Microsoft.Dynamics.DataEntities.CustPaymModeBankAccountsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustPaymModeBankAccountsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustPaymModeBankAccounts> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustPaymModeBankAccountsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustPaymModeBankAccounts as global::Microsoft.Dynamics.DataEntities.CustPaymModeBankAccountsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lineId">The value of lineId</param>
        public static global::Microsoft.Dynamics.DataEntities.CustPaymModeBankAccountsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustPaymModeBankAccounts> _source,
            string dataAreaId, 
            global::System.Guid lineId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LineId", lineId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustPaymModeBankAccountsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PaymentScheduleLine as global::Microsoft.Dynamics.DataEntities.PaymentScheduleLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PaymentScheduleLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PaymentScheduleLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PaymentScheduleLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PaymentScheduleLine as global::Microsoft.Dynamics.DataEntities.PaymentScheduleLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="paymentScheduleName">The value of paymentScheduleName</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PaymentScheduleLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PaymentScheduleLine> _source,
            string dataAreaId, 
            string paymentScheduleName, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PaymentScheduleName", paymentScheduleName }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PaymentScheduleLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStaff as global::Microsoft.Dynamics.DataEntities.RetailStaffSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStaffSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStaff> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailStaffSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailStaff as global::Microsoft.Dynamics.DataEntities.RetailStaffSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailStaffSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStaff> _source,
            string personnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailStaffSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTask as global::Microsoft.Dynamics.DataEntities.JobTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTask> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTask as global::Microsoft.Dynamics.DataEntities.JobTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTaskId">The value of jobTaskId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTask> _source,
            string jobTaskId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTaskId", jobTaskId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VeteranStatus as global::Microsoft.Dynamics.DataEntities.VeteranStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VeteranStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VeteranStatus> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VeteranStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VeteranStatus as global::Microsoft.Dynamics.DataEntities.VeteranStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="veteranStatusId">The value of veteranStatusId</param>
        public static global::Microsoft.Dynamics.DataEntities.VeteranStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VeteranStatus> _source,
            string veteranStatusId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "VeteranStatusId", veteranStatusId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VeteranStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTrade as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTradeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTradeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTrade> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTradeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTrade as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTradeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="jobTradeId">The value of jobTradeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTradeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTrade> _source,
            string dataAreaId, 
            string jobTradeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JobTradeId", jobTradeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTradeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalHeader as global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalHeader as global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalHeader> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccrualBasisEarningCode as global::Microsoft.Dynamics.DataEntities.AccrualBasisEarningCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AccrualBasisEarningCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccrualBasisEarningCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AccrualBasisEarningCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccrualBasisEarningCode as global::Microsoft.Dynamics.DataEntities.AccrualBasisEarningCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accrualId">The value of accrualId</param>
        /// <param name="earningCodeId">The value of earningCodeId</param>
        /// <param name="earningCodeGroupId">The value of earningCodeGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.AccrualBasisEarningCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccrualBasisEarningCode> _source,
            string accrualId, 
            string earningCodeId, 
            string earningCodeGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccrualId", accrualId }, 
                { "EarningCodeId", earningCodeId }, 
                { "EarningCodeGroupId", earningCodeGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AccrualBasisEarningCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductOwnerWorker as global::Microsoft.Dynamics.DataEntities.ProductOwnerWorkerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductOwnerWorkerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductOwnerWorker> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductOwnerWorkerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductOwnerWorker as global::Microsoft.Dynamics.DataEntities.ProductOwnerWorkerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productOwnerId">The value of productOwnerId</param>
        /// <param name="assignedPersonnelNumber">The value of assignedPersonnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductOwnerWorkerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductOwnerWorker> _source,
            string productOwnerId, 
            string assignedPersonnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductOwnerId", productOwnerId }, 
                { "AssignedPersonnelNumber", assignedPersonnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductOwnerWorkerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceDependency as global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceDependencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceDependencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceDependency> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceDependencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceDependency as global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceDependencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="templateId">The value of templateId</param>
        /// <param name="sourceEntity">The value of sourceEntity</param>
        /// <param name="dependentOnEntity">The value of dependentOnEntity</param>
        /// <param name="relationName">The value of relationName</param>
        public static global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceDependencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceDependency> _source,
            string templateId, 
            string sourceEntity, 
            string dependentOnEntity, 
            string relationName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TemplateId", templateId }, 
                { "SourceEntity", sourceEntity }, 
                { "DependentOnEntity", dependentOnEntity }, 
                { "RelationName", relationName }
            };
            return new global::Microsoft.Dynamics.DataEntities.DataManagementTemplateSourceDependencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerGroup as global::Microsoft.Dynamics.DataEntities.CustomerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerGroup as global::Microsoft.Dynamics.DataEntities.CustomerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="customerGroupId">The value of customerGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerGroup> _source,
            string dataAreaId, 
            string customerGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CustomerGroupId", customerGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PeriodAllocationCategory as global::Microsoft.Dynamics.DataEntities.PeriodAllocationCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PeriodAllocationCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PeriodAllocationCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PeriodAllocationCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PeriodAllocationCategory as global::Microsoft.Dynamics.DataEntities.PeriodAllocationCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="periodKey">The value of periodKey</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PeriodAllocationCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PeriodAllocationCategory> _source,
            string dataAreaId, 
            string periodKey, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PeriodKey", periodKey }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PeriodAllocationCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenPurchaseLineDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenPurchaseLineDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenPurchaseLineDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenPurchaseLineDiscountJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OpenPurchaseLineDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenPurchaseLineDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenPurchaseLineDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAgreementJournalNumber">The value of tradeAgreementJournalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenPurchaseLineDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenPurchaseLineDiscountJournalLine> _source,
            string dataAreaId, 
            string tradeAgreementJournalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAgreementJournalNumber", tradeAgreementJournalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OpenPurchaseLineDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationAttributeGroup as global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationAttributeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationAttributeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationAttributeGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationAttributeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationAttributeGroup as global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationAttributeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="attributeGroupName">The value of attributeGroupName</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationAttributeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationAttributeGroup> _source,
            string partyNumber, 
            string attributeGroupName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "AttributeGroupName", attributeGroupName }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationAttributeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetGroupBookSpecialDepreciationAllowance as global::Microsoft.Dynamics.DataEntities.FixedAssetGroupBookSpecialDepreciationAllowanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetGroupBookSpecialDepreciationAllowanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetGroupBookSpecialDepreciationAllowance> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetGroupBookSpecialDepreciationAllowanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetGroupBookSpecialDepreciationAllowance as global::Microsoft.Dynamics.DataEntities.FixedAssetGroupBookSpecialDepreciationAllowanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupId">The value of groupId</param>
        /// <param name="bookId">The value of bookId</param>
        /// <param name="specialDepreciationAllowanceId">The value of specialDepreciationAllowanceId</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetGroupBookSpecialDepreciationAllowanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetGroupBookSpecialDepreciationAllowance> _source,
            string dataAreaId, 
            string groupId, 
            string bookId, 
            string specialDepreciationAllowanceId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupId", groupId }, 
                { "BookId", bookId }, 
                { "SpecialDepreciationAllowanceId", specialDepreciationAllowanceId }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetGroupBookSpecialDepreciationAllowanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailChannelPaymentConnectorLine as global::Microsoft.Dynamics.DataEntities.RetailChannelPaymentConnectorLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailChannelPaymentConnectorLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailChannelPaymentConnectorLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailChannelPaymentConnectorLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailChannelPaymentConnectorLine as global::Microsoft.Dynamics.DataEntities.RetailChannelPaymentConnectorLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="operatingUnitNumber">The value of operatingUnitNumber</param>
        /// <param name="paymentConnectorName">The value of paymentConnectorName</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailChannelPaymentConnectorLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailChannelPaymentConnectorLine> _source,
            string operatingUnitNumber, 
            string paymentConnectorName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "OperatingUnitNumber", operatingUnitNumber }, 
                { "PaymentConnectorName", paymentConnectorName }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailChannelPaymentConnectorLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue as global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue as global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="displayProductNumber">The value of displayProductNumber</param>
        /// <param name="attributeGroupName">The value of attributeGroupName</param>
        /// <param name="attributeName">The value of attributeName</param>
        /// <param name="attributeTypeName">The value of attributeTypeName</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue> _source,
            string partyNumber, 
            string displayProductNumber, 
            string attributeGroupName, 
            string attributeName, 
            string attributeTypeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "DisplayProductNumber", displayProductNumber }, 
                { "AttributeGroupName", attributeGroupName }, 
                { "AttributeName", attributeName }, 
                { "AttributeTypeName", attributeTypeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AttributeGroup as global::Microsoft.Dynamics.DataEntities.AttributeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AttributeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AttributeGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AttributeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AttributeGroup as global::Microsoft.Dynamics.DataEntities.AttributeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupName">The value of groupName</param>
        public static global::Microsoft.Dynamics.DataEntities.AttributeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AttributeGroup> _source,
            string groupName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupName", groupName }
            };
            return new global::Microsoft.Dynamics.DataEntities.AttributeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCriticality as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCriticalitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCriticalitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCriticality> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCriticalitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCriticality as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCriticalitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="jobGroupId">The value of jobGroupId</param>
        /// <param name="jobTradeId">The value of jobTradeId</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        /// <param name="jobVariantId">The value of jobVariantId</param>
        /// <param name="modelId">The value of modelId</param>
        /// <param name="modelProductId">The value of modelProductId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="productId">The value of productId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCriticalitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCriticality> _source,
            string dataAreaId, 
            string maintenanceAssetId, 
            string jobGroupId, 
            string jobTradeId, 
            string jobTypeId, 
            string jobVariantId, 
            string modelId, 
            string modelProductId, 
            string maintenanceAssetTypeId, 
            string productId, 
            string functionalLocationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "JobGroupId", jobGroupId }, 
                { "JobTradeId", jobTradeId }, 
                { "JobTypeId", jobTypeId }, 
                { "JobVariantId", jobVariantId }, 
                { "ModelId", modelId }, 
                { "ModelProductId", modelProductId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "ProductId", productId }, 
                { "FunctionalLocationId", functionalLocationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCriticalitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectRevenueSalesPrice as global::Microsoft.Dynamics.DataEntities.ProjectRevenueSalesPriceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectRevenueSalesPriceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectRevenueSalesPrice> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectRevenueSalesPriceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectRevenueSalesPrice as global::Microsoft.Dynamics.DataEntities.ProjectRevenueSalesPriceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projectID">The value of projectID</param>
        /// <param name="priceGroup">The value of priceGroup</param>
        /// <param name="categoryId">The value of categoryId</param>
        /// <param name="effectiveDate">The value of effectiveDate</param>
        /// <param name="salesCurrency">The value of salesCurrency</param>
        /// <param name="customerAccount">The value of customerAccount</param>
        /// <param name="projectContractID">The value of projectContractID</param>
        /// <param name="resourceId">The value of resourceId</param>
        /// <param name="role">The value of role</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectRevenueSalesPriceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectRevenueSalesPrice> _source,
            string dataAreaId, 
            string projectID, 
            string priceGroup, 
            string categoryId, 
            global::System.DateTimeOffset effectiveDate, 
            string salesCurrency, 
            string customerAccount, 
            string projectContractID, 
            string resourceId, 
            long role)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjectID", projectID }, 
                { "PriceGroup", priceGroup }, 
                { "CategoryId", categoryId }, 
                { "EffectiveDate", effectiveDate }, 
                { "SalesCurrency", salesCurrency }, 
                { "CustomerAccount", customerAccount }, 
                { "ProjectContractID", projectContractID }, 
                { "ResourceId", resourceId }, 
                { "Role", role }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectRevenueSalesPriceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitPlan as global::Microsoft.Dynamics.DataEntities.BenefitPlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitPlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitPlan> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitPlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitPlan as global::Microsoft.Dynamics.DataEntities.BenefitPlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="plan">The value of plan</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitPlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitPlan> _source,
            string plan)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Plan", plan }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitPlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerJournalCDSLine as global::Microsoft.Dynamics.DataEntities.LedgerJournalCDSLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerJournalCDSLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerJournalCDSLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerJournalCDSLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerJournalCDSLine as global::Microsoft.Dynamics.DataEntities.LedgerJournalCDSLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="integrationComputedKey">The value of integrationComputedKey</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerJournalCDSLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerJournalCDSLine> _source,
            string dataAreaId, 
            string integrationComputedKey, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "IntegrationComputedKey", integrationComputedKey }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerJournalCDSLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelection as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelection> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelection as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="royaltyAgreementId">The value of royaltyAgreementId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="salesUnitSymbol">The value of salesUnitSymbol</param>
        /// <param name="qualifyingSiteId">The value of qualifyingSiteId</param>
        /// <param name="qualifyingWarehouseId">The value of qualifyingWarehouseId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelection> _source,
            string dataAreaId, 
            string royaltyAgreementId, 
            string itemNumber, 
            string salesUnitSymbol, 
            string qualifyingSiteId, 
            string qualifyingWarehouseId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RoyaltyAgreementId", royaltyAgreementId }, 
                { "ItemNumber", itemNumber }, 
                { "SalesUnitSymbol", salesUnitSymbol }, 
                { "QualifyingSiteId", qualifyingSiteId }, 
                { "QualifyingWarehouseId", qualifyingWarehouseId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementHeaderProductSelectionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogTranslation as global::Microsoft.Dynamics.DataEntities.RetailCatalogTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogTranslation as global::Microsoft.Dynamics.DataEntities.RetailCatalogTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="catalogNumber">The value of catalogNumber</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogTranslation> _source,
            string catalogNumber, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CatalogNumber", catalogNumber }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesInvoiceHeader as global::Microsoft.Dynamics.DataEntities.SalesInvoiceHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesInvoiceHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesInvoiceHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesInvoiceHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesInvoiceHeader as global::Microsoft.Dynamics.DataEntities.SalesInvoiceHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="invoiceNumber">The value of invoiceNumber</param>
        /// <param name="invoiceDate">The value of invoiceDate</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesInvoiceHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesInvoiceHeader> _source,
            string dataAreaId, 
            string invoiceNumber, 
            global::System.DateTimeOffset invoiceDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InvoiceNumber", invoiceNumber }, 
                { "InvoiceDate", invoiceDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesInvoiceHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequency as global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequency> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequency as global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="frequency">The value of frequency</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequency> _source,
            string frequency)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Frequency", frequency }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobDetail as global::Microsoft.Dynamics.DataEntities.JobDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobDetail as global::Microsoft.Dynamics.DataEntities.JobDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.JobDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobDetail> _source,
            string jobId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AttributeValueDerivedDimensions as global::Microsoft.Dynamics.DataEntities.AttributeValueDerivedDimensionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AttributeValueDerivedDimensionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AttributeValueDerivedDimensions> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AttributeValueDerivedDimensionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AttributeValueDerivedDimensions as global::Microsoft.Dynamics.DataEntities.AttributeValueDerivedDimensionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="drivingDimensionAttributeName">The value of drivingDimensionAttributeName</param>
        /// <param name="drivingDimensionAttributeValue">The value of drivingDimensionAttributeValue</param>
        public static global::Microsoft.Dynamics.DataEntities.AttributeValueDerivedDimensionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AttributeValueDerivedDimensions> _source,
            string drivingDimensionAttributeName, 
            string drivingDimensionAttributeValue)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DrivingDimensionAttributeName", drivingDimensionAttributeName }, 
                { "DrivingDimensionAttributeValue", drivingDimensionAttributeValue }
            };
            return new global::Microsoft.Dynamics.DataEntities.AttributeValueDerivedDimensionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollPositionDetail as global::Microsoft.Dynamics.DataEntities.PayrollPositionDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollPositionDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollPositionDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayrollPositionDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollPositionDetail as global::Microsoft.Dynamics.DataEntities.PayrollPositionDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="positionId">The value of positionId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollPositionDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollPositionDetail> _source,
            string positionId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PositionId", positionId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayrollPositionDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AAXSalesLine as global::Microsoft.Dynamics.DataEntities.AAXSalesLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AAXSalesLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AAXSalesLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AAXSalesLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AAXSalesLine as global::Microsoft.Dynamics.DataEntities.AAXSalesLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="inventTransId">The value of inventTransId</param>
        public static global::Microsoft.Dynamics.DataEntities.AAXSalesLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AAXSalesLine> _source,
            string dataAreaId, 
            string inventTransId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InventTransId", inventTransId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AAXSalesLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PostingProfileLine as global::Microsoft.Dynamics.DataEntities.PostingProfileLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PostingProfileLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PostingProfileLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PostingProfileLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PostingProfileLine as global::Microsoft.Dynamics.DataEntities.PostingProfileLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="postingProfile">The value of postingProfile</param>
        /// <param name="accountCode">The value of accountCode</param>
        /// <param name="accountGroupNumber">The value of accountGroupNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PostingProfileLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PostingProfileLine> _source,
            string dataAreaId, 
            string postingProfile, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableGroupAll> accountCode, 
            string accountGroupNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PostingProfile", postingProfile }, 
                { "AccountCode", accountCode }, 
                { "AccountGroupNumber", accountGroupNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PostingProfileLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerInterCompanyAccount as global::Microsoft.Dynamics.DataEntities.LedgerInterCompanyAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerInterCompanyAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerInterCompanyAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerInterCompanyAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerInterCompanyAccount as global::Microsoft.Dynamics.DataEntities.LedgerInterCompanyAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="originatingLegalEntityId">The value of originatingLegalEntityId</param>
        /// <param name="destinationLegalEntityId">The value of destinationLegalEntityId</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerInterCompanyAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerInterCompanyAccount> _source,
            string originatingLegalEntityId, 
            string destinationLegalEntityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "OriginatingLegalEntityId", originatingLegalEntityId }, 
                { "DestinationLegalEntityId", destinationLegalEntityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerInterCompanyAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DepreciationProfileManualSchedule as global::Microsoft.Dynamics.DataEntities.DepreciationProfileManualScheduleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DepreciationProfileManualScheduleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DepreciationProfileManualSchedule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DepreciationProfileManualScheduleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DepreciationProfileManualSchedule as global::Microsoft.Dynamics.DataEntities.DepreciationProfileManualScheduleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="profileId">The value of profileId</param>
        /// <param name="intervalNumber">The value of intervalNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.DepreciationProfileManualScheduleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DepreciationProfileManualSchedule> _source,
            string dataAreaId, 
            string profileId, 
            int intervalNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProfileId", profileId }, 
                { "IntervalNumber", intervalNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.DepreciationProfileManualScheduleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditablePaymentLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditablePaymentLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditablePaymentLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditablePaymentLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditablePaymentLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditablePaymentLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditablePaymentLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operatingUnitNumber">The value of operatingUnitNumber</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="registerNumber">The value of registerNumber</param>
        /// <param name="transactionId">The value of transactionId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditablePaymentLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditablePaymentLine> _source,
            string dataAreaId, 
            string operatingUnitNumber, 
            string storeNumber, 
            string registerNumber, 
            string transactionId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperatingUnitNumber", operatingUnitNumber }, 
                { "StoreNumber", storeNumber }, 
                { "RegisterNumber", registerNumber }, 
                { "TransactionId", transactionId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditablePaymentLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTask as global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTask> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTask as global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="template">The value of template</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTask> _source,
            string template, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Template", template }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteHeader as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteHeader as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteHeader> _source,
            string dataAreaId, 
            string engineeringChangeOrderNumber, 
            decimal engineeringChangeOrderProductLineNumber, 
            string productionSiteId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }, 
                { "ProductionSiteId", productionSiteId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailLoyalty as global::Microsoft.Dynamics.DataEntities.RetailLoyaltySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailLoyaltySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailLoyalty> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailLoyaltySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailLoyalty as global::Microsoft.Dynamics.DataEntities.RetailLoyaltySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailLoyaltySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailLoyalty> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailLoyaltySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateResponsibility as global::Microsoft.Dynamics.DataEntities.JobTemplateResponsibilitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateResponsibilitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateResponsibility> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateResponsibilitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateResponsibility as global::Microsoft.Dynamics.DataEntities.JobTemplateResponsibilitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTemplateId">The value of jobTemplateId</param>
        /// <param name="areaOfResponsibilityId">The value of areaOfResponsibilityId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateResponsibilitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateResponsibility> _source,
            string jobTemplateId, 
            string areaOfResponsibilityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTemplateId", jobTemplateId }, 
                { "AreaOfResponsibilityId", areaOfResponsibilityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateResponsibilitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CatchWeightTag as global::Microsoft.Dynamics.DataEntities.CatchWeightTagSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CatchWeightTagSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CatchWeightTag> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CatchWeightTagSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CatchWeightTag as global::Microsoft.Dynamics.DataEntities.CatchWeightTagSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tagNumber">The value of tagNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CatchWeightTagSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CatchWeightTag> _source,
            string dataAreaId, 
            string tagNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TagNumber", tagNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CatchWeightTagSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectContractLine as global::Microsoft.Dynamics.DataEntities.ProjectContractLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectContractLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectContractLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectContractLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectContractLine as global::Microsoft.Dynamics.DataEntities.ProjectContractLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projectContractId">The value of projectContractId</param>
        /// <param name="lineSequenceNumber">The value of lineSequenceNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectContractLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectContractLine> _source,
            string dataAreaId, 
            string projectContractId, 
            int lineSequenceNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjectContractId", projectContractId }, 
                { "LineSequenceNumber", lineSequenceNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectContractLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OperatingUnit as global::Microsoft.Dynamics.DataEntities.OperatingUnitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OperatingUnitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OperatingUnit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OperatingUnitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OperatingUnit as global::Microsoft.Dynamics.DataEntities.OperatingUnitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="operatingUnitNumber">The value of operatingUnitNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OperatingUnitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OperatingUnit> _source,
            string operatingUnitNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "OperatingUnitNumber", operatingUnitNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OperatingUnitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSalesLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSalesLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSalesLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSalesLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSalesLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSalesLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSalesLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operatingUnitNumber">The value of operatingUnitNumber</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="registerNumber">The value of registerNumber</param>
        /// <param name="transactionId">The value of transactionId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSalesLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSalesLine> _source,
            string dataAreaId, 
            string operatingUnitNumber, 
            string storeNumber, 
            string registerNumber, 
            string transactionId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperatingUnitNumber", operatingUnitNumber }, 
                { "StoreNumber", storeNumber }, 
                { "RegisterNumber", registerNumber }, 
                { "TransactionId", transactionId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableSalesLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BarcodeSetup as global::Microsoft.Dynamics.DataEntities.BarcodeSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BarcodeSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BarcodeSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BarcodeSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BarcodeSetup as global::Microsoft.Dynamics.DataEntities.BarcodeSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="barcodeSetupId">The value of barcodeSetupId</param>
        public static global::Microsoft.Dynamics.DataEntities.BarcodeSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BarcodeSetup> _source,
            string dataAreaId, 
            string barcodeSetupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BarcodeSetupId", barcodeSetupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BarcodeSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductWhereUsedAnalysis as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductWhereUsedAnalysisSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductWhereUsedAnalysisSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductWhereUsedAnalysis> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductWhereUsedAnalysisSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductWhereUsedAnalysis as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductWhereUsedAnalysisSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        /// <param name="usedInProductNumber">The value of usedInProductNumber</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductWhereUsedAnalysisSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductWhereUsedAnalysis> _source,
            string dataAreaId, 
            decimal engineeringChangeOrderProductLineNumber, 
            string usedInProductNumber, 
            string engineeringChangeOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }, 
                { "UsedInProductNumber", usedInProductNumber }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductWhereUsedAnalysisSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCode as global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCode as global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="releasedProductVariantExternalCodeClassId">The value of releasedProductVariantExternalCodeClassId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productColorId">The value of productColorId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCode> _source,
            string dataAreaId, 
            string releasedProductVariantExternalCodeClassId, 
            string itemNumber, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string productColorId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReleasedProductVariantExternalCodeClassId", releasedProductVariantExternalCodeClassId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductColorId", productColorId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantExternalCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerJournalLine as global::Microsoft.Dynamics.DataEntities.LedgerJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerJournalLine as global::Microsoft.Dynamics.DataEntities.LedgerJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerJournalLine> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductV2 as global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductV2 as global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductV2> _source,
            string dataAreaId, 
            string itemNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedDistinctProductV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TillLayoutConfiguration as global::Microsoft.Dynamics.DataEntities.TillLayoutConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TillLayoutConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TillLayoutConfiguration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TillLayoutConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TillLayoutConfiguration as global::Microsoft.Dynamics.DataEntities.TillLayoutConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="layoutId">The value of layoutId</param>
        /// <param name="layoutSizeId">The value of layoutSizeId</param>
        public static global::Microsoft.Dynamics.DataEntities.TillLayoutConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TillLayoutConfiguration> _source,
            string layoutId, 
            string layoutSizeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LayoutId", layoutId }, 
                { "LayoutSizeId", layoutSizeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TillLayoutConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryIncidentTreatment as global::Microsoft.Dynamics.DataEntities.InjuryIncidentTreatmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryIncidentTreatmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryIncidentTreatment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjuryIncidentTreatmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryIncidentTreatment as global::Microsoft.Dynamics.DataEntities.InjuryIncidentTreatmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="caseNumber">The value of caseNumber</param>
        /// <param name="lineNum">The value of lineNum</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryIncidentTreatmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryIncidentTreatment> _source,
            string caseNumber, 
            decimal lineNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CaseNumber", caseNumber }, 
                { "LineNum", lineNum }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjuryIncidentTreatmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductReleasePolicy as global::Microsoft.Dynamics.DataEntities.ProductReleasePolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductReleasePolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductReleasePolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductReleasePolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductReleasePolicy as global::Microsoft.Dynamics.DataEntities.ProductReleasePolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="policyName">The value of policyName</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductReleasePolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductReleasePolicy> _source,
            string policyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PolicyName", policyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductReleasePolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationLine as global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationLine as global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="ratingLevelId">The value of ratingLevelId</param>
        /// <param name="allocationId">The value of allocationId</param>
        /// <param name="planType">The value of planType</param>
        /// <param name="ratingModelType">The value of ratingModelType</param>
        /// <param name="compPerfRatingId">The value of compPerfRatingId</param>
        /// <param name="ratingModelId">The value of ratingModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationLine> _source,
            string dataAreaId, 
            string ratingLevelId, 
            string allocationId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.HrmCompPlanType> planType, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.HrmCompRatingModel> ratingModelType, 
            string compPerfRatingId, 
            string ratingModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RatingLevelId", ratingLevelId }, 
                { "AllocationId", allocationId }, 
                { "PlanType", planType }, 
                { "RatingModelType", ratingModelType }, 
                { "CompPerfRatingId", compPerfRatingId }, 
                { "RatingModelId", ratingModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationPayPerformanceAllocationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetPlan as global::Microsoft.Dynamics.DataEntities.BudgetPlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetPlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlan> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetPlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetPlan as global::Microsoft.Dynamics.DataEntities.BudgetPlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="documentNumber">The value of documentNumber</param>
        /// <param name="scenario">The value of scenario</param>
        /// <param name="lineReferenceId">The value of lineReferenceId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetPlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlan> _source,
            string documentNumber, 
            string scenario, 
            global::System.Guid lineReferenceId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocumentNumber", documentNumber }, 
                { "Scenario", scenario }, 
                { "LineReferenceId", lineReferenceId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetPlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypePermittedSubType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypePermittedSubTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypePermittedSubTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypePermittedSubType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypePermittedSubTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypePermittedSubType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypePermittedSubTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationTypeId">The value of functionalLocationTypeId</param>
        /// <param name="permittedFunctionalLocationTypeId">The value of permittedFunctionalLocationTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypePermittedSubTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypePermittedSubType> _source,
            string dataAreaId, 
            string functionalLocationTypeId, 
            string permittedFunctionalLocationTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationTypeId", functionalLocationTypeId }, 
                { "PermittedFunctionalLocationTypeId", permittedFunctionalLocationTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypePermittedSubTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OperatingUnitContact as global::Microsoft.Dynamics.DataEntities.OperatingUnitContactSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OperatingUnitContactSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OperatingUnitContact> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OperatingUnitContactSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OperatingUnitContact as global::Microsoft.Dynamics.DataEntities.OperatingUnitContactSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="type">The value of type</param>
        /// <param name="description">The value of description</param>
        /// <param name="locator">The value of locator</param>
        /// <param name="oMOperatingUnitNumber">The value of oMOperatingUnitNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OperatingUnitContactSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OperatingUnitContact> _source,
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LogisticsElectronicAddressMethodType> type, 
            string description, 
            string locator, 
            string oMOperatingUnitNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Type", type }, 
                { "Description", description }, 
                { "Locator", locator }, 
                { "OMOperatingUnitNumber", oMOperatingUnitNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OperatingUnitContactSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterVersionTranslation as global::Microsoft.Dynamics.DataEntities.ProductMasterVersionTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterVersionTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterVersionTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterVersionTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterVersionTranslation as global::Microsoft.Dynamics.DataEntities.ProductMasterVersionTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productMasterVersionId">The value of productMasterVersionId</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterVersionTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterVersionTranslation> _source,
            string productMasterNumber, 
            string productMasterVersionId, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductMasterVersionId", productMasterVersionId }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterVersionTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencyAction as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencyActionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencyActionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencyAction> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencyActionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencyAction as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencyActionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="actionClassName">The value of actionClassName</param>
        /// <param name="dependentProductNumber">The value of dependentProductNumber</param>
        /// <param name="dependencyLegalEntityId">The value of dependencyLegalEntityId</param>
        /// <param name="dependencyTransactionDescription">The value of dependencyTransactionDescription</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencyActionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencyAction> _source,
            string actionClassName, 
            string dependentProductNumber, 
            string dependencyLegalEntityId, 
            string dependencyTransactionDescription, 
            string engineeringChangeOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ActionClassName", actionClassName }, 
                { "DependentProductNumber", dependentProductNumber }, 
                { "DependencyLegalEntityId", dependencyLegalEntityId }, 
                { "DependencyTransactionDescription", dependencyTransactionDescription }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderDependencyActionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleState> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleState as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lifecycleStateId">The value of lifecycleStateId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleState> _source,
            string dataAreaId, 
            string lifecycleStateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LifecycleStateId", lifecycleStateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationLifecycleStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryCostType as global::Microsoft.Dynamics.DataEntities.InjuryCostTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryCostTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryCostType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjuryCostTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryCostType as global::Microsoft.Dynamics.DataEntities.InjuryCostTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="costTypeId">The value of costTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryCostTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryCostType> _source,
            string costTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CostTypeId", costTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjuryCostTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OperationType as global::Microsoft.Dynamics.DataEntities.OperationTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OperationTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OperationType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OperationTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OperationType as global::Microsoft.Dynamics.DataEntities.OperationTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operationTypeID">The value of operationTypeID</param>
        public static global::Microsoft.Dynamics.DataEntities.OperationTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OperationType> _source,
            string dataAreaId, 
            string operationTypeID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperationTypeID", operationTypeID }
            };
            return new global::Microsoft.Dynamics.DataEntities.OperationTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonIdentificationNumber as global::Microsoft.Dynamics.DataEntities.PersonIdentificationNumberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonIdentificationNumberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonIdentificationNumber> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonIdentificationNumberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonIdentificationNumber as global::Microsoft.Dynamics.DataEntities.PersonIdentificationNumberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="identificationTypeId">The value of identificationTypeId</param>
        /// <param name="identificationNumber">The value of identificationNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonIdentificationNumberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonIdentificationNumber> _source,
            string partyNumber, 
            string identificationTypeId, 
            string identificationNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "IdentificationTypeId", identificationTypeId }, 
                { "IdentificationNumber", identificationNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonIdentificationNumberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionLine as global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionLine as global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="requisitionNumber">The value of requisitionNumber</param>
        /// <param name="requisitionLineNumber">The value of requisitionLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionLine> _source,
            string requisitionNumber, 
            int requisitionLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RequisitionNumber", requisitionNumber }, 
                { "RequisitionLineNumber", requisitionLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseRequisitionLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="faultSymptomId">The value of faultSymptomId</param>
        /// <param name="faultAreaId">The value of faultAreaId</param>
        /// <param name="faultTypeId">The value of faultTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultType> _source,
            string dataAreaId, 
            string maintenanceAssetTypeId, 
            string faultSymptomId, 
            string faultAreaId, 
            string faultTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "FaultSymptomId", faultSymptomId }, 
                { "FaultAreaId", faultAreaId }, 
                { "FaultTypeId", faultTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeFaultTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSpecification as global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSpecificationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSpecificationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSpecification> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSpecificationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSpecification as global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSpecificationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="paymentMethodName">The value of paymentMethodName</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSpecificationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSpecification> _source,
            string dataAreaId, 
            string paymentMethodName, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PaymentMethodName", paymentMethodName }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentMethodSpecificationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobResponsibility as global::Microsoft.Dynamics.DataEntities.JobResponsibilitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobResponsibilitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobResponsibility> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobResponsibilitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobResponsibility as global::Microsoft.Dynamics.DataEntities.JobResponsibilitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        /// <param name="areaOfResponsibilityId">The value of areaOfResponsibilityId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobResponsibilitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobResponsibility> _source,
            string jobId, 
            string areaOfResponsibilityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }, 
                { "AreaOfResponsibilityId", areaOfResponsibilityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobResponsibilitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonExam as global::Microsoft.Dynamics.DataEntities.PersonExamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonExamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonExam> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonExamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonExam as global::Microsoft.Dynamics.DataEntities.PersonExamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="testId">The value of testId</param>
        /// <param name="requiredBy">The value of requiredBy</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonExamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonExam> _source,
            string partyNumber, 
            string testId, 
            global::System.DateTimeOffset requiredBy)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "TestId", testId }, 
                { "RequiredBy", requiredBy }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonExamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Skill as global::Microsoft.Dynamics.DataEntities.SkillSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SkillSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Skill> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SkillSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Skill as global::Microsoft.Dynamics.DataEntities.SkillSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="skill">The value of skill</param>
        public static global::Microsoft.Dynamics.DataEntities.SkillSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Skill> _source,
            string skill)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Skill", skill }
            };
            return new global::Microsoft.Dynamics.DataEntities.SkillSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryIncidentCostType as global::Microsoft.Dynamics.DataEntities.InjuryIncidentCostTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryIncidentCostTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryIncidentCostType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjuryIncidentCostTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryIncidentCostType as global::Microsoft.Dynamics.DataEntities.InjuryIncidentCostTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="caseNumber">The value of caseNumber</param>
        /// <param name="lineNum">The value of lineNum</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryIncidentCostTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryIncidentCostType> _source,
            string caseNumber, 
            decimal lineNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CaseNumber", caseNumber }, 
                { "LineNum", lineNum }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjuryIncidentCostTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultSymptom as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultSymptomSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultSymptomSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultSymptom> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultSymptomSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultSymptom as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultSymptomSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="faultSymptomId">The value of faultSymptomId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultSymptomSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultSymptom> _source,
            string dataAreaId, 
            string faultSymptomId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FaultSymptomId", faultSymptomId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultSymptomSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdvancedLedgerEntry as global::Microsoft.Dynamics.DataEntities.AdvancedLedgerEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AdvancedLedgerEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdvancedLedgerEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AdvancedLedgerEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdvancedLedgerEntry as global::Microsoft.Dynamics.DataEntities.AdvancedLedgerEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="headerTransactionNumber">The value of headerTransactionNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AdvancedLedgerEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdvancedLedgerEntry> _source,
            string dataAreaId, 
            string headerTransactionNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "HeaderTransactionNumber", headerTransactionNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AdvancedLedgerEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ResourceCategory as global::Microsoft.Dynamics.DataEntities.ResourceCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ResourceCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ResourceCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ResourceCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ResourceCategory as global::Microsoft.Dynamics.DataEntities.ResourceCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="roleId">The value of roleId</param>
        public static global::Microsoft.Dynamics.DataEntities.ResourceCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ResourceCategory> _source,
            string dataAreaId, 
            string roleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RoleId", roleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ResourceCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistory as global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistory as global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="taxCodeId">The value of taxCodeId</param>
        /// <param name="transDate">The value of transDate</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        /// <param name="sequenceNumber">The value of sequenceNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistory> _source,
            string personnelNumber, 
            string taxCodeId, 
            global::System.DateTimeOffset transDate, 
            string countryRegionId, 
            int sequenceNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "TaxCodeId", taxCodeId }, 
                { "TransDate", transDate }, 
                { "CountryRegionId", countryRegionId }, 
                { "SequenceNumber", sequenceNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.USTaxTransactionHistorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseHeader as global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseHeader as global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderResponseLastModificationDateTime">The value of purchaseOrderResponseLastModificationDateTime</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseHeader> _source,
            string dataAreaId, 
            global::System.DateTimeOffset purchaseOrderResponseLastModificationDateTime, 
            string purchaseOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderResponseLastModificationDateTime", purchaseOrderResponseLastModificationDateTime }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderResponseHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplate as global::Microsoft.Dynamics.DataEntities.JobTemplateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplate as global::Microsoft.Dynamics.DataEntities.JobTemplateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTemplate">The value of jobTemplate</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplate> _source,
            string jobTemplate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTemplate", jobTemplate }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineV2 as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineV2 as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseAgreementId">The value of purchaseAgreementId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineV2> _source,
            string dataAreaId, 
            string purchaseAgreementId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseAgreementId", purchaseAgreementId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLineV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JournalName as global::Microsoft.Dynamics.DataEntities.JournalNameSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JournalNameSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JournalName> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JournalNameSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JournalName as global::Microsoft.Dynamics.DataEntities.JournalNameSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.JournalNameSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JournalName> _source,
            string dataAreaId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.JournalNameSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementHeader as global::Microsoft.Dynamics.DataEntities.PayStatementHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayStatementHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementHeader as global::Microsoft.Dynamics.DataEntities.PayStatementHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementHeader> _source,
            string payStatementNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PayStatementNumber", payStatementNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayStatementHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalHeader as global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalHeader as global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalHeader> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.GeneralLedgerCustInvoiceJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TeamMembershipCriterion as global::Microsoft.Dynamics.DataEntities.TeamMembershipCriterionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TeamMembershipCriterionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TeamMembershipCriterion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TeamMembershipCriterionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TeamMembershipCriterion as global::Microsoft.Dynamics.DataEntities.TeamMembershipCriterionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.TeamMembershipCriterionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TeamMembershipCriterion> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.TeamMembershipCriterionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStop as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStop> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStop as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceStopId">The value of maintenanceStopId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStop> _source,
            string dataAreaId, 
            string maintenanceStopId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceStopId", maintenanceStopId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceStopSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantV2 as global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantV2 as global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantV2> _source,
            string dataAreaId, 
            string productMasterNumber, 
            string productConfigurationId, 
            string productSizeId, 
            string productColorId, 
            string productStyleId, 
            string productVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductColorId", productColorId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeCounterAssociation as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeCounterAssociationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeCounterAssociationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeCounterAssociation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeCounterAssociationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeCounterAssociation as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeCounterAssociationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="maintenanceAssetCounterId">The value of maintenanceAssetCounterId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeCounterAssociationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeCounterAssociation> _source,
            string dataAreaId, 
            string maintenanceAssetTypeId, 
            string maintenanceAssetCounterId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "MaintenanceAssetCounterId", maintenanceAssetCounterId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeCounterAssociationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressBooks as global::Microsoft.Dynamics.DataEntities.AddressBooksSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressBooksSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressBooks> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AddressBooksSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressBooks as global::Microsoft.Dynamics.DataEntities.AddressBooksSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressBooksSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressBooks> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.AddressBooksSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseZone as global::Microsoft.Dynamics.DataEntities.WarehouseZoneSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseZoneSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseZone> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseZoneSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseZone as global::Microsoft.Dynamics.DataEntities.WarehouseZoneSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="zoneId">The value of zoneId</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseZoneSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseZone> _source,
            string dataAreaId, 
            string zoneId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ZoneId", zoneId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseZoneSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SystemUser as global::Microsoft.Dynamics.DataEntities.SystemUserSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SystemUserSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SystemUser> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SystemUserSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SystemUser as global::Microsoft.Dynamics.DataEntities.SystemUserSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="userID">The value of userID</param>
        public static global::Microsoft.Dynamics.DataEntities.SystemUserSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SystemUser> _source,
            string userID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UserID", userID }
            };
            return new global::Microsoft.Dynamics.DataEntities.SystemUserSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorInvoiceLine as global::Microsoft.Dynamics.DataEntities.VendorInvoiceLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorInvoiceLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorInvoiceLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorInvoiceLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorInvoiceLine as global::Microsoft.Dynamics.DataEntities.VendorInvoiceLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="headerReference">The value of headerReference</param>
        /// <param name="invoiceLineNumber">The value of invoiceLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorInvoiceLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorInvoiceLine> _source,
            string dataAreaId, 
            string headerReference, 
            decimal invoiceLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "HeaderReference", headerReference }, 
                { "InvoiceLineNumber", invoiceLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorInvoiceLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjQuotationHeader as global::Microsoft.Dynamics.DataEntities.ProjQuotationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjQuotationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjQuotationHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjQuotationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjQuotationHeader as global::Microsoft.Dynamics.DataEntities.ProjQuotationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projQuotationNumber">The value of projQuotationNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjQuotationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjQuotationHeader> _source,
            string dataAreaId, 
            string projQuotationNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjQuotationNumber", projQuotationNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjQuotationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrual as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrual> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrual as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="accrualId">The value of accrualId</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrual> _source,
            string dataAreaId, 
            string accrualId, 
            string personnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AccrualId", accrualId }, 
                { "PersonnelNumber", personnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledAccrualSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedProductVariant as global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedProductVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedProductVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedProductVariant> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedProductVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedProductVariant as global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedProductVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productVariantNumber">The value of productVariantNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedProductVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedProductVariant> _source,
            string productVariantNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductVariantNumber", productVariantNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductNumberIdentifiedProductVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineAmount as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineAmountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineAmountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineAmount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineAmountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineAmount as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineAmountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="royaltyAgreementId">The value of royaltyAgreementId</param>
        /// <param name="royaltyAgreementLineId">The value of royaltyAgreementLineId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineAmountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineAmount> _source,
            string dataAreaId, 
            string royaltyAgreementId, 
            string royaltyAgreementLineId, 
            long lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RoyaltyAgreementId", royaltyAgreementId }, 
                { "RoyaltyAgreementLineId", royaltyAgreementLineId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineAmountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailPackage as global::Microsoft.Dynamics.DataEntities.RetailPackageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailPackageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailPackage> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailPackageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailPackage as global::Microsoft.Dynamics.DataEntities.RetailPackageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="packageId">The value of packageId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailPackageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailPackage> _source,
            string dataAreaId, 
            string packageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PackageId", packageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailPackageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitEligibilityOverride as global::Microsoft.Dynamics.DataEntities.BenefitEligibilityOverrideSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitEligibilityOverrideSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitEligibilityOverride> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitEligibilityOverrideSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitEligibilityOverride as global::Microsoft.Dynamics.DataEntities.BenefitEligibilityOverrideSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitPlanId">The value of benefitPlanId</param>
        /// <param name="benefitOptionId">The value of benefitOptionId</param>
        /// <param name="effective">The value of effective</param>
        /// <param name="expiration">The value of expiration</param>
        /// <param name="workerId">The value of workerId</param>
        /// <param name="overrideStartDate">The value of overrideStartDate</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitEligibilityOverrideSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitEligibilityOverride> _source,
            string benefitPlanId, 
            string benefitOptionId, 
            global::System.DateTimeOffset effective, 
            global::System.DateTimeOffset expiration, 
            string workerId, 
            global::System.DateTimeOffset overrideStartDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitPlanId", benefitPlanId }, 
                { "BenefitOptionId", benefitOptionId }, 
                { "Effective", effective }, 
                { "Expiration", expiration }, 
                { "WorkerId", workerId }, 
                { "OverrideStartDate", overrideStartDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitEligibilityOverrideSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationFixedIncreaseBudget as global::Microsoft.Dynamics.DataEntities.CompensationFixedIncreaseBudgetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationFixedIncreaseBudgetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationFixedIncreaseBudget> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationFixedIncreaseBudgetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationFixedIncreaseBudget as global::Microsoft.Dynamics.DataEntities.CompensationFixedIncreaseBudgetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="departmentNumber">The value of departmentNumber</param>
        /// <param name="effectiveDate">The value of effectiveDate</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationFixedIncreaseBudgetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationFixedIncreaseBudget> _source,
            string dataAreaId, 
            string departmentNumber, 
            global::System.DateTimeOffset effectiveDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DepartmentNumber", departmentNumber }, 
                { "EffectiveDate", effectiveDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationFixedIncreaseBudgetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Application as global::Microsoft.Dynamics.DataEntities.ApplicationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ApplicationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Application> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ApplicationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Application as global::Microsoft.Dynamics.DataEntities.ApplicationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="application">The value of application</param>
        public static global::Microsoft.Dynamics.DataEntities.ApplicationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Application> _source,
            string dataAreaId, 
            string application)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Application", application }
            };
            return new global::Microsoft.Dynamics.DataEntities.ApplicationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetType> _source,
            string dataAreaId, 
            string maintenanceAssetTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationRuleSource as global::Microsoft.Dynamics.DataEntities.AllocationRuleSourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationRuleSourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationRuleSource> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AllocationRuleSourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationRuleSource as global::Microsoft.Dynamics.DataEntities.AllocationRuleSourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="rule">The value of rule</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationRuleSourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationRuleSource> _source,
            string dataAreaId, 
            string rule, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Rule", rule }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AllocationRuleSourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeCustomerApprovalType as global::Microsoft.Dynamics.DataEntities.EngineeringChangeCustomerApprovalTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeCustomerApprovalTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeCustomerApprovalType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeCustomerApprovalTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeCustomerApprovalType as global::Microsoft.Dynamics.DataEntities.EngineeringChangeCustomerApprovalTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="typeName">The value of typeName</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeCustomerApprovalTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeCustomerApprovalType> _source,
            string typeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TypeName", typeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeCustomerApprovalTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicyV2 as global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicyV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicyV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicyV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicyV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicyV2 as global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicyV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="policyName">The value of policyName</param>
        public static global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicyV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicyV2> _source,
            string dataAreaId, 
            string policyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PolicyName", policyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.CatchWeightItemHandlingPolicyV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetModel as global::Microsoft.Dynamics.DataEntities.BudgetModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetModel as global::Microsoft.Dynamics.DataEntities.BudgetModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="budgetModel">The value of budgetModel</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetModel> _source,
            string dataAreaId, 
            string budgetModel)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BudgetModel", budgetModel }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjWBSActivityEstimate as global::Microsoft.Dynamics.DataEntities.ProjWBSActivityEstimateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjWBSActivityEstimateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjWBSActivityEstimate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjWBSActivityEstimateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjWBSActivityEstimate as global::Microsoft.Dynamics.DataEntities.ProjWBSActivityEstimateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projectId">The value of projectId</param>
        /// <param name="wBSId">The value of wBSId</param>
        /// <param name="transactionType">The value of transactionType</param>
        /// <param name="category">The value of category</param>
        /// <param name="resourceCategory">The value of resourceCategory</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="salesCategory">The value of salesCategory</param>
        /// <param name="lineProperty">The value of lineProperty</param>
        /// <param name="quantity">The value of quantity</param>
        /// <param name="unitCostPrice">The value of unitCostPrice</param>
        /// <param name="unitSalesPrice">The value of unitSalesPrice</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjWBSActivityEstimateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjWBSActivityEstimate> _source,
            string dataAreaId, 
            string projectId, 
            string wBSId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.QuotationProjTransType> transactionType, 
            string category, 
            string resourceCategory, 
            string itemNumber, 
            string salesCategory, 
            string lineProperty, 
            decimal quantity, 
            decimal unitCostPrice, 
            decimal unitSalesPrice)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjectId", projectId }, 
                { "WBSId", wBSId }, 
                { "TransactionType", transactionType }, 
                { "Category", category }, 
                { "ResourceCategory", resourceCategory }, 
                { "ItemNumber", itemNumber }, 
                { "SalesCategory", salesCategory }, 
                { "LineProperty", lineProperty }, 
                { "Quantity", quantity }, 
                { "UnitCostPrice", unitCostPrice }, 
                { "UnitSalesPrice", unitSalesPrice }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjWBSActivityEstimateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobADARequirement as global::Microsoft.Dynamics.DataEntities.JobADARequirementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobADARequirementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobADARequirement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobADARequirementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobADARequirement as global::Microsoft.Dynamics.DataEntities.JobADARequirementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobADARequirementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobADARequirement> _source,
            string jobId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobADARequirementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TeamMemberV2 as global::Microsoft.Dynamics.DataEntities.TeamMemberV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TeamMemberV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TeamMemberV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TeamMemberV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TeamMemberV2 as global::Microsoft.Dynamics.DataEntities.TeamMemberV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="teamMemberPartyNumber">The value of teamMemberPartyNumber</param>
        /// <param name="teamName">The value of teamName</param>
        /// <param name="validFrom">The value of validFrom</param>
        public static global::Microsoft.Dynamics.DataEntities.TeamMemberV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TeamMemberV2> _source,
            string teamMemberPartyNumber, 
            string teamName, 
            global::System.DateTimeOffset validFrom)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TeamMemberPartyNumber", teamMemberPartyNumber }, 
                { "TeamName", teamName }, 
                { "ValidFrom", validFrom }
            };
            return new global::Microsoft.Dynamics.DataEntities.TeamMemberV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BeginningBalanceOnAccTransaction as global::Microsoft.Dynamics.DataEntities.BeginningBalanceOnAccTransactionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BeginningBalanceOnAccTransactionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BeginningBalanceOnAccTransaction> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BeginningBalanceOnAccTransactionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BeginningBalanceOnAccTransaction as global::Microsoft.Dynamics.DataEntities.BeginningBalanceOnAccTransactionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalId">The value of journalId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BeginningBalanceOnAccTransactionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BeginningBalanceOnAccTransaction> _source,
            string dataAreaId, 
            string journalId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalId", journalId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BeginningBalanceOnAccTransactionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Customer as global::Microsoft.Dynamics.DataEntities.CustomerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Customer> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Customer as global::Microsoft.Dynamics.DataEntities.CustomerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="customerAccount">The value of customerAccount</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Customer> _source,
            string dataAreaId, 
            string customerAccount)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CustomerAccount", customerAccount }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductVariant as global::Microsoft.Dynamics.DataEntities.ProductVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductVariant> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductVariant as global::Microsoft.Dynamics.DataEntities.ProductVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductVariant> _source,
            string productMasterNumber, 
            string productConfigurationId, 
            string productSizeId, 
            string productColorId, 
            string productStyleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductColorId", productColorId }, 
                { "ProductStyleId", productStyleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileLine as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileLine as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="recordId">The value of recordId</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileLine> _source,
            string dataAreaId, 
            long recordId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RecordId", recordId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentPurchaseOrder as global::Microsoft.Dynamics.DataEntities.SADDocumentPurchaseOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentPurchaseOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentPurchaseOrder> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentPurchaseOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentPurchaseOrder as global::Microsoft.Dynamics.DataEntities.SADDocumentPurchaseOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="documentCode">The value of documentCode</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentPurchaseOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentPurchaseOrder> _source,
            string dataAreaId, 
            string documentCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DocumentCode", documentCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentPurchaseOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderLine as global::Microsoft.Dynamics.DataEntities.SalesOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderLine as global::Microsoft.Dynamics.DataEntities.SalesOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="inventoryLotId">The value of inventoryLotId</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderLine> _source,
            string dataAreaId, 
            string inventoryLotId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InventoryLotId", inventoryLotId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Employment as global::Microsoft.Dynamics.DataEntities.EmploymentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EmploymentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Employment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EmploymentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Employment as global::Microsoft.Dynamics.DataEntities.EmploymentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="employmentStartDate">The value of employmentStartDate</param>
        /// <param name="employmentEndDate">The value of employmentEndDate</param>
        public static global::Microsoft.Dynamics.DataEntities.EmploymentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Employment> _source,
            string personnelNumber, 
            string legalEntityId, 
            global::System.DateTimeOffset employmentStartDate, 
            global::System.DateTimeOffset employmentEndDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "LegalEntityId", legalEntityId }, 
                { "EmploymentStartDate", employmentStartDate }, 
                { "EmploymentEndDate", employmentEndDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.EmploymentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionWorkerDefaultTaxRgn as global::Microsoft.Dynamics.DataEntities.PositionWorkerDefaultTaxRgnSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionWorkerDefaultTaxRgnSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionWorkerDefaultTaxRgn> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionWorkerDefaultTaxRgnSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionWorkerDefaultTaxRgn as global::Microsoft.Dynamics.DataEntities.PositionWorkerDefaultTaxRgnSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="positionId">The value of positionId</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionWorkerDefaultTaxRgnSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionWorkerDefaultTaxRgn> _source,
            string personnelNumber, 
            string positionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "PositionId", positionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionWorkerDefaultTaxRgnSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressDistrict as global::Microsoft.Dynamics.DataEntities.AddressDistrictSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressDistrictSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressDistrict> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AddressDistrictSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressDistrict as global::Microsoft.Dynamics.DataEntities.AddressDistrictSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="district">The value of district</param>
        /// <param name="cityKey">The value of cityKey</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        /// <param name="stateId">The value of stateId</param>
        /// <param name="countyId">The value of countyId</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressDistrictSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressDistrict> _source,
            string district, 
            string cityKey, 
            string countryRegionId, 
            string stateId, 
            string countyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "District", district }, 
                { "CityKey", cityKey }, 
                { "CountryRegionId", countryRegionId }, 
                { "StateId", stateId }, 
                { "CountyId", countyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AddressDistrictSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationType as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationTypeId">The value of functionalLocationTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationType> _source,
            string dataAreaId, 
            string functionalLocationTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationTypeId", functionalLocationTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesDocument as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesDocumentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesDocumentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesDocument> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesDocumentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesDocument as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesDocumentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        /// <param name="engineeringChangeOrderProductRouteHeaderProductionSiteId">The value of engineeringChangeOrderProductRouteHeaderProductionSiteId</param>
        /// <param name="engineeringChangeOrderProductRouteOperationId">The value of engineeringChangeOrderProductRouteOperationId</param>
        /// <param name="engineeringChangeOrderProductRouteOperationNumber">The value of engineeringChangeOrderProductRouteOperationNumber</param>
        /// <param name="engineeringChangeOrderProductRouteOperationPropertiesProductConfigurationId">The value of engineeringChangeOrderProductRouteOperationPropertiesProductConfigurationId</param>
        /// <param name="engineeringChangeOrderProductRouteOperationPropertiesRouteId">The value of engineeringChangeOrderProductRouteOperationPropertiesRouteId</param>
        /// <param name="engineeringChangeOrderProductRouteOperationPropertiesItemNumber">The value of engineeringChangeOrderProductRouteOperationPropertiesItemNumber</param>
        /// <param name="engineeringChangeOrderProductRouteOperationPropertiesProductGroupId">The value of engineeringChangeOrderProductRouteOperationPropertiesProductGroupId</param>
        /// <param name="documentId">The value of documentId</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesDocumentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesDocument> _source,
            string dataAreaId, 
            string engineeringChangeOrderNumber, 
            decimal engineeringChangeOrderProductLineNumber, 
            string engineeringChangeOrderProductRouteHeaderProductionSiteId, 
            string engineeringChangeOrderProductRouteOperationId, 
            int engineeringChangeOrderProductRouteOperationNumber, 
            string engineeringChangeOrderProductRouteOperationPropertiesProductConfigurationId, 
            string engineeringChangeOrderProductRouteOperationPropertiesRouteId, 
            string engineeringChangeOrderProductRouteOperationPropertiesItemNumber, 
            string engineeringChangeOrderProductRouteOperationPropertiesProductGroupId, 
            global::System.Guid documentId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }, 
                { "EngineeringChangeOrderProductRouteHeaderProductionSiteId", engineeringChangeOrderProductRouteHeaderProductionSiteId }, 
                { "EngineeringChangeOrderProductRouteOperationId", engineeringChangeOrderProductRouteOperationId }, 
                { "EngineeringChangeOrderProductRouteOperationNumber", engineeringChangeOrderProductRouteOperationNumber }, 
                { "EngineeringChangeOrderProductRouteOperationPropertiesProductConfigurationId", engineeringChangeOrderProductRouteOperationPropertiesProductConfigurationId }, 
                { "EngineeringChangeOrderProductRouteOperationPropertiesRouteId", engineeringChangeOrderProductRouteOperationPropertiesRouteId }, 
                { "EngineeringChangeOrderProductRouteOperationPropertiesItemNumber", engineeringChangeOrderProductRouteOperationPropertiesItemNumber }, 
                { "EngineeringChangeOrderProductRouteOperationPropertiesProductGroupId", engineeringChangeOrderProductRouteOperationPropertiesProductGroupId }, 
                { "DocumentId", documentId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductRouteOperationPropertiesDocumentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DocumentType as global::Microsoft.Dynamics.DataEntities.DocumentTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DocumentTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DocumentTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DocumentType as global::Microsoft.Dynamics.DataEntities.DocumentTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="iD">The value of iD</param>
        public static global::Microsoft.Dynamics.DataEntities.DocumentTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentType> _source,
            string dataAreaId, 
            string iD)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ID", iD }
            };
            return new global::Microsoft.Dynamics.DataEntities.DocumentTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitEligibilityRule as global::Microsoft.Dynamics.DataEntities.BenefitEligibilityRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitEligibilityRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitEligibilityRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitEligibilityRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitEligibilityRule as global::Microsoft.Dynamics.DataEntities.BenefitEligibilityRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="policyName">The value of policyName</param>
        /// <param name="policyRulesName">The value of policyRulesName</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitEligibilityRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitEligibilityRule> _source,
            string policyName, 
            string policyRulesName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PolicyName", policyName }, 
                { "PolicyRulesName", policyRulesName }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitEligibilityRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductColor as global::Microsoft.Dynamics.DataEntities.ProductColorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductColorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductColor> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductColorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductColor as global::Microsoft.Dynamics.DataEntities.ProductColorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="colorId">The value of colorId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductColorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductColor> _source,
            string colorId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ColorId", colorId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductColorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalPeriod as global::Microsoft.Dynamics.DataEntities.FiscalPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalPeriod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FiscalPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalPeriod as global::Microsoft.Dynamics.DataEntities.FiscalPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="calendar">The value of calendar</param>
        /// <param name="fiscalYear">The value of fiscalYear</param>
        /// <param name="startDate">The value of startDate</param>
        /// <param name="endDate">The value of endDate</param>
        /// <param name="periodName">The value of periodName</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalPeriod> _source,
            string calendar, 
            string fiscalYear, 
            global::System.DateTimeOffset startDate, 
            global::System.DateTimeOffset endDate, 
            string periodName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Calendar", calendar }, 
                { "FiscalYear", fiscalYear }, 
                { "StartDate", startDate }, 
                { "EndDate", endDate }, 
                { "PeriodName", periodName }
            };
            return new global::Microsoft.Dynamics.DataEntities.FiscalPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemSerialNumber as global::Microsoft.Dynamics.DataEntities.ItemSerialNumberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemSerialNumberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemSerialNumber> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ItemSerialNumberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemSerialNumber as global::Microsoft.Dynamics.DataEntities.ItemSerialNumberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="serialNumber">The value of serialNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemSerialNumberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemSerialNumber> _source,
            string dataAreaId, 
            string itemNumber, 
            string serialNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "SerialNumber", serialNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ItemSerialNumberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankClientPayment as global::Microsoft.Dynamics.DataEntities.BankClientPaymentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BankClientPaymentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankClientPayment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BankClientPaymentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankClientPayment as global::Microsoft.Dynamics.DataEntities.BankClientPaymentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="paymentDirection">The value of paymentDirection</param>
        /// <param name="documentNumber">The value of documentNumber</param>
        /// <param name="documentDate">The value of documentDate</param>
        /// <param name="payerAccountNumber">The value of payerAccountNumber</param>
        /// <param name="payeeAccountNumber">The value of payeeAccountNumber</param>
        /// <param name="amount">The value of amount</param>
        /// <param name="currency">The value of currency</param>
        public static global::Microsoft.Dynamics.DataEntities.BankClientPaymentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankClientPayment> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BankClientPaymentDirection_RU> paymentDirection, 
            string documentNumber, 
            global::System.DateTimeOffset documentDate, 
            string payerAccountNumber, 
            string payeeAccountNumber, 
            decimal amount, 
            string currency)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PaymentDirection", paymentDirection }, 
                { "DocumentNumber", documentNumber }, 
                { "DocumentDate", documentDate }, 
                { "PayerAccountNumber", payerAccountNumber }, 
                { "PayeeAccountNumber", payeeAccountNumber }, 
                { "Amount", amount }, 
                { "Currency", currency }
            };
            return new global::Microsoft.Dynamics.DataEntities.BankClientPaymentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressCity as global::Microsoft.Dynamics.DataEntities.AddressCitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressCitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressCity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AddressCitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressCity as global::Microsoft.Dynamics.DataEntities.AddressCitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="cityKey">The value of cityKey</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressCitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressCity> _source,
            string cityKey)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CityKey", cityKey }
            };
            return new global::Microsoft.Dynamics.DataEntities.AddressCitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BeginningBalanceCostSaleTransaction as global::Microsoft.Dynamics.DataEntities.BeginningBalanceCostSaleTransactionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BeginningBalanceCostSaleTransactionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BeginningBalanceCostSaleTransaction> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BeginningBalanceCostSaleTransactionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BeginningBalanceCostSaleTransaction as global::Microsoft.Dynamics.DataEntities.BeginningBalanceCostSaleTransactionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="journalId">The value of journalId</param>
        public static global::Microsoft.Dynamics.DataEntities.BeginningBalanceCostSaleTransactionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BeginningBalanceCostSaleTransaction> _source,
            string dataAreaId, 
            decimal lineNumber, 
            string journalId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LineNumber", lineNumber }, 
                { "JournalId", journalId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BeginningBalanceCostSaleTransactionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DepreciationProfile as global::Microsoft.Dynamics.DataEntities.DepreciationProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DepreciationProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DepreciationProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DepreciationProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DepreciationProfile as global::Microsoft.Dynamics.DataEntities.DepreciationProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="depreciationProfileId">The value of depreciationProfileId</param>
        public static global::Microsoft.Dynamics.DataEntities.DepreciationProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DepreciationProfile> _source,
            string dataAreaId, 
            string depreciationProfileId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DepreciationProfileId", depreciationProfileId }
            };
            return new global::Microsoft.Dynamics.DataEntities.DepreciationProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DefaultDescriptions as global::Microsoft.Dynamics.DataEntities.DefaultDescriptionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DefaultDescriptionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DefaultDescriptions> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DefaultDescriptionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DefaultDescriptions as global::Microsoft.Dynamics.DataEntities.DefaultDescriptionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="description">The value of description</param>
        /// <param name="language">The value of language</param>
        public static global::Microsoft.Dynamics.DataEntities.DefaultDescriptionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DefaultDescriptions> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LedgerTransTxt> description, 
            string language)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Description", description }, 
                { "Language", language }
            };
            return new global::Microsoft.Dynamics.DataEntities.DefaultDescriptionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseJournalHeader as global::Microsoft.Dynamics.DataEntities.ExpenseJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExpenseJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseJournalHeader as global::Microsoft.Dynamics.DataEntities.ExpenseJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseJournalHeader> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExpenseJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SurveyCompany as global::Microsoft.Dynamics.DataEntities.SurveyCompanySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SurveyCompanySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SurveyCompany> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SurveyCompanySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SurveyCompany as global::Microsoft.Dynamics.DataEntities.SurveyCompanySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="surveyCompanyId">The value of surveyCompanyId</param>
        public static global::Microsoft.Dynamics.DataEntities.SurveyCompanySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SurveyCompany> _source,
            string surveyCompanyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SurveyCompanyId", surveyCompanyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SurveyCompanySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RequestForQuotationJournalHeader as global::Microsoft.Dynamics.DataEntities.RequestForQuotationJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RequestForQuotationJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RequestForQuotationJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RequestForQuotationJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RequestForQuotationJournalHeader as global::Microsoft.Dynamics.DataEntities.RequestForQuotationJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="rFQNumber">The value of rFQNumber</param>
        /// <param name="rFQJournalDate">The value of rFQJournalDate</param>
        /// <param name="internalRFQJournalNumber">The value of internalRFQJournalNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RequestForQuotationJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RequestForQuotationJournalHeader> _source,
            string dataAreaId, 
            string rFQNumber, 
            global::System.DateTimeOffset rFQJournalDate, 
            string internalRFQJournalNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RFQNumber", rFQNumber }, 
                { "RFQJournalDate", rFQJournalDate }, 
                { "InternalRFQJournalNumber", internalRFQJournalNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RequestForQuotationJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTaskManagementReport as global::Microsoft.Dynamics.DataEntities.RetailTaskManagementReportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTaskManagementReportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTaskManagementReport> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTaskManagementReportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTaskManagementReport as global::Microsoft.Dynamics.DataEntities.RetailTaskManagementReportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="process_ProcessId">The value of process_ProcessId</param>
        /// <param name="taskId">The value of taskId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTaskManagementReportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTaskManagementReport> _source,
            global::System.Guid process_ProcessId, 
            global::System.Guid taskId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Process_ProcessId", process_ProcessId }, 
                { "TaskId", taskId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTaskManagementReportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerSummary as global::Microsoft.Dynamics.DataEntities.WorkerSummarySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerSummarySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerSummary> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerSummarySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerSummary as global::Microsoft.Dynamics.DataEntities.WorkerSummarySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerSummarySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerSummary> _source,
            string personnelNumber, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerSummarySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerCurrencyParameters as global::Microsoft.Dynamics.DataEntities.LedgerCurrencyParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerCurrencyParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerCurrencyParameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerCurrencyParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerCurrencyParameters as global::Microsoft.Dynamics.DataEntities.LedgerCurrencyParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="ledger_Name">The value of ledger_Name</param>
        /// <param name="currencyCode">The value of currencyCode</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerCurrencyParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerCurrencyParameters> _source,
            string dataAreaId, 
            string ledger_Name, 
            string currencyCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Ledger_Name", ledger_Name }, 
                { "CurrencyCode", currencyCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerCurrencyParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationRegion as global::Microsoft.Dynamics.DataEntities.CompensationRegionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationRegionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationRegion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompensationRegionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompensationRegion as global::Microsoft.Dynamics.DataEntities.CompensationRegionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="location">The value of location</param>
        public static global::Microsoft.Dynamics.DataEntities.CompensationRegionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompensationRegion> _source,
            string location)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Location", location }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompensationRegionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlDimensionAttribute as global::Microsoft.Dynamics.DataEntities.BudgetControlDimensionAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlDimensionAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlDimensionAttribute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlDimensionAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlDimensionAttribute as global::Microsoft.Dynamics.DataEntities.BudgetControlDimensionAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="dimensionAttributeId">The value of dimensionAttributeId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlDimensionAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlDimensionAttribute> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            string dimensionAttributeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "DimensionAttributeId", dimensionAttributeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlDimensionAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTenderDiscount as global::Microsoft.Dynamics.DataEntities.RetailTenderDiscountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTenderDiscountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTenderDiscount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTenderDiscountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTenderDiscount as global::Microsoft.Dynamics.DataEntities.RetailTenderDiscountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="offerId">The value of offerId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTenderDiscountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTenderDiscount> _source,
            string dataAreaId, 
            string offerId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OfferId", offerId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTenderDiscountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductDocument as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductDocumentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductDocumentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductDocument> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductDocumentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductDocument as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductDocumentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="documentId">The value of documentId</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductDocumentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductDocument> _source,
            string dataAreaId, 
            global::System.Guid documentId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DocumentId", documentId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductDocumentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RAssetStandard as global::Microsoft.Dynamics.DataEntities.RAssetStandardSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RAssetStandardSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RAssetStandard> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RAssetStandardSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RAssetStandard as global::Microsoft.Dynamics.DataEntities.RAssetStandardSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fAInventoryNumber">The value of fAInventoryNumber</param>
        /// <param name="valueModel">The value of valueModel</param>
        public static global::Microsoft.Dynamics.DataEntities.RAssetStandardSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RAssetStandard> _source,
            string dataAreaId, 
            string fAInventoryNumber, 
            string valueModel)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FAInventoryNumber", fAInventoryNumber }, 
                { "ValueModel", valueModel }
            };
            return new global::Microsoft.Dynamics.DataEntities.RAssetStandardSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductV2 as global::Microsoft.Dynamics.DataEntities.ProductV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductV2 as global::Microsoft.Dynamics.DataEntities.ProductV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductV2> _source,
            string productNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorInvoiceHeader as global::Microsoft.Dynamics.DataEntities.VendorInvoiceHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorInvoiceHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorInvoiceHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorInvoiceHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorInvoiceHeader as global::Microsoft.Dynamics.DataEntities.VendorInvoiceHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="headerReference">The value of headerReference</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorInvoiceHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorInvoiceHeader> _source,
            string dataAreaId, 
            string headerReference)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "HeaderReference", headerReference }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorInvoiceHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxExemptCode as global::Microsoft.Dynamics.DataEntities.TaxExemptCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxExemptCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxExemptCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxExemptCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxExemptCode as global::Microsoft.Dynamics.DataEntities.TaxExemptCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxExemptCode">The value of taxExemptCode</param>
        /// <param name="language">The value of language</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxExemptCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxExemptCode> _source,
            string dataAreaId, 
            string taxExemptCode, 
            string language)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxExemptCode", taxExemptCode }, 
                { "Language", language }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxExemptCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTypeDefaultDimension as global::Microsoft.Dynamics.DataEntities.CourseTypeDefaultDimensionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeDefaultDimensionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTypeDefaultDimension> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeDefaultDimensionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTypeDefaultDimension as global::Microsoft.Dynamics.DataEntities.CourseTypeDefaultDimensionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="courseTypeId">The value of courseTypeId</param>
        /// <param name="company">The value of company</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeDefaultDimensionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTypeDefaultDimension> _source,
            string courseTypeId, 
            string company)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CourseTypeId", courseTypeId }, 
                { "Company", company }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeDefaultDimensionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayAgreement as global::Microsoft.Dynamics.DataEntities.PayAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayAgreement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayAgreement as global::Microsoft.Dynamics.DataEntities.PayAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="payAgreementCode">The value of payAgreementCode</param>
        public static global::Microsoft.Dynamics.DataEntities.PayAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayAgreement> _source,
            string dataAreaId, 
            string payAgreementCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PayAgreementCode", payAgreementCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.NGPCode as global::Microsoft.Dynamics.DataEntities.NGPCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.NGPCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.NGPCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.NGPCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.NGPCode as global::Microsoft.Dynamics.DataEntities.NGPCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="nGP">The value of nGP</param>
        public static global::Microsoft.Dynamics.DataEntities.NGPCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.NGPCode> _source,
            string dataAreaId, 
            int nGP)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "NGP", nGP }
            };
            return new global::Microsoft.Dynamics.DataEntities.NGPCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLine as global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLine as global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLine> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMajorType as global::Microsoft.Dynamics.DataEntities.AssetMajorTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMajorTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMajorType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMajorTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMajorType as global::Microsoft.Dynamics.DataEntities.AssetMajorTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="majorTypeId">The value of majorTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMajorTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMajorType> _source,
            string dataAreaId, 
            string majorTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MajorTypeId", majorTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMajorTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRound as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRoundSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRoundSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRound> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRoundSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRound as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRoundSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="roundId">The value of roundId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRoundSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRound> _source,
            string dataAreaId, 
            string roundId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RoundId", roundId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceRoundSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganization as global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganization> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganization as global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="catalogNumber">The value of catalogNumber</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganization> _source,
            string catalogNumber, 
            string partyNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CatalogNumber", catalogNumber }, 
                { "PartyNumber", partyNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleLine as global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleLine as global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="replenishmentRule">The value of replenishmentRule</param>
        /// <param name="type">The value of type</param>
        /// <param name="replenishmentHierarchyTypeName">The value of replenishmentHierarchyTypeName</param>
        /// <param name="replenishmentOrganizationPartyNumber">The value of replenishmentOrganizationPartyNumber</param>
        /// <param name="replenishmentHierarchyValidFrom">The value of replenishmentHierarchyValidFrom</param>
        /// <param name="replenishmentHierarchyValidTo">The value of replenishmentHierarchyValidTo</param>
        /// <param name="retailChannelId">The value of retailChannelId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleLine> _source,
            string dataAreaId, 
            string replenishmentRule, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleType> type, 
            string replenishmentHierarchyTypeName, 
            string replenishmentOrganizationPartyNumber, 
            global::System.DateTimeOffset replenishmentHierarchyValidFrom, 
            global::System.DateTimeOffset replenishmentHierarchyValidTo, 
            string retailChannelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReplenishmentRule", replenishmentRule }, 
                { "Type", type }, 
                { "ReplenishmentHierarchyTypeName", replenishmentHierarchyTypeName }, 
                { "ReplenishmentOrganizationPartyNumber", replenishmentOrganizationPartyNumber }, 
                { "ReplenishmentHierarchyValidFrom", replenishmentHierarchyValidFrom }, 
                { "ReplenishmentHierarchyValidTo", replenishmentHierarchyValidTo }, 
                { "RetailChannelId", retailChannelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailReplenishmentRuleLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetirementBenefitPlanDetail as global::Microsoft.Dynamics.DataEntities.RetirementBenefitPlanDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetirementBenefitPlanDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetirementBenefitPlanDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetirementBenefitPlanDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetirementBenefitPlanDetail as global::Microsoft.Dynamics.DataEntities.RetirementBenefitPlanDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitPlanID">The value of benefitPlanID</param>
        public static global::Microsoft.Dynamics.DataEntities.RetirementBenefitPlanDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetirementBenefitPlanDetail> _source,
            string benefitPlanID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitPlanID", benefitPlanID }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetirementBenefitPlanDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CostGroup as global::Microsoft.Dynamics.DataEntities.CostGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CostGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CostGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CostGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CostGroup as global::Microsoft.Dynamics.DataEntities.CostGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.CostGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CostGroup> _source,
            string dataAreaId, 
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CostGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerFinancialReason as global::Microsoft.Dynamics.DataEntities.LedgerFinancialReasonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerFinancialReasonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerFinancialReason> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerFinancialReasonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerFinancialReason as global::Microsoft.Dynamics.DataEntities.LedgerFinancialReasonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="reasonCode">The value of reasonCode</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerFinancialReasonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerFinancialReason> _source,
            string dataAreaId, 
            string reasonCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReasonCode", reasonCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerFinancialReasonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerExam as global::Microsoft.Dynamics.DataEntities.WorkerExamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerExamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerExam> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerExamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerExam as global::Microsoft.Dynamics.DataEntities.WorkerExamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="requiredBy">The value of requiredBy</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="testId">The value of testId</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerExamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerExam> _source,
            global::System.DateTimeOffset requiredBy, 
            string personnelNumber, 
            string testId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RequiredBy", requiredBy }, 
                { "PersonnelNumber", personnelNumber }, 
                { "TestId", testId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerExamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogProductCategory as global::Microsoft.Dynamics.DataEntities.RetailCatalogProductCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogProductCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogProductCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogProductCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogProductCategory as global::Microsoft.Dynamics.DataEntities.RetailCatalogProductCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="catalogNumber">The value of catalogNumber</param>
        /// <param name="displayProductNumber">The value of displayProductNumber</param>
        /// <param name="categoryName">The value of categoryName</param>
        /// <param name="categoryHierarchyName">The value of categoryHierarchyName</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogProductCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogProductCategory> _source,
            string catalogNumber, 
            string displayProductNumber, 
            string categoryName, 
            string categoryHierarchyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CatalogNumber", catalogNumber }, 
                { "DisplayProductNumber", displayProductNumber }, 
                { "CategoryName", categoryName }, 
                { "CategoryHierarchyName", categoryHierarchyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogProductCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationForMainAccount as global::Microsoft.Dynamics.DataEntities.AllocationForMainAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationForMainAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationForMainAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AllocationForMainAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationForMainAccount as global::Microsoft.Dynamics.DataEntities.AllocationForMainAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="mainAccountId">The value of mainAccountId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationForMainAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationForMainAccount> _source,
            string dataAreaId, 
            string mainAccountId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MainAccountId", mainAccountId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AllocationForMainAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringProductCategoryDetails as global::Microsoft.Dynamics.DataEntities.EngineeringProductCategoryDetailsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringProductCategoryDetailsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringProductCategoryDetails> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringProductCategoryDetailsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringProductCategoryDetails as global::Microsoft.Dynamics.DataEntities.EngineeringProductCategoryDetailsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="engineeringProductCategoryName">The value of engineeringProductCategoryName</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringProductCategoryDetailsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringProductCategoryDetails> _source,
            string engineeringProductCategoryName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EngineeringProductCategoryName", engineeringProductCategoryName }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringProductCategoryDetailsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Worker as global::Microsoft.Dynamics.DataEntities.WorkerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Worker> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Worker as global::Microsoft.Dynamics.DataEntities.WorkerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Worker> _source,
            string personnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PriceVendorGroup as global::Microsoft.Dynamics.DataEntities.PriceVendorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PriceVendorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PriceVendorGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PriceVendorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PriceVendorGroup as global::Microsoft.Dynamics.DataEntities.PriceVendorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.PriceVendorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PriceVendorGroup> _source,
            string dataAreaId, 
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupCode", groupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.PriceVendorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EducationDegree as global::Microsoft.Dynamics.DataEntities.EducationDegreeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EducationDegreeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EducationDegree> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EducationDegreeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EducationDegree as global::Microsoft.Dynamics.DataEntities.EducationDegreeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="levelOfEducation">The value of levelOfEducation</param>
        public static global::Microsoft.Dynamics.DataEntities.EducationDegreeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EducationDegree> _source,
            string levelOfEducation)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LevelOfEducation", levelOfEducation }
            };
            return new global::Microsoft.Dynamics.DataEntities.EducationDegreeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterStyleTranslation as global::Microsoft.Dynamics.DataEntities.ProductMasterStyleTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterStyleTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterStyleTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterStyleTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterStyleTranslation as global::Microsoft.Dynamics.DataEntities.ProductMasterStyleTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productMasterStyleId">The value of productMasterStyleId</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterStyleTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterStyleTranslation> _source,
            string productMasterNumber, 
            string productMasterStyleId, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductMasterStyleId", productMasterStyleId }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterStyleTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompVarPlanTable as global::Microsoft.Dynamics.DataEntities.CompVarPlanTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CompVarPlanTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompVarPlanTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CompVarPlanTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CompVarPlanTable as global::Microsoft.Dynamics.DataEntities.CompVarPlanTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="planId">The value of planId</param>
        public static global::Microsoft.Dynamics.DataEntities.CompVarPlanTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CompVarPlanTable> _source,
            string dataAreaId, 
            string planId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PlanId", planId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CompVarPlanTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRule as global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRule as global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workPolicyName">The value of workPolicyName</param>
        /// <param name="workOrderType">The value of workOrderType</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRule> _source,
            string dataAreaId, 
            string workPolicyName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.WHSWorkTransType> workOrderType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkPolicyName", workPolicyName }, 
                { "WorkOrderType", workOrderType }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseWorkCreationRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayCycle as global::Microsoft.Dynamics.DataEntities.PayCycleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayCycleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayCycle> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayCycleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayCycle as global::Microsoft.Dynamics.DataEntities.PayCycleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="payCycleId">The value of payCycleId</param>
        public static global::Microsoft.Dynamics.DataEntities.PayCycleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayCycle> _source,
            string payCycleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PayCycleId", payCycleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayCycleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Employee as global::Microsoft.Dynamics.DataEntities.EmployeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EmployeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Employee> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EmployeeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Employee as global::Microsoft.Dynamics.DataEntities.EmployeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="employmentLegalEntityId">The value of employmentLegalEntityId</param>
        /// <param name="employmentStartDate">The value of employmentStartDate</param>
        /// <param name="employmentEndDate">The value of employmentEndDate</param>
        public static global::Microsoft.Dynamics.DataEntities.EmployeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Employee> _source,
            string personnelNumber, 
            string employmentLegalEntityId, 
            global::System.DateTimeOffset employmentStartDate, 
            global::System.DateTimeOffset employmentEndDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "EmploymentLegalEntityId", employmentLegalEntityId }, 
                { "EmploymentStartDate", employmentStartDate }, 
                { "EmploymentEndDate", employmentEndDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.EmployeeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitType as global::Microsoft.Dynamics.DataEntities.BenefitTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitType as global::Microsoft.Dynamics.DataEntities.BenefitTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitTypeId">The value of benefitTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitType> _source,
            string benefitTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitTypeId", benefitTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetAllocationTerm as global::Microsoft.Dynamics.DataEntities.BudgetAllocationTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetAllocationTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetAllocationTerm> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetAllocationTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetAllocationTerm as global::Microsoft.Dynamics.DataEntities.BudgetAllocationTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="budgetAllocationTerm">The value of budgetAllocationTerm</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetAllocationTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetAllocationTerm> _source,
            string dataAreaId, 
            string budgetAllocationTerm, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BudgetAllocationTerm", budgetAllocationTerm }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetAllocationTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DemandForecastEntry as global::Microsoft.Dynamics.DataEntities.DemandForecastEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DemandForecastEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DemandForecastEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DemandForecastEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DemandForecastEntry as global::Microsoft.Dynamics.DataEntities.DemandForecastEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="forecastEntryNumber">The value of forecastEntryNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.DemandForecastEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DemandForecastEntry> _source,
            string dataAreaId, 
            string forecastEntryNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ForecastEntryNumber", forecastEntryNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.DemandForecastEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependency as global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependency> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependency as global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dependentProductNumber">The value of dependentProductNumber</param>
        /// <param name="dependencyLegalEntityId">The value of dependencyLegalEntityId</param>
        /// <param name="dependencyTransactionDescription">The value of dependencyTransactionDescription</param>
        /// <param name="engineeringChangeRequestNumber">The value of engineeringChangeRequestNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependency> _source,
            string dependentProductNumber, 
            string dependencyLegalEntityId, 
            string dependencyTransactionDescription, 
            string engineeringChangeRequestNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DependentProductNumber", dependentProductNumber }, 
                { "DependencyLegalEntityId", dependencyLegalEntityId }, 
                { "DependencyTransactionDescription", dependencyTransactionDescription }, 
                { "EngineeringChangeRequestNumber", engineeringChangeRequestNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestDependencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerAccrualAdjustment as global::Microsoft.Dynamics.DataEntities.WorkerAccrualAdjustmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerAccrualAdjustmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerAccrualAdjustment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerAccrualAdjustmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerAccrualAdjustment as global::Microsoft.Dynamics.DataEntities.WorkerAccrualAdjustmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="adjustmentType">The value of adjustmentType</param>
        /// <param name="accrualId">The value of accrualId</param>
        /// <param name="sequenceNumber">The value of sequenceNumber</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="enrolledAccrualLegalEntityId">The value of enrolledAccrualLegalEntityId</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerAccrualAdjustmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerAccrualAdjustment> _source,
            string dataAreaId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.PayrollAccrualAdjustmentType> adjustmentType, 
            string accrualId, 
            int sequenceNumber, 
            string legalEntityId, 
            string enrolledAccrualLegalEntityId, 
            string personnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AdjustmentType", adjustmentType }, 
                { "AccrualId", accrualId }, 
                { "SequenceNumber", sequenceNumber }, 
                { "LegalEntityId", legalEntityId }, 
                { "EnrolledAccrualLegalEntityId", enrolledAccrualLegalEntityId }, 
                { "PersonnelNumber", personnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerAccrualAdjustmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectFundingSource as global::Microsoft.Dynamics.DataEntities.ProjectFundingSourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectFundingSourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectFundingSource> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectFundingSourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectFundingSource as global::Microsoft.Dynamics.DataEntities.ProjectFundingSourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projectContractID">The value of projectContractID</param>
        /// <param name="fundingSourceId">The value of fundingSourceId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectFundingSourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectFundingSource> _source,
            string dataAreaId, 
            string projectContractID, 
            string fundingSourceId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjectContractID", projectContractID }, 
                { "FundingSourceId", fundingSourceId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectFundingSourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.UnitOfMeasureConversion as global::Microsoft.Dynamics.DataEntities.UnitOfMeasureConversionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.UnitOfMeasureConversionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.UnitOfMeasureConversion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.UnitOfMeasureConversionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.UnitOfMeasureConversion as global::Microsoft.Dynamics.DataEntities.UnitOfMeasureConversionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="fromUnitSymbol">The value of fromUnitSymbol</param>
        /// <param name="toUnitSymbol">The value of toUnitSymbol</param>
        public static global::Microsoft.Dynamics.DataEntities.UnitOfMeasureConversionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.UnitOfMeasureConversion> _source,
            string fromUnitSymbol, 
            string toUnitSymbol)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FromUnitSymbol", fromUnitSymbol }, 
                { "ToUnitSymbol", toUnitSymbol }
            };
            return new global::Microsoft.Dynamics.DataEntities.UnitOfMeasureConversionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationLine as global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationLine as global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="confirmationNumber">The value of confirmationNumber</param>
        /// <param name="confirmationDate">The value of confirmationDate</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationLine> _source,
            string dataAreaId, 
            string purchaseOrderNumber, 
            long lineNumber, 
            string confirmationNumber, 
            global::System.DateTimeOffset confirmationDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }, 
                { "LineNumber", lineNumber }, 
                { "ConfirmationNumber", confirmationNumber }, 
                { "ConfirmationDate", confirmationDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderConfirmationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxAuthority as global::Microsoft.Dynamics.DataEntities.TaxAuthoritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxAuthoritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxAuthority> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxAuthoritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxAuthority as global::Microsoft.Dynamics.DataEntities.TaxAuthoritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxAuthorityCode">The value of taxAuthorityCode</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxAuthoritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxAuthority> _source,
            string dataAreaId, 
            string taxAuthorityCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxAuthorityCode", taxAuthorityCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxAuthoritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTerminal as global::Microsoft.Dynamics.DataEntities.RetailTerminalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTerminalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTerminal> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTerminalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTerminal as global::Microsoft.Dynamics.DataEntities.RetailTerminalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="terminalNumber">The value of terminalNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTerminalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTerminal> _source,
            string terminalNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TerminalNumber", terminalNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTerminalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentFee as global::Microsoft.Dynamics.DataEntities.VendorPaymentFeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentFeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentFee> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentFeeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentFee as global::Microsoft.Dynamics.DataEntities.VendorPaymentFeeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentFeeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentFee> _source,
            string dataAreaId, 
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentFeeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxCode as global::Microsoft.Dynamics.DataEntities.TaxCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxCode as global::Microsoft.Dynamics.DataEntities.TaxCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxCode">The value of taxCode</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxCode> _source,
            string dataAreaId, 
            string taxCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxCode", taxCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AgreementTerm as global::Microsoft.Dynamics.DataEntities.AgreementTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AgreementTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AgreementTerm> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AgreementTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AgreementTerm as global::Microsoft.Dynamics.DataEntities.AgreementTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="termsOfEmployment">The value of termsOfEmployment</param>
        public static global::Microsoft.Dynamics.DataEntities.AgreementTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AgreementTerm> _source,
            string termsOfEmployment)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TermsOfEmployment", termsOfEmployment }
            };
            return new global::Microsoft.Dynamics.DataEntities.AgreementTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetProvisionType as global::Microsoft.Dynamics.DataEntities.AssetProvisionTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetProvisionTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetProvisionType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetProvisionTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetProvisionType as global::Microsoft.Dynamics.DataEntities.AssetProvisionTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="typeId">The value of typeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetProvisionTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetProvisionType> _source,
            string dataAreaId, 
            string typeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TypeId", typeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetProvisionTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventLumpSum as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventLumpSumSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventLumpSumSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventLumpSum> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventLumpSumSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventLumpSum as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventLumpSumSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="tradeAllowanceAgreementMerchandisingEventId">The value of tradeAllowanceAgreementMerchandisingEventId</param>
        /// <param name="lumpSumId">The value of lumpSumId</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventLumpSumSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventLumpSum> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementId, 
            string customerAccountNumber, 
            string tradeAllowanceAgreementMerchandisingEventId, 
            long lumpSumId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "TradeAllowanceAgreementMerchandisingEventId", tradeAllowanceAgreementMerchandisingEventId }, 
                { "LumpSumId", lumpSumId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventLumpSumSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetJournalLine as global::Microsoft.Dynamics.DataEntities.AssetJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetJournalLine as global::Microsoft.Dynamics.DataEntities.AssetJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetJournalLine> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangePriority as global::Microsoft.Dynamics.DataEntities.EngineeringChangePrioritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangePrioritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangePriority> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangePrioritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangePriority as global::Microsoft.Dynamics.DataEntities.EngineeringChangePrioritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="priorityName">The value of priorityName</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangePrioritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangePriority> _source,
            string priorityName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PriorityName", priorityName }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangePrioritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PublishedRequestForQuotationHeader as global::Microsoft.Dynamics.DataEntities.PublishedRequestForQuotationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PublishedRequestForQuotationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PublishedRequestForQuotationHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PublishedRequestForQuotationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PublishedRequestForQuotationHeader as global::Microsoft.Dynamics.DataEntities.PublishedRequestForQuotationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="rFQCaseNumber">The value of rFQCaseNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PublishedRequestForQuotationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PublishedRequestForQuotationHeader> _source,
            string dataAreaId, 
            string rFQCaseNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RFQCaseNumber", rFQCaseNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PublishedRequestForQuotationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderPool as global::Microsoft.Dynamics.DataEntities.SalesOrderPoolSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderPoolSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderPool> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderPoolSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderPool as global::Microsoft.Dynamics.DataEntities.SalesOrderPoolSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="poolId">The value of poolId</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderPoolSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderPool> _source,
            string dataAreaId, 
            string poolId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PoolId", poolId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderPoolSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAsset as global::Microsoft.Dynamics.DataEntities.FixedAssetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAsset> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAsset as global::Microsoft.Dynamics.DataEntities.FixedAssetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fixedAssetNumber">The value of fixedAssetNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAsset> _source,
            string dataAreaId, 
            string fixedAssetNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FixedAssetNumber", fixedAssetNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ConsumptionFactor as global::Microsoft.Dynamics.DataEntities.ConsumptionFactorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ConsumptionFactorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ConsumptionFactor> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ConsumptionFactorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ConsumptionFactor as global::Microsoft.Dynamics.DataEntities.ConsumptionFactorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="consumptionFactorId">The value of consumptionFactorId</param>
        /// <param name="endDate">The value of endDate</param>
        public static global::Microsoft.Dynamics.DataEntities.ConsumptionFactorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ConsumptionFactor> _source,
            string dataAreaId, 
            string consumptionFactorId, 
            global::System.DateTimeOffset endDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ConsumptionFactorId", consumptionFactorId }, 
                { "EndDate", endDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.ConsumptionFactorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.HumanResourcesSharedParameters as global::Microsoft.Dynamics.DataEntities.HumanResourcesSharedParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.HumanResourcesSharedParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.HumanResourcesSharedParameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.HumanResourcesSharedParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.HumanResourcesSharedParameters as global::Microsoft.Dynamics.DataEntities.HumanResourcesSharedParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="key">The value of key</param>
        public static global::Microsoft.Dynamics.DataEntities.HumanResourcesSharedParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.HumanResourcesSharedParameters> _source,
            int key)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Key", key }
            };
            return new global::Microsoft.Dynamics.DataEntities.HumanResourcesSharedParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceScheduledExecution as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceScheduledExecutionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceScheduledExecutionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceScheduledExecution> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceScheduledExecutionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceScheduledExecution as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceScheduledExecutionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workOrderTypeId">The value of workOrderTypeId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="jobGroupId">The value of jobGroupId</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        /// <param name="jobTradeId">The value of jobTradeId</param>
        /// <param name="jobVariantId">The value of jobVariantId</param>
        /// <param name="serviceLevel">The value of serviceLevel</param>
        /// <param name="scheduledExecution">The value of scheduledExecution</param>
        /// <param name="modelId">The value of modelId</param>
        /// <param name="modelProductId">The value of modelProductId</param>
        /// <param name="productId">The value of productId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceScheduledExecutionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceScheduledExecution> _source,
            string dataAreaId, 
            string workOrderTypeId, 
            string maintenanceAssetTypeId, 
            string jobGroupId, 
            string jobTypeId, 
            string jobTradeId, 
            string jobVariantId, 
            int serviceLevel, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.EntAssetScheduledExecutionTimePeriod> scheduledExecution, 
            string modelId, 
            string modelProductId, 
            string productId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkOrderTypeId", workOrderTypeId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "JobGroupId", jobGroupId }, 
                { "JobTypeId", jobTypeId }, 
                { "JobTradeId", jobTradeId }, 
                { "JobVariantId", jobVariantId }, 
                { "ServiceLevel", serviceLevel }, 
                { "ScheduledExecution", scheduledExecution }, 
                { "ModelId", modelId }, 
                { "ModelProductId", modelProductId }, 
                { "ProductId", productId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceScheduledExecutionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringProductVersion as global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringProductVersion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringProductVersion as global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="engineeringVersionId">The value of engineeringVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringProductVersion> _source,
            string productNumber, 
            string engineeringVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductNumber", productNumber }, 
                { "EngineeringVersionId", engineeringVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultDescription as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultDescriptionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultDescriptionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultDescription> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultDescriptionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultDescription as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultDescriptionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="productId">The value of productId</param>
        /// <param name="modelProductId">The value of modelProductId</param>
        /// <param name="modelId">The value of modelId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="jobTypeId">The value of jobTypeId</param>
        /// <param name="jobVariantId">The value of jobVariantId</param>
        /// <param name="jobTradeId">The value of jobTradeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultDescriptionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultDescription> _source,
            string dataAreaId, 
            string functionalLocationId, 
            string maintenanceAssetTypeId, 
            string productId, 
            string modelProductId, 
            string modelId, 
            string maintenanceAssetId, 
            string jobTypeId, 
            string jobVariantId, 
            string jobTradeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationId", functionalLocationId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "ProductId", productId }, 
                { "ModelProductId", modelProductId }, 
                { "ModelId", modelId }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "JobTypeId", jobTypeId }, 
                { "JobVariantId", jobVariantId }, 
                { "JobTradeId", jobTradeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceJobTypeDefaultDescriptionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailImages as global::Microsoft.Dynamics.DataEntities.RetailImagesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailImagesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailImages> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailImagesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailImages as global::Microsoft.Dynamics.DataEntities.RetailImagesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="pictureId">The value of pictureId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailImagesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailImages> _source,
            int pictureId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PictureId", pictureId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailImagesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SpecialCategoryMember as global::Microsoft.Dynamics.DataEntities.SpecialCategoryMemberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SpecialCategoryMemberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SpecialCategoryMember> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SpecialCategoryMemberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SpecialCategoryMember as global::Microsoft.Dynamics.DataEntities.SpecialCategoryMemberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="headerProductCategoryHierarchyName">The value of headerProductCategoryHierarchyName</param>
        /// <param name="headerProductCategoryName">The value of headerProductCategoryName</param>
        /// <param name="lineProductCategoryHierarchyName">The value of lineProductCategoryHierarchyName</param>
        /// <param name="lineProductCategoryName">The value of lineProductCategoryName</param>
        /// <param name="productNumber">The value of productNumber</param>
        /// <param name="productVariantNumber">The value of productVariantNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SpecialCategoryMemberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SpecialCategoryMember> _source,
            string headerProductCategoryHierarchyName, 
            string headerProductCategoryName, 
            string lineProductCategoryHierarchyName, 
            string lineProductCategoryName, 
            string productNumber, 
            string productVariantNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "HeaderProductCategoryHierarchyName", headerProductCategoryHierarchyName }, 
                { "HeaderProductCategoryName", headerProductCategoryName }, 
                { "LineProductCategoryHierarchyName", lineProductCategoryHierarchyName }, 
                { "LineProductCategoryName", lineProductCategoryName }, 
                { "ProductNumber", productNumber }, 
                { "ProductVariantNumber", productVariantNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SpecialCategoryMemberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestSource as global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestSourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestSourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestSource> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestSourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestSource as global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestSourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="engineeringChangeRequestNumber">The value of engineeringChangeRequestNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestSourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestSource> _source,
            string engineeringChangeRequestNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EngineeringChangeRequestNumber", engineeringChangeRequestNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestSourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenPurchaseTotalDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenPurchaseTotalDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenPurchaseTotalDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenPurchaseTotalDiscountJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OpenPurchaseTotalDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenPurchaseTotalDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenPurchaseTotalDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAgreementJournalNumber">The value of tradeAgreementJournalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenPurchaseTotalDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenPurchaseTotalDiscountJournalLine> _source,
            string dataAreaId, 
            string tradeAgreementJournalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAgreementJournalNumber", tradeAgreementJournalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OpenPurchaseTotalDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementFund as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementFundSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementFundSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementFund> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementFundSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementFund as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementFundSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="promotionFundId">The value of promotionFundId</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementFundSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementFund> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementId, 
            string customerAccountNumber, 
            string promotionFundId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "PromotionFundId", promotionFundId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementFundSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreementLineNote as global::Microsoft.Dynamics.DataEntities.SalesAgreementLineNoteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementLineNoteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreementLineNote> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementLineNoteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreementLineNote as global::Microsoft.Dynamics.DataEntities.SalesAgreementLineNoteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesAgreementId">The value of salesAgreementId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="documentAttachmentTypeCode">The value of documentAttachmentTypeCode</param>
        /// <param name="attachmentDescription">The value of attachmentDescription</param>
        /// <param name="attachedDateTime">The value of attachedDateTime</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementLineNoteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreementLineNote> _source,
            string dataAreaId, 
            string salesAgreementId, 
            decimal lineNumber, 
            string documentAttachmentTypeCode, 
            string attachmentDescription, 
            global::System.DateTimeOffset attachedDateTime)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesAgreementId", salesAgreementId }, 
                { "LineNumber", lineNumber }, 
                { "DocumentAttachmentTypeCode", documentAttachmentTypeCode }, 
                { "AttachmentDescription", attachmentDescription }, 
                { "AttachedDateTime", attachedDateTime }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementLineNoteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationRule as global::Microsoft.Dynamics.DataEntities.AllocationRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AllocationRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AllocationRule as global::Microsoft.Dynamics.DataEntities.AllocationRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="rule">The value of rule</param>
        public static global::Microsoft.Dynamics.DataEntities.AllocationRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AllocationRule> _source,
            string dataAreaId, 
            string rule)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Rule", rule }
            };
            return new global::Microsoft.Dynamics.DataEntities.AllocationRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLinesFulfillment as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLinesFulfillmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLinesFulfillmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLinesFulfillment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLinesFulfillmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLinesFulfillment as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLinesFulfillmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseAgreementId">The value of purchaseAgreementId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLinesFulfillmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLinesFulfillment> _source,
            string dataAreaId, 
            string purchaseAgreementId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseAgreementId", purchaseAgreementId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementLinesFulfillmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenSalesPostageDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenSalesPostageDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenSalesPostageDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenSalesPostageDiscountJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OpenSalesPostageDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenSalesPostageDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenSalesPostageDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenSalesPostageDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenSalesPostageDiscountJournalLine> _source,
            string dataAreaId, 
            string journalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OpenSalesPostageDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfile as global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfile as global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="postingProfileId">The value of postingProfileId</param>
        /// <param name="transactionType">The value of transactionType</param>
        /// <param name="valueModelId">The value of valueModelId</param>
        /// <param name="accountGroupings">The value of accountGroupings</param>
        /// <param name="accountRelation">The value of accountRelation</param>
        public static global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfile> _source,
            string dataAreaId, 
            string postingProfileId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.AssetTransType> transactionType, 
            string valueModelId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.TableGroupAll> accountGroupings, 
            string accountRelation)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PostingProfileId", postingProfileId }, 
                { "TransactionType", transactionType }, 
                { "ValueModelId", valueModelId }, 
                { "AccountGroupings", accountGroupings }, 
                { "AccountRelation", accountRelation }
            };
            return new global::Microsoft.Dynamics.DataEntities.FixedAssetPostingProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductEnvironmentalHealthAndSafetyCode as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductEnvironmentalHealthAndSafetyCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductEnvironmentalHealthAndSafetyCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductEnvironmentalHealthAndSafetyCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductEnvironmentalHealthAndSafetyCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductEnvironmentalHealthAndSafetyCode as global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductEnvironmentalHealthAndSafetyCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="engineeringChangeOrderNumber">The value of engineeringChangeOrderNumber</param>
        /// <param name="engineeringChangeOrderProductLineNumber">The value of engineeringChangeOrderProductLineNumber</param>
        /// <param name="environmentalHealthAndSafetyCode">The value of environmentalHealthAndSafetyCode</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductEnvironmentalHealthAndSafetyCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductEnvironmentalHealthAndSafetyCode> _source,
            string engineeringChangeOrderNumber, 
            decimal engineeringChangeOrderProductLineNumber, 
            string environmentalHealthAndSafetyCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EngineeringChangeOrderNumber", engineeringChangeOrderNumber }, 
                { "EngineeringChangeOrderProductLineNumber", engineeringChangeOrderProductLineNumber }, 
                { "EnvironmentalHealthAndSafetyCode", environmentalHealthAndSafetyCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderProductEnvironmentalHealthAndSafetyCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InvoiceSubLine as global::Microsoft.Dynamics.DataEntities.InvoiceSubLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InvoiceSubLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InvoiceSubLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InvoiceSubLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InvoiceSubLine as global::Microsoft.Dynamics.DataEntities.InvoiceSubLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productReceiptNumber">The value of productReceiptNumber</param>
        /// <param name="invoiceLineReference">The value of invoiceLineReference</param>
        /// <param name="purchaseOrder">The value of purchaseOrder</param>
        /// <param name="invoiceLineNumber">The value of invoiceLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.InvoiceSubLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InvoiceSubLine> _source,
            string dataAreaId, 
            string productReceiptNumber, 
            string invoiceLineReference, 
            string purchaseOrder, 
            decimal invoiceLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductReceiptNumber", productReceiptNumber }, 
                { "InvoiceLineReference", invoiceLineReference }, 
                { "PurchaseOrder", purchaseOrder }, 
                { "InvoiceLineNumber", invoiceLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.InvoiceSubLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitInquiry as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitInquirySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitInquirySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitInquiry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitInquirySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitInquiry as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitInquirySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitInquirySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitInquiry> _source,
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitInquirySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccrualPlan as global::Microsoft.Dynamics.DataEntities.AccrualPlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AccrualPlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccrualPlan> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AccrualPlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccrualPlan as global::Microsoft.Dynamics.DataEntities.AccrualPlanSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accrualId">The value of accrualId</param>
        public static global::Microsoft.Dynamics.DataEntities.AccrualPlanSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccrualPlan> _source,
            string accrualId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccrualId", accrualId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AccrualPlanSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitOrder as global::Microsoft.Dynamics.DataEntities.RetailKitOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitOrder> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailKitOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailKitOrder as global::Microsoft.Dynamics.DataEntities.RetailKitOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailKitOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailKitOrder> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailKitOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VATNumTable as global::Microsoft.Dynamics.DataEntities.VATNumTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VATNumTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VATNumTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VATNumTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VATNumTable as global::Microsoft.Dynamics.DataEntities.VATNumTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="vATNum">The value of vATNum</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        public static global::Microsoft.Dynamics.DataEntities.VATNumTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VATNumTable> _source,
            string dataAreaId, 
            string vATNum, 
            string countryRegionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VATNum", vATNum }, 
                { "CountryRegionId", countryRegionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.VATNumTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimensionAttributeTranslation as global::Microsoft.Dynamics.DataEntities.DimensionAttributeTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DimensionAttributeTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionAttributeTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DimensionAttributeTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimensionAttributeTranslation as global::Microsoft.Dynamics.DataEntities.DimensionAttributeTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="financialDimension">The value of financialDimension</param>
        /// <param name="languageCode">The value of languageCode</param>
        public static global::Microsoft.Dynamics.DataEntities.DimensionAttributeTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionAttributeTranslation> _source,
            string financialDimension, 
            string languageCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FinancialDimension", financialDimension }, 
                { "LanguageCode", languageCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.DimensionAttributeTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ValidationProject as global::Microsoft.Dynamics.DataEntities.ValidationProjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ValidationProjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValidationProject> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ValidationProjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ValidationProject as global::Microsoft.Dynamics.DataEntities.ValidationProjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        /// <param name="legalEntity">The value of legalEntity</param>
        public static global::Microsoft.Dynamics.DataEntities.ValidationProjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValidationProject> _source,
            string name, 
            string legalEntity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }, 
                { "LegalEntity", legalEntity }
            };
            return new global::Microsoft.Dynamics.DataEntities.ValidationProjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RouteHeader as global::Microsoft.Dynamics.DataEntities.RouteHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RouteHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RouteHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RouteHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RouteHeader as global::Microsoft.Dynamics.DataEntities.RouteHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="routeId">The value of routeId</param>
        public static global::Microsoft.Dynamics.DataEntities.RouteHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RouteHeader> _source,
            string dataAreaId, 
            string routeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RouteId", routeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RouteHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdjustmentParameters as global::Microsoft.Dynamics.DataEntities.AdjustmentParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AdjustmentParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdjustmentParameters> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AdjustmentParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdjustmentParameters as global::Microsoft.Dynamics.DataEntities.AdjustmentParametersSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="ledgerName">The value of ledgerName</param>
        public static global::Microsoft.Dynamics.DataEntities.AdjustmentParametersSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdjustmentParameters> _source,
            string ledgerName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LedgerName", ledgerName }
            };
            return new global::Microsoft.Dynamics.DataEntities.AdjustmentParametersSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionV2 as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionV2 as global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="royaltyAgreementLineId">The value of royaltyAgreementLineId</param>
        /// <param name="royaltyAgreementId">The value of royaltyAgreementId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="salesUnitSymbol">The value of salesUnitSymbol</param>
        /// <param name="qualifyingSiteId">The value of qualifyingSiteId</param>
        /// <param name="qualifyingWarehouseId">The value of qualifyingWarehouseId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        public static global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionV2> _source,
            string dataAreaId, 
            string royaltyAgreementLineId, 
            string royaltyAgreementId, 
            string itemNumber, 
            string salesUnitSymbol, 
            string qualifyingSiteId, 
            string qualifyingWarehouseId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RoyaltyAgreementLineId", royaltyAgreementLineId }, 
                { "RoyaltyAgreementId", royaltyAgreementId }, 
                { "ItemNumber", itemNumber }, 
                { "SalesUnitSymbol", salesUnitSymbol }, 
                { "QualifyingSiteId", qualifyingSiteId }, 
                { "QualifyingWarehouseId", qualifyingWarehouseId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RoyaltyAgreementLineProductSelectionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateProcess as global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateProcessSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateProcessSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateProcess> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateProcessSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateProcess as global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateProcessSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productLifecycleStateId">The value of productLifecycleStateId</param>
        /// <param name="processName">The value of processName</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateProcessSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateProcess> _source,
            string productLifecycleStateId, 
            string processName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductLifecycleStateId", productLifecycleStateId }, 
                { "ProcessName", processName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductLifecycleStateProcessSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerAttachment as global::Microsoft.Dynamics.DataEntities.CustomerAttachmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerAttachmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerAttachment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerAttachmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerAttachment as global::Microsoft.Dynamics.DataEntities.CustomerAttachmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="documentId">The value of documentId</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerAttachmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerAttachment> _source,
            string dataAreaId, 
            global::System.Guid documentId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DocumentId", documentId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerAttachmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetBillOfMaterial as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetBillOfMaterialSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetBillOfMaterialSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetBillOfMaterial> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetBillOfMaterialSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetBillOfMaterial as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetBillOfMaterialSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetBillOfMaterialSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetBillOfMaterial> _source,
            string dataAreaId, 
            string maintenanceAssetId, 
            long lineNumber, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "LineNumber", lineNumber }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetBillOfMaterialSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TransferOrderLine as global::Microsoft.Dynamics.DataEntities.TransferOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TransferOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferOrderLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TransferOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TransferOrderLine as global::Microsoft.Dynamics.DataEntities.TransferOrderLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="transferOrderNumber">The value of transferOrderNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.TransferOrderLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferOrderLine> _source,
            string dataAreaId, 
            string transferOrderNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TransferOrderNumber", transferOrderNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.TransferOrderLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TeamMember as global::Microsoft.Dynamics.DataEntities.TeamMemberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TeamMemberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TeamMember> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TeamMemberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TeamMember as global::Microsoft.Dynamics.DataEntities.TeamMemberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="relationshipTypeId">The value of relationshipTypeId</param>
        /// <param name="teamMemberPartyNumber">The value of teamMemberPartyNumber</param>
        /// <param name="teamPartyNumber">The value of teamPartyNumber</param>
        /// <param name="validTo">The value of validTo</param>
        /// <param name="validFrom">The value of validFrom</param>
        public static global::Microsoft.Dynamics.DataEntities.TeamMemberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TeamMember> _source,
            string relationshipTypeId, 
            string teamMemberPartyNumber, 
            string teamPartyNumber, 
            global::System.DateTimeOffset validTo, 
            global::System.DateTimeOffset validFrom)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RelationshipTypeId", relationshipTypeId }, 
                { "TeamMemberPartyNumber", teamMemberPartyNumber }, 
                { "TeamPartyNumber", teamPartyNumber }, 
                { "ValidTo", validTo }, 
                { "ValidFrom", validFrom }
            };
            return new global::Microsoft.Dynamics.DataEntities.TeamMemberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailHardwareProfile as global::Microsoft.Dynamics.DataEntities.RetailHardwareProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailHardwareProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailHardwareProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailHardwareProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailHardwareProfile as global::Microsoft.Dynamics.DataEntities.RetailHardwareProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="profileId">The value of profileId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailHardwareProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailHardwareProfile> _source,
            string profileId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProfileId", profileId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailHardwareProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EarningStatementLineInquiry as global::Microsoft.Dynamics.DataEntities.EarningStatementLineInquirySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EarningStatementLineInquirySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EarningStatementLineInquiry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EarningStatementLineInquirySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EarningStatementLineInquiry as global::Microsoft.Dynamics.DataEntities.EarningStatementLineInquirySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="documentNumber">The value of documentNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EarningStatementLineInquirySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EarningStatementLineInquiry> _source,
            string dataAreaId, 
            string documentNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DocumentNumber", documentNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EarningStatementLineInquirySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreement as global::Microsoft.Dynamics.DataEntities.SalesAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreement as global::Microsoft.Dynamics.DataEntities.SalesAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesAgreementId">The value of salesAgreementId</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreement> _source,
            string dataAreaId, 
            string salesAgreementId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesAgreementId", salesAgreementId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCounter as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCounterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCounterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCounter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCounterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCounter as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCounterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="counterId">The value of counterId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCounterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCounter> _source,
            string dataAreaId, 
            string counterId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CounterId", counterId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetCounterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormat as global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormatSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormatSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormat> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormatSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormat as global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormatSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dimensionFormatName">The value of dimensionFormatName</param>
        /// <param name="dimensionFormatType">The value of dimensionFormatType</param>
        public static global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormatSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormat> _source,
            string dimensionFormatName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DimensionHierarchyType> dimensionFormatType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DimensionFormatName", dimensionFormatName }, 
                { "DimensionFormatType", dimensionFormatType }
            };
            return new global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormatSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentLedgerJournal as global::Microsoft.Dynamics.DataEntities.SADDocumentLedgerJournalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentLedgerJournalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentLedgerJournal> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentLedgerJournalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SADDocumentLedgerJournal as global::Microsoft.Dynamics.DataEntities.SADDocumentLedgerJournalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="sADNumber">The value of sADNumber</param>
        /// <param name="sADDate">The value of sADDate</param>
        public static global::Microsoft.Dynamics.DataEntities.SADDocumentLedgerJournalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SADDocumentLedgerJournal> _source,
            string dataAreaId, 
            string sADNumber, 
            global::System.DateTimeOffset sADDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SADNumber", sADNumber }, 
                { "SADDate", sADDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.SADDocumentLedgerJournalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeLimit as global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeLimitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeLimitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeLimit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeLimitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeLimit as global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeLimitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="withholdingTaxCodeId">The value of withholdingTaxCodeId</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeLimitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeLimit> _source,
            string dataAreaId, 
            string withholdingTaxCodeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WithholdingTaxCodeId", withholdingTaxCodeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WithholdingTaxCodeLimitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JournalTable as global::Microsoft.Dynamics.DataEntities.JournalTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JournalTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JournalTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JournalTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JournalTable as global::Microsoft.Dynamics.DataEntities.JournalTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.JournalTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JournalTable> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.JournalTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EducationDisciplineCategory as global::Microsoft.Dynamics.DataEntities.EducationDisciplineCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EducationDisciplineCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EducationDisciplineCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EducationDisciplineCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EducationDisciplineCategory as global::Microsoft.Dynamics.DataEntities.EducationDisciplineCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="educationDisciplineCategory">The value of educationDisciplineCategory</param>
        public static global::Microsoft.Dynamics.DataEntities.EducationDisciplineCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EducationDisciplineCategory> _source,
            string educationDisciplineCategory)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EducationDisciplineCategory", educationDisciplineCategory }
            };
            return new global::Microsoft.Dynamics.DataEntities.EducationDisciplineCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenSalesTotalDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenSalesTotalDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenSalesTotalDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenSalesTotalDiscountJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OpenSalesTotalDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenSalesTotalDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenSalesTotalDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAgreementJournalNumber">The value of tradeAgreementJournalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenSalesTotalDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenSalesTotalDiscountJournalLine> _source,
            string dataAreaId, 
            string tradeAgreementJournalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAgreementJournalNumber", tradeAgreementJournalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OpenSalesTotalDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSpecification as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSpecificationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSpecificationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSpecification> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSpecificationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSpecification as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSpecificationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        /// <param name="attributeTypeId">The value of attributeTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSpecificationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSpecification> _source,
            string dataAreaId, 
            string functionalLocationId, 
            string attributeTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationId", functionalLocationId }, 
                { "AttributeTypeId", attributeTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationAttributeSpecificationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OperationsResource as global::Microsoft.Dynamics.DataEntities.OperationsResourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OperationsResourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OperationsResource> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OperationsResourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OperationsResource as global::Microsoft.Dynamics.DataEntities.OperationsResourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="resourceId">The value of resourceId</param>
        public static global::Microsoft.Dynamics.DataEntities.OperationsResourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OperationsResource> _source,
            string dataAreaId, 
            string resourceId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ResourceId", resourceId }
            };
            return new global::Microsoft.Dynamics.DataEntities.OperationsResourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleListMember as global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleListMemberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleListMemberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleListMember> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleListMemberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleListMember as global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleListMemberSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="versionNumberingRuleName">The value of versionNumberingRuleName</param>
        /// <param name="productVersionName">The value of productVersionName</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleListMemberSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleListMember> _source,
            string versionNumberingRuleName, 
            string productVersionName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "VersionNumberingRuleName", versionNumberingRuleName }, 
                { "ProductVersionName", productVersionName }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleListMemberSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTypeCertificateProfile as global::Microsoft.Dynamics.DataEntities.CourseTypeCertificateProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeCertificateProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTypeCertificateProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeCertificateProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseTypeCertificateProfile as global::Microsoft.Dynamics.DataEntities.CourseTypeCertificateProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="courseTypeId">The value of courseTypeId</param>
        /// <param name="certificateTypeId">The value of certificateTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseTypeCertificateProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseTypeCertificateProfile> _source,
            string courseTypeId, 
            string certificateTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CourseTypeId", courseTypeId }, 
                { "CertificateTypeId", certificateTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseTypeCertificateProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseLocation as global::Microsoft.Dynamics.DataEntities.CourseLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseLocation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CourseLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CourseLocation as global::Microsoft.Dynamics.DataEntities.CourseLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="courseLocation">The value of courseLocation</param>
        public static global::Microsoft.Dynamics.DataEntities.CourseLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CourseLocation> _source,
            string dataAreaId, 
            string courseLocation)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CourseLocation", courseLocation }
            };
            return new global::Microsoft.Dynamics.DataEntities.CourseLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmation as global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmation as global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesAgreementId">The value of salesAgreementId</param>
        /// <param name="confirmationNumber">The value of confirmationNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmation> _source,
            string dataAreaId, 
            string salesAgreementId, 
            string confirmationNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesAgreementId", salesAgreementId }, 
                { "ConfirmationNumber", confirmationNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesAgreementConfirmationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemPriceToleranceGroup as global::Microsoft.Dynamics.DataEntities.ItemPriceToleranceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemPriceToleranceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemPriceToleranceGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ItemPriceToleranceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemPriceToleranceGroup as global::Microsoft.Dynamics.DataEntities.ItemPriceToleranceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemPriceToleranceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemPriceToleranceGroup> _source,
            string dataAreaId, 
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ItemPriceToleranceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FormulaVersionV2 as global::Microsoft.Dynamics.DataEntities.FormulaVersionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FormulaVersionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FormulaVersionV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FormulaVersionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FormulaVersionV2 as global::Microsoft.Dynamics.DataEntities.FormulaVersionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="manufacturedItemNumber">The value of manufacturedItemNumber</param>
        /// <param name="formulaId">The value of formulaId</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="isActive">The value of isActive</param>
        /// <param name="validFromDate">The value of validFromDate</param>
        /// <param name="fromQuantity">The value of fromQuantity</param>
        public static global::Microsoft.Dynamics.DataEntities.FormulaVersionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FormulaVersionV2> _source,
            string dataAreaId, 
            string manufacturedItemNumber, 
            string formulaId, 
            string productionSiteId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.NoYes> isActive, 
            global::System.DateTimeOffset validFromDate, 
            decimal fromQuantity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ManufacturedItemNumber", manufacturedItemNumber }, 
                { "FormulaId", formulaId }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "IsActive", isActive }, 
                { "ValidFromDate", validFromDate }, 
                { "FromQuantity", fromQuantity }
            };
            return new global::Microsoft.Dynamics.DataEntities.FormulaVersionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryHeader as global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryHeader as global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="entryNumber">The value of entryNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryHeader> _source,
            string dataAreaId, 
            string legalEntityId, 
            string entryNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "EntryNumber", entryNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EarningCodeGroup as global::Microsoft.Dynamics.DataEntities.EarningCodeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EarningCodeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EarningCodeGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EarningCodeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EarningCodeGroup as global::Microsoft.Dynamics.DataEntities.EarningCodeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="earningCodeGroup">The value of earningCodeGroup</param>
        public static global::Microsoft.Dynamics.DataEntities.EarningCodeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EarningCodeGroup> _source,
            string earningCodeGroup)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EarningCodeGroup", earningCodeGroup }
            };
            return new global::Microsoft.Dynamics.DataEntities.EarningCodeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailServiceCategory as global::Microsoft.Dynamics.DataEntities.RetailServiceCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailServiceCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailServiceCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailServiceCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailServiceCategory as global::Microsoft.Dynamics.DataEntities.RetailServiceCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="serviceCategory">The value of serviceCategory</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailServiceCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailServiceCategory> _source,
            string dataAreaId, 
            string serviceCategory)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ServiceCategory", serviceCategory }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailServiceCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsHeader as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsHeader as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bOMId">The value of bOMId</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsHeader> _source,
            string dataAreaId, 
            string bOMId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BOMId", bOMId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimensionCombination as global::Microsoft.Dynamics.DataEntities.DimensionCombinationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DimensionCombinationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionCombination> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DimensionCombinationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimensionCombination as global::Microsoft.Dynamics.DataEntities.DimensionCombinationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="recordId">The value of recordId</param>
        public static global::Microsoft.Dynamics.DataEntities.DimensionCombinationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionCombination> _source,
            long recordId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RecordId", recordId }
            };
            return new global::Microsoft.Dynamics.DataEntities.DimensionCombinationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Category as global::Microsoft.Dynamics.DataEntities.CategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Category> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Category as global::Microsoft.Dynamics.DataEntities.CategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="categoryId">The value of categoryId</param>
        public static global::Microsoft.Dynamics.DataEntities.CategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Category> _source,
            string dataAreaId, 
            string categoryId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CategoryId", categoryId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterStyle as global::Microsoft.Dynamics.DataEntities.ProductMasterStyleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterStyleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterStyle> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterStyleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductMasterStyle as global::Microsoft.Dynamics.DataEntities.ProductMasterStyleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductMasterStyleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductMasterStyle> _source,
            string productMasterNumber, 
            string productStyleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductStyleId", productStyleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductMasterStyleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineTranslation as global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineTranslation as global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productColorGroupId">The value of productColorGroupId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineTranslation> _source,
            string productColorGroupId, 
            string productColorId, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductColorGroupId", productColorGroupId }, 
                { "ProductColorId", productColorId }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxCodeValueV2 as global::Microsoft.Dynamics.DataEntities.TaxCodeValueV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxCodeValueV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxCodeValueV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxCodeValueV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxCodeValueV2 as global::Microsoft.Dynamics.DataEntities.TaxCodeValueV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxCodeId">The value of taxCodeId</param>
        /// <param name="fromDate">The value of fromDate</param>
        /// <param name="toDate">The value of toDate</param>
        /// <param name="minimumLimit">The value of minimumLimit</param>
        /// <param name="maximumLimit">The value of maximumLimit</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxCodeValueV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxCodeValueV2> _source,
            string dataAreaId, 
            string taxCodeId, 
            global::System.DateTimeOffset fromDate, 
            global::System.DateTimeOffset toDate, 
            decimal minimumLimit, 
            decimal maximumLimit)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxCodeId", taxCodeId }, 
                { "FromDate", fromDate }, 
                { "ToDate", toDate }, 
                { "MinimumLimit", minimumLimit }, 
                { "MaximumLimit", maximumLimit }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxCodeValueV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RDeferralsBook as global::Microsoft.Dynamics.DataEntities.RDeferralsBookSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RDeferralsBookSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RDeferralsBook> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RDeferralsBookSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RDeferralsBook as global::Microsoft.Dynamics.DataEntities.RDeferralsBookSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="deferralsId">The value of deferralsId</param>
        /// <param name="modelNumber">The value of modelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RDeferralsBookSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RDeferralsBook> _source,
            string dataAreaId, 
            string deferralsId, 
            string modelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DeferralsId", deferralsId }, 
                { "ModelNumber", modelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RDeferralsBookSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SystemNotificationUser as global::Microsoft.Dynamics.DataEntities.SystemNotificationUserSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SystemNotificationUserSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SystemNotificationUser> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SystemNotificationUserSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SystemNotificationUser as global::Microsoft.Dynamics.DataEntities.SystemNotificationUserSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="userId">The value of userId</param>
        public static global::Microsoft.Dynamics.DataEntities.SystemNotificationUserSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SystemNotificationUser> _source,
            string userId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UserId", userId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SystemNotificationUserSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankParameter as global::Microsoft.Dynamics.DataEntities.BankParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BankParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankParameter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BankParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankParameter as global::Microsoft.Dynamics.DataEntities.BankParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        public static global::Microsoft.Dynamics.DataEntities.BankParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankParameter> _source,
            string dataAreaId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BankParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductStyleGroup as global::Microsoft.Dynamics.DataEntities.ProductStyleGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductStyleGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductStyleGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductStyleGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductStyleGroup as global::Microsoft.Dynamics.DataEntities.ProductStyleGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupId">The value of groupId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductStyleGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductStyleGroup> _source,
            string groupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupId", groupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductStyleGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FBGeneralAdjustmentCodeLedger as global::Microsoft.Dynamics.DataEntities.FBGeneralAdjustmentCodeLedgerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FBGeneralAdjustmentCodeLedgerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FBGeneralAdjustmentCodeLedger> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FBGeneralAdjustmentCodeLedgerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FBGeneralAdjustmentCodeLedger as global::Microsoft.Dynamics.DataEntities.FBGeneralAdjustmentCodeLedgerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="fBGeneralAdjustmentCodeIdentification">The value of fBGeneralAdjustmentCodeIdentification</param>
        /// <param name="company">The value of company</param>
        public static global::Microsoft.Dynamics.DataEntities.FBGeneralAdjustmentCodeLedgerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FBGeneralAdjustmentCodeLedger> _source,
            string fBGeneralAdjustmentCodeIdentification, 
            string company)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FBGeneralAdjustmentCodeIdentification", fBGeneralAdjustmentCodeIdentification }, 
                { "Company", company }
            };
            return new global::Microsoft.Dynamics.DataEntities.FBGeneralAdjustmentCodeLedgerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesBookVATProcessParameter as global::Microsoft.Dynamics.DataEntities.SalesBookVATProcessParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesBookVATProcessParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesBookVATProcessParameter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesBookVATProcessParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesBookVATProcessParameter as global::Microsoft.Dynamics.DataEntities.SalesBookVATProcessParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="vATOperationCode">The value of vATOperationCode</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesBookVATProcessParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesBookVATProcessParameter> _source,
            string dataAreaId, 
            string vATOperationCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VATOperationCode", vATOperationCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesBookVATProcessParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressState as global::Microsoft.Dynamics.DataEntities.AddressStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressState> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AddressStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressState as global::Microsoft.Dynamics.DataEntities.AddressStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        /// <param name="state">The value of state</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressState> _source,
            string countryRegionId, 
            string state)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CountryRegionId", countryRegionId }, 
                { "State", state }
            };
            return new global::Microsoft.Dynamics.DataEntities.AddressStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProduct as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProduct as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="promotionalProductUnitSymbol">The value of promotionalProductUnitSymbol</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProduct> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementId, 
            string customerAccountNumber, 
            string itemNumber, 
            string promotionalProductUnitSymbol, 
            string productColorId, 
            string productStyleId, 
            string productSizeId, 
            string productConfigurationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "ItemNumber", itemNumber }, 
                { "PromotionalProductUnitSymbol", promotionalProductUnitSymbol }, 
                { "ProductColorId", productColorId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductConfigurationId", productConfigurationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonLaborUnion as global::Microsoft.Dynamics.DataEntities.PersonLaborUnionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonLaborUnionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonLaborUnion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonLaborUnionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonLaborUnion as global::Microsoft.Dynamics.DataEntities.PersonLaborUnionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="unionId">The value of unionId</param>
        /// <param name="startDate">The value of startDate</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonLaborUnionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonLaborUnion> _source,
            string partyNumber, 
            string unionId, 
            global::System.DateTimeOffset startDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "UnionId", unionId }, 
                { "StartDate", startDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonLaborUnionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryLine as global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryLine as global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="entryNumber">The value of entryNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryLine> _source,
            string dataAreaId, 
            string legalEntityId, 
            string entryNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "EntryNumber", entryNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetRegisterEntryLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccountStructure as global::Microsoft.Dynamics.DataEntities.AccountStructureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AccountStructureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccountStructure> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AccountStructureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AccountStructure as global::Microsoft.Dynamics.DataEntities.AccountStructureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accountStructureName">The value of accountStructureName</param>
        /// <param name="status">The value of status</param>
        public static global::Microsoft.Dynamics.DataEntities.AccountStructureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AccountStructure> _source,
            string accountStructureName, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DimensionHierarchyConstraintStatus> status)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccountStructureName", accountStructureName }, 
                { "Status", status }
            };
            return new global::Microsoft.Dynamics.DataEntities.AccountStructureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LanguageCode as global::Microsoft.Dynamics.DataEntities.LanguageCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LanguageCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LanguageCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LanguageCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LanguageCode as global::Microsoft.Dynamics.DataEntities.LanguageCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="languageCodeId">The value of languageCodeId</param>
        public static global::Microsoft.Dynamics.DataEntities.LanguageCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LanguageCode> _source,
            string languageCodeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LanguageCodeId", languageCodeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.LanguageCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestriction as global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestriction> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestriction as global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="voucherType">The value of voucherType</param>
        /// <param name="restrictionType">The value of restrictionType</param>
        /// <param name="ledgerDimensionDisplayValue">The value of ledgerDimensionDisplayValue</param>
        /// <param name="accountType">The value of accountType</param>
        public static global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestriction> _source,
            string dataAreaId, 
            string voucherType, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LedgerVoucherRestrictionType_CN> restrictionType, 
            string ledgerDimensionDisplayValue, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LedgerJournalACType> accountType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "VoucherType", voucherType }, 
                { "RestrictionType", restrictionType }, 
                { "LedgerDimensionDisplayValue", ledgerDimensionDisplayValue }, 
                { "AccountType", accountType }
            };
            return new global::Microsoft.Dynamics.DataEntities.VoucherTypeAccountRestrictionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjurySeverityLevel as global::Microsoft.Dynamics.DataEntities.InjurySeverityLevelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjurySeverityLevelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjurySeverityLevel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjurySeverityLevelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjurySeverityLevel as global::Microsoft.Dynamics.DataEntities.InjurySeverityLevelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="severityLevelId">The value of severityLevelId</param>
        public static global::Microsoft.Dynamics.DataEntities.InjurySeverityLevelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjurySeverityLevel> _source,
            string severityLevelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SeverityLevelId", severityLevelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjurySeverityLevelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementHeader as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementHeader as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="agreementId">The value of agreementId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementHeader> _source,
            string dataAreaId, 
            string agreementId, 
            string customerAccountNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AgreementId", agreementId }, 
                { "CustomerAccountNumber", customerAccountNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableChargeLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableChargeLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableChargeLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableChargeLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableChargeLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableChargeLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableChargeLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operatingUnitNumber">The value of operatingUnitNumber</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="registerNumber">The value of registerNumber</param>
        /// <param name="transactionId">The value of transactionId</param>
        /// <param name="salesLineNumber">The value of salesLineNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableChargeLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableChargeLine> _source,
            string dataAreaId, 
            string operatingUnitNumber, 
            string storeNumber, 
            string registerNumber, 
            string transactionId, 
            decimal salesLineNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperatingUnitNumber", operatingUnitNumber }, 
                { "StoreNumber", storeNumber }, 
                { "RegisterNumber", registerNumber }, 
                { "TransactionId", transactionId }, 
                { "SalesLineNumber", salesLineNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableChargeLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenSalesLineDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenSalesLineDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenSalesLineDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenSalesLineDiscountJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OpenSalesLineDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenSalesLineDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenSalesLineDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAgreementJournalNumber">The value of tradeAgreementJournalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenSalesLineDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenSalesLineDiscountJournalLine> _source,
            string dataAreaId, 
            string tradeAgreementJournalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAgreementJournalNumber", tradeAgreementJournalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OpenSalesLineDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceChecklistTemplate as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceChecklistTemplateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceChecklistTemplateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceChecklistTemplate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceChecklistTemplateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceChecklistTemplate as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceChecklistTemplateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="templateID">The value of templateID</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceChecklistTemplateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceChecklistTemplate> _source,
            string dataAreaId, 
            string templateID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TemplateID", templateID }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceChecklistTemplateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue2 as global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue2 as global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="internalOrganizationPartyNumber">The value of internalOrganizationPartyNumber</param>
        /// <param name="displayProductNumber">The value of displayProductNumber</param>
        /// <param name="attributeTypeName">The value of attributeTypeName</param>
        /// <param name="attributeName">The value of attributeName</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue2> _source,
            string internalOrganizationPartyNumber, 
            string displayProductNumber, 
            string attributeTypeName, 
            string attributeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "InternalOrganizationPartyNumber", internalOrganizationPartyNumber }, 
                { "DisplayProductNumber", displayProductNumber }, 
                { "AttributeTypeName", attributeTypeName }, 
                { "AttributeName", attributeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductAttributeValue2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxGroupData as global::Microsoft.Dynamics.DataEntities.TaxGroupDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxGroupDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxGroupData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TaxGroupDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TaxGroupData as global::Microsoft.Dynamics.DataEntities.TaxGroupDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxGroupId">The value of taxGroupId</param>
        /// <param name="taxCodeId">The value of taxCodeId</param>
        public static global::Microsoft.Dynamics.DataEntities.TaxGroupDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TaxGroupData> _source,
            string dataAreaId, 
            string taxGroupId, 
            string taxCodeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxGroupId", taxGroupId }, 
                { "TaxCodeId", taxCodeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TaxGroupDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailDeliveryModeProductLine as global::Microsoft.Dynamics.DataEntities.RetailDeliveryModeProductLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailDeliveryModeProductLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailDeliveryModeProductLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailDeliveryModeProductLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailDeliveryModeProductLine as global::Microsoft.Dynamics.DataEntities.RetailDeliveryModeProductLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="deliveryMode">The value of deliveryMode</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailDeliveryModeProductLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailDeliveryModeProductLine> _source,
            string dataAreaId, 
            string deliveryMode, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "DeliveryMode", deliveryMode }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailDeliveryModeProductLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonSkillMapping as global::Microsoft.Dynamics.DataEntities.PersonSkillMappingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonSkillMappingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonSkillMapping> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonSkillMappingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonSkillMapping as global::Microsoft.Dynamics.DataEntities.PersonSkillMappingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonSkillMappingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonSkillMapping> _source,
            string partyNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonSkillMappingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationRound as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationRoundSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationRoundSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationRound> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationRoundSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationRound as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationRoundSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="productId">The value of productId</param>
        /// <param name="modelProductId">The value of modelProductId</param>
        /// <param name="modelId">The value of modelId</param>
        /// <param name="roundId">The value of roundId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationRoundSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationRound> _source,
            string dataAreaId, 
            string functionalLocationId, 
            string maintenanceAssetTypeId, 
            string productId, 
            string modelProductId, 
            string modelId, 
            string roundId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FunctionalLocationId", functionalLocationId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "ProductId", productId }, 
                { "ModelProductId", modelProductId }, 
                { "ModelId", modelId }, 
                { "RoundId", roundId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFunctionalLocationRoundSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AttributeMetadata as global::Microsoft.Dynamics.DataEntities.AttributeMetadataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AttributeMetadataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AttributeMetadata> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AttributeMetadataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AttributeMetadata as global::Microsoft.Dynamics.DataEntities.AttributeMetadataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="attributeName">The value of attributeName</param>
        /// <param name="typeName">The value of typeName</param>
        public static global::Microsoft.Dynamics.DataEntities.AttributeMetadataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AttributeMetadata> _source,
            string attributeName, 
            string typeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AttributeName", attributeName }, 
                { "TypeName", typeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.AttributeMetadataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlRuleCriterion as global::Microsoft.Dynamics.DataEntities.BudgetControlRuleCriterionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlRuleCriterionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlRuleCriterion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlRuleCriterionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlRuleCriterion as global::Microsoft.Dynamics.DataEntities.BudgetControlRuleCriterionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="name">The value of name</param>
        /// <param name="dimensionAttributeId">The value of dimensionAttributeId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlRuleCriterionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlRuleCriterion> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            string name, 
            string dimensionAttributeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "Name", name }, 
                { "DimensionAttributeId", dimensionAttributeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlRuleCriterionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalOrganization as global::Microsoft.Dynamics.DataEntities.FiscalOrganizationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalOrganizationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalOrganization> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FiscalOrganizationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalOrganization as global::Microsoft.Dynamics.DataEntities.FiscalOrganizationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="rootFiscalEstablishmentDataArea">The value of rootFiscalEstablishmentDataArea</param>
        /// <param name="rootFiscalEstablishment">The value of rootFiscalEstablishment</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalOrganizationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalOrganization> _source,
            string rootFiscalEstablishmentDataArea, 
            string rootFiscalEstablishment)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RootFiscalEstablishmentDataArea", rootFiscalEstablishmentDataArea }, 
                { "RootFiscalEstablishment", rootFiscalEstablishment }
            };
            return new global::Microsoft.Dynamics.DataEntities.FiscalOrganizationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductAllocationLine as global::Microsoft.Dynamics.DataEntities.ProductAllocationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductAllocationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductAllocationLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductAllocationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductAllocationLine as global::Microsoft.Dynamics.DataEntities.ProductAllocationLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productAllocationKeyId">The value of productAllocationKeyId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductAllocationLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductAllocationLine> _source,
            string dataAreaId, 
            string productAllocationKeyId, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductAllocationKeyId", productAllocationKeyId }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductAllocationLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionHierarchy as global::Microsoft.Dynamics.DataEntities.PositionHierarchySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionHierarchySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionHierarchy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionHierarchySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionHierarchy as global::Microsoft.Dynamics.DataEntities.PositionHierarchySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="positionId">The value of positionId</param>
        /// <param name="hierarchyTypeName">The value of hierarchyTypeName</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionHierarchySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionHierarchy> _source,
            string positionId, 
            string hierarchyTypeName, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PositionId", positionId }, 
                { "HierarchyTypeName", hierarchyTypeName }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionHierarchySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencyPayPeriod as global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencyPayPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencyPayPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencyPayPeriod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencyPayPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencyPayPeriod as global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencyPayPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="calculationFrequencyId">The value of calculationFrequencyId</param>
        /// <param name="payCycleId">The value of payCycleId</param>
        /// <param name="periodEndDate">The value of periodEndDate</param>
        public static global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencyPayPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencyPayPeriod> _source,
            string calculationFrequencyId, 
            string payCycleId, 
            global::System.DateTimeOffset periodEndDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CalculationFrequencyId", calculationFrequencyId }, 
                { "PayCycleId", payCycleId }, 
                { "PeriodEndDate", periodEndDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayrollCalculationFrequencyPayPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemShipTxtTranslation as global::Microsoft.Dynamics.DataEntities.ItemShipTxtTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemShipTxtTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemShipTxtTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ItemShipTxtTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ItemShipTxtTranslation as global::Microsoft.Dynamics.DataEntities.ItemShipTxtTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="languageId">The value of languageId</param>
        /// <param name="material">The value of material</param>
        public static global::Microsoft.Dynamics.DataEntities.ItemShipTxtTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ItemShipTxtTranslation> _source,
            string dataAreaId, 
            string languageId, 
            long material)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LanguageId", languageId }, 
                { "Material", material }
            };
            return new global::Microsoft.Dynamics.DataEntities.ItemShipTxtTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseJournalLine as global::Microsoft.Dynamics.DataEntities.ExpenseJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExpenseJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseJournalLine as global::Microsoft.Dynamics.DataEntities.ExpenseJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseJournalLine> _source,
            string dataAreaId, 
            string journalBatchNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExpenseJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ChgSentProductReleaseLine as global::Microsoft.Dynamics.DataEntities.ChgSentProductReleaseLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ChgSentProductReleaseLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ChgSentProductReleaseLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ChgSentProductReleaseLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ChgSentProductReleaseLine as global::Microsoft.Dynamics.DataEntities.ChgSentProductReleaseLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="headerProductNumber">The value of headerProductNumber</param>
        /// <param name="headerProductVersionId">The value of headerProductVersionId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="releasingLegalEntityId">The value of releasingLegalEntityId</param>
        /// <param name="releaseStatus">The value of releaseStatus</param>
        public static global::Microsoft.Dynamics.DataEntities.ChgSentProductReleaseLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ChgSentProductReleaseLine> _source,
            string dataAreaId, 
            string headerProductNumber, 
            string headerProductVersionId, 
            decimal lineNumber, 
            string releasingLegalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.EngChgReleaseStatus> releaseStatus)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "HeaderProductNumber", headerProductNumber }, 
                { "HeaderProductVersionId", headerProductVersionId }, 
                { "LineNumber", lineNumber }, 
                { "ReleasingLegalEntityId", releasingLegalEntityId }, 
                { "ReleaseStatus", releaseStatus }
            };
            return new global::Microsoft.Dynamics.DataEntities.ChgSentProductReleaseLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreement as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseAgreement as global::Microsoft.Dynamics.DataEntities.PurchaseAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseAgreementId">The value of purchaseAgreementId</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseAgreement> _source,
            string dataAreaId, 
            string purchaseAgreementId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseAgreementId", purchaseAgreementId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailProductHierarchyCategory as global::Microsoft.Dynamics.DataEntities.RetailProductHierarchyCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailProductHierarchyCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailProductHierarchyCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailProductHierarchyCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailProductHierarchyCategory as global::Microsoft.Dynamics.DataEntities.RetailProductHierarchyCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="categoryName">The value of categoryName</param>
        /// <param name="categoryHierarchyName">The value of categoryHierarchyName</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailProductHierarchyCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailProductHierarchyCategory> _source,
            string categoryName, 
            string categoryHierarchyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CategoryName", categoryName }, 
                { "CategoryHierarchyName", categoryHierarchyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailProductHierarchyCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseRate as global::Microsoft.Dynamics.DataEntities.ExpenseRateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseRateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseRate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExpenseRateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseRate as global::Microsoft.Dynamics.DataEntities.ExpenseRateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="expense">The value of expense</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseRateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseRate> _source,
            string dataAreaId, 
            string expense)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Expense", expense }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExpenseRateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailAffiliationPriceGroup as global::Microsoft.Dynamics.DataEntities.RetailAffiliationPriceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailAffiliationPriceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailAffiliationPriceGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailAffiliationPriceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailAffiliationPriceGroup as global::Microsoft.Dynamics.DataEntities.RetailAffiliationPriceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="affiliationName">The value of affiliationName</param>
        /// <param name="priceCustomerGroupCode">The value of priceCustomerGroupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailAffiliationPriceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailAffiliationPriceGroup> _source,
            string dataAreaId, 
            string affiliationName, 
            string priceCustomerGroupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AffiliationName", affiliationName }, 
                { "PriceCustomerGroupCode", priceCustomerGroupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailAffiliationPriceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryOutcomeType as global::Microsoft.Dynamics.DataEntities.InjuryOutcomeTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryOutcomeTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryOutcomeType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjuryOutcomeTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryOutcomeType as global::Microsoft.Dynamics.DataEntities.InjuryOutcomeTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="outcomeTypeId">The value of outcomeTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryOutcomeTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryOutcomeType> _source,
            string outcomeTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "OutcomeTypeId", outcomeTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjuryOutcomeTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineInquiry as global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineInquirySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineInquirySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineInquiry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineInquirySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineInquiry as global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineInquirySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        /// <param name="lineNum">The value of lineNum</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineInquirySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineInquiry> _source,
            string payStatementNumber, 
            decimal lineNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PayStatementNumber", payStatementNumber }, 
                { "LineNum", lineNum }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayStatementBenefitLineInquirySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayoutZone as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutZoneSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutZoneSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayoutZone> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutZoneSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTillLayoutZone as global::Microsoft.Dynamics.DataEntities.RetailTillLayoutZoneSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="deviceType">The value of deviceType</param>
        /// <param name="zoneType">The value of zoneType</param>
        /// <param name="zoneId">The value of zoneId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTillLayoutZoneSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTillLayoutZone> _source,
            int deviceType, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RetailZoneType> zoneType, 
            string zoneId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DeviceType", deviceType }, 
                { "ZoneType", zoneType }, 
                { "ZoneId", zoneId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTillLayoutZoneSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlMessageLevel as global::Microsoft.Dynamics.DataEntities.BudgetControlMessageLevelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlMessageLevelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlMessageLevel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlMessageLevelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetControlMessageLevel as global::Microsoft.Dynamics.DataEntities.BudgetControlMessageLevelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        /// <param name="status">The value of status</param>
        /// <param name="userGroupId">The value of userGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetControlMessageLevelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetControlMessageLevel> _source,
            string dataAreaId, 
            string legalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.BudgetControlConfigurationStatus> status, 
            string userGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LegalEntityId", legalEntityId }, 
                { "Status", status }, 
                { "UserGroupId", userGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetControlMessageLevelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryIncident as global::Microsoft.Dynamics.DataEntities.InjuryIncidentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryIncidentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryIncident> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjuryIncidentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryIncident as global::Microsoft.Dynamics.DataEntities.InjuryIncidentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="caseNumber">The value of caseNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryIncidentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryIncident> _source,
            string dataAreaId, 
            string caseNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CaseNumber", caseNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjuryIncidentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProduct as global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProduct as global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="displayProductNumber">The value of displayProductNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProduct> _source,
            string partyNumber, 
            string displayProductNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartyNumber", partyNumber }, 
                { "DisplayProductNumber", displayProductNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailInternalOrganizationProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayRateConversion as global::Microsoft.Dynamics.DataEntities.PayRateConversionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayRateConversionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayRateConversion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayRateConversionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayRateConversion as global::Microsoft.Dynamics.DataEntities.PayRateConversionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="payRateConversion">The value of payRateConversion</param>
        public static global::Microsoft.Dynamics.DataEntities.PayRateConversionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayRateConversion> _source,
            string dataAreaId, 
            string payRateConversion)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PayRateConversion", payRateConversion }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayRateConversionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfile as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfile as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="timeProfileId">The value of timeProfileId</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfile> _source,
            string dataAreaId, 
            string timeProfileId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TimeProfileId", timeProfileId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Benefit as global::Microsoft.Dynamics.DataEntities.BenefitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Benefit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Benefit as global::Microsoft.Dynamics.DataEntities.BenefitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitPlanId">The value of benefitPlanId</param>
        /// <param name="benefitOptionId">The value of benefitOptionId</param>
        /// <param name="effective">The value of effective</param>
        /// <param name="expiration">The value of expiration</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Benefit> _source,
            string benefitPlanId, 
            string benefitOptionId, 
            global::System.DateTimeOffset effective, 
            global::System.DateTimeOffset expiration)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitPlanId", benefitPlanId }, 
                { "BenefitOptionId", benefitOptionId }, 
                { "Effective", effective }, 
                { "Expiration", expiration }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionV2 as global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionV2 as global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="productDescriptionCustomerGroupId">The value of productDescriptionCustomerGroupId</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionV2> _source,
            string dataAreaId, 
            string itemNumber, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            string customerAccountNumber, 
            string productDescriptionCustomerGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "ProductDescriptionCustomerGroupId", productDescriptionCustomerGroupId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerProductDescriptionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSparePart as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSparePartSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSparePartSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSparePart> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSparePartSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSparePart as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSparePartSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="productId">The value of productId</param>
        /// <param name="modelProductId">The value of modelProductId</param>
        /// <param name="modelId">The value of modelId</param>
        /// <param name="itemId">The value of itemId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSparePartSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSparePart> _source,
            string dataAreaId, 
            string maintenanceAssetTypeId, 
            string productId, 
            string modelProductId, 
            string modelId, 
            string itemId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "ProductId", productId }, 
                { "ModelProductId", modelProductId }, 
                { "ModelId", modelId }, 
                { "ItemId", itemId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceAssetTypeDefaultSparePartSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OnlineChannel as global::Microsoft.Dynamics.DataEntities.OnlineChannelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OnlineChannelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OnlineChannel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OnlineChannelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OnlineChannel as global::Microsoft.Dynamics.DataEntities.OnlineChannelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="retailChannelId">The value of retailChannelId</param>
        public static global::Microsoft.Dynamics.DataEntities.OnlineChannelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OnlineChannel> _source,
            string retailChannelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RetailChannelId", retailChannelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.OnlineChannelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV2 as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV2 as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="manufacturedItemNumber">The value of manufacturedItemNumber</param>
        /// <param name="bOMId">The value of bOMId</param>
        /// <param name="productionSiteId">The value of productionSiteId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="isActive">The value of isActive</param>
        /// <param name="validFromDate">The value of validFromDate</param>
        /// <param name="fromQuantity">The value of fromQuantity</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV2> _source,
            string dataAreaId, 
            string manufacturedItemNumber, 
            string bOMId, 
            string productionSiteId, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.NoYes> isActive, 
            global::System.DateTimeOffset validFromDate, 
            decimal fromQuantity)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ManufacturedItemNumber", manufacturedItemNumber }, 
                { "BOMId", bOMId }, 
                { "ProductionSiteId", productionSiteId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "IsActive", isActive }, 
                { "ValidFromDate", validFromDate }, 
                { "FromQuantity", fromQuantity }
            };
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTable as global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTable> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTable as global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTableSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalId">The value of journalId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTableSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTable> _source,
            string dataAreaId, 
            string journalId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalId", journalId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectItemJournalTableSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeActivityRegistrationCalculation as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeActivityRegistrationCalculationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeActivityRegistrationCalculationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeActivityRegistrationCalculation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeActivityRegistrationCalculationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeActivityRegistrationCalculation as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeActivityRegistrationCalculationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workerPersonnelNumber">The value of workerPersonnelNumber</param>
        /// <param name="timeProfileDate">The value of timeProfileDate</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeActivityRegistrationCalculationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeActivityRegistrationCalculation> _source,
            string dataAreaId, 
            string workerPersonnelNumber, 
            global::System.DateTimeOffset timeProfileDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkerPersonnelNumber", workerPersonnelNumber }, 
                { "TimeProfileDate", timeProfileDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceTimeActivityRegistrationCalculationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TransferOrderHeader as global::Microsoft.Dynamics.DataEntities.TransferOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TransferOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferOrderHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TransferOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TransferOrderHeader as global::Microsoft.Dynamics.DataEntities.TransferOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="transferOrderNumber">The value of transferOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.TransferOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferOrderHeader> _source,
            string dataAreaId, 
            string transferOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TransferOrderNumber", transferOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.TransferOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivityV2Entity as global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivityV2EntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivityV2EntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivityV2Entity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivityV2EntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivityV2Entity as global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivityV2EntitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="nonTransactionalActivityId">The value of nonTransactionalActivityId</param>
        public static global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivityV2EntitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivityV2Entity> _source,
            string nonTransactionalActivityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "NonTransactionalActivityId", nonTransactionalActivityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.LoyaltyCardRewardPointNonTransactionalActivityV2EntitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailChannelPriceGroup as global::Microsoft.Dynamics.DataEntities.RetailChannelPriceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailChannelPriceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailChannelPriceGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailChannelPriceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailChannelPriceGroup as global::Microsoft.Dynamics.DataEntities.RetailChannelPriceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupCode">The value of groupCode</param>
        /// <param name="retailChannelId">The value of retailChannelId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailChannelPriceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailChannelPriceGroup> _source,
            string groupCode, 
            string retailChannelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupCode", groupCode }, 
                { "RetailChannelId", retailChannelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailChannelPriceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitLimit as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitLimitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitLimitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitLimit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitLimitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitLimit as global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitLimitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="benefitId">The value of benefitId</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="enrollmentStart">The value of enrollmentStart</param>
        /// <param name="enrollmentEnd">The value of enrollmentEnd</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitLimitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitLimit> _source,
            string benefitId, 
            string personnelNumber, 
            global::System.DateTimeOffset enrollmentStart, 
            global::System.DateTimeOffset enrollmentEnd)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BenefitId", benefitId }, 
                { "PersonnelNumber", personnelNumber }, 
                { "EnrollmentStart", enrollmentStart }, 
                { "EnrollmentEnd", enrollmentEnd }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerEnrolledBenefitLimitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV3 as global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV3> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV3 as global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="inventorySiteId">The value of inventorySiteId</param>
        /// <param name="inventoryWarehouseId">The value of inventoryWarehouseId</param>
        /// <param name="itemBatchNumber">The value of itemBatchNumber</param>
        /// <param name="itemSerialNumber">The value of itemSerialNumber</param>
        /// <param name="warehouseLocationId">The value of warehouseLocationId</param>
        /// <param name="licensePlateNumber">The value of licensePlateNumber</param>
        /// <param name="inventoryStatusId">The value of inventoryStatusId</param>
        /// <param name="inventoryGtdId">The value of inventoryGtdId</param>
        /// <param name="inventoryOwnerId">The value of inventoryOwnerId</param>
        /// <param name="inventoryProfileId">The value of inventoryProfileId</param>
        public static global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV3> _source,
            string dataAreaId, 
            string journalNumber, 
            string itemNumber, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            string inventorySiteId, 
            string inventoryWarehouseId, 
            string itemBatchNumber, 
            string itemSerialNumber, 
            string warehouseLocationId, 
            string licensePlateNumber, 
            string inventoryStatusId, 
            string inventoryGtdId, 
            string inventoryOwnerId, 
            string inventoryProfileId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }, 
                { "ItemNumber", itemNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "InventorySiteId", inventorySiteId }, 
                { "InventoryWarehouseId", inventoryWarehouseId }, 
                { "ItemBatchNumber", itemBatchNumber }, 
                { "ItemSerialNumber", itemSerialNumber }, 
                { "WarehouseLocationId", warehouseLocationId }, 
                { "LicensePlateNumber", licensePlateNumber }, 
                { "InventoryStatusId", inventoryStatusId }, 
                { "InventoryGtdId", inventoryGtdId }, 
                { "InventoryOwnerId", inventoryOwnerId }, 
                { "InventoryProfileId", inventoryProfileId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InventoryMovementJournalEntryV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationHeader as global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationHeader as global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesOrderNumber">The value of salesOrderNumber</param>
        /// <param name="confirmationDate">The value of confirmationDate</param>
        /// <param name="confirmationNumber">The value of confirmationNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationHeader> _source,
            string dataAreaId, 
            string salesOrderNumber, 
            global::System.DateTimeOffset confirmationDate, 
            string confirmationNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesOrderNumber", salesOrderNumber }, 
                { "ConfirmationDate", confirmationDate }, 
                { "ConfirmationNumber", confirmationNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesOrderConfirmationHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductColorGroupLine as global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductColorGroupLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductColorGroupLine as global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productColorGroupId">The value of productColorGroupId</param>
        /// <param name="productColorId">The value of productColorId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductColorGroupLine> _source,
            string productColorGroupId, 
            string productColorId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductColorGroupId", productColorGroupId }, 
                { "ProductColorId", productColorId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductColorGroupLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetSpecialDepreciationAllowance as global::Microsoft.Dynamics.DataEntities.AssetSpecialDepreciationAllowanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetSpecialDepreciationAllowanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetSpecialDepreciationAllowance> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetSpecialDepreciationAllowanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetSpecialDepreciationAllowance as global::Microsoft.Dynamics.DataEntities.AssetSpecialDepreciationAllowanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="specialDepreciationAllowanceId">The value of specialDepreciationAllowanceId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetSpecialDepreciationAllowanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetSpecialDepreciationAllowance> _source,
            string dataAreaId, 
            string specialDepreciationAllowanceId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SpecialDepreciationAllowanceId", specialDepreciationAllowanceId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetSpecialDepreciationAllowanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentIEPerState as global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentIEPerStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentIEPerStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentIEPerState> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentIEPerStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentIEPerState as global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentIEPerStateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fiscalEstablishmentId">The value of fiscalEstablishmentId</param>
        /// <param name="state">The value of state</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentIEPerStateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentIEPerState> _source,
            string dataAreaId, 
            string fiscalEstablishmentId, 
            string state)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FiscalEstablishmentId", fiscalEstablishmentId }, 
                { "State", state }
            };
            return new global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentIEPerStateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductionOrderBillOfMaterialLine as global::Microsoft.Dynamics.DataEntities.ProductionOrderBillOfMaterialLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductionOrderBillOfMaterialLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductionOrderBillOfMaterialLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductionOrderBillOfMaterialLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductionOrderBillOfMaterialLine as global::Microsoft.Dynamics.DataEntities.ProductionOrderBillOfMaterialLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productionOrderNumber">The value of productionOrderNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductionOrderBillOfMaterialLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductionOrderBillOfMaterialLine> _source,
            string dataAreaId, 
            string productionOrderNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductionOrderNumber", productionOrderNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductionOrderBillOfMaterialLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalHeader as global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalHeader as global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalHeader> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetCycle as global::Microsoft.Dynamics.DataEntities.BudgetCycleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetCycleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetCycle> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BudgetCycleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BudgetCycle as global::Microsoft.Dynamics.DataEntities.BudgetCycleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="budgetCycleTimeSpanName">The value of budgetCycleTimeSpanName</param>
        /// <param name="fiscalCalendar">The value of fiscalCalendar</param>
        /// <param name="budgetCycleName">The value of budgetCycleName</param>
        public static global::Microsoft.Dynamics.DataEntities.BudgetCycleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetCycle> _source,
            string budgetCycleTimeSpanName, 
            string fiscalCalendar, 
            string budgetCycleName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BudgetCycleTimeSpanName", budgetCycleTimeSpanName }, 
                { "FiscalCalendar", fiscalCalendar }, 
                { "BudgetCycleName", budgetCycleName }
            };
            return new global::Microsoft.Dynamics.DataEntities.BudgetCycleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProduct as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProduct> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProduct as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementMerchandisingEventId">The value of tradeAllowanceAgreementMerchandisingEventId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="promotionalProductUnitSymbol">The value of promotionalProductUnitSymbol</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProduct> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementMerchandisingEventId, 
            string customerAccountNumber, 
            string tradeAllowanceAgreementId, 
            string itemNumber, 
            string promotionalProductUnitSymbol, 
            string productColorId, 
            string productStyleId, 
            string productSizeId, 
            string productConfigurationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementMerchandisingEventId", tradeAllowanceAgreementMerchandisingEventId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "ItemNumber", itemNumber }, 
                { "PromotionalProductUnitSymbol", promotionalProductUnitSymbol }, 
                { "ProductColorId", productColorId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductConfigurationId", productConfigurationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressCounty as global::Microsoft.Dynamics.DataEntities.AddressCountySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressCountySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressCounty> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AddressCountySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AddressCounty as global::Microsoft.Dynamics.DataEntities.AddressCountySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="countryRegionId">The value of countryRegionId</param>
        /// <param name="stateId">The value of stateId</param>
        /// <param name="countyId">The value of countyId</param>
        public static global::Microsoft.Dynamics.DataEntities.AddressCountySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AddressCounty> _source,
            string countryRegionId, 
            string stateId, 
            string countyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CountryRegionId", countryRegionId }, 
                { "StateId", stateId }, 
                { "CountyId", countyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AddressCountySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductAttributeTranslation as global::Microsoft.Dynamics.DataEntities.ProductAttributeTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductAttributeTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductAttributeTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductAttributeTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductAttributeTranslation as global::Microsoft.Dynamics.DataEntities.ProductAttributeTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productAttributeName">The value of productAttributeName</param>
        /// <param name="productAttributeTypeName">The value of productAttributeTypeName</param>
        /// <param name="languageId">The value of languageId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductAttributeTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductAttributeTranslation> _source,
            string productAttributeName, 
            string productAttributeTypeName, 
            string languageId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductAttributeName", productAttributeName }, 
                { "ProductAttributeTypeName", productAttributeTypeName }, 
                { "LanguageId", languageId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductAttributeTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRule as global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRule as global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="ruleName">The value of ruleName</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRule> _source,
            string ruleName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RuleName", ruleName }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringProductVersionNumberingRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LoanedEquipment as global::Microsoft.Dynamics.DataEntities.LoanedEquipmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LoanedEquipmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LoanedEquipment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LoanedEquipmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LoanedEquipment as global::Microsoft.Dynamics.DataEntities.LoanedEquipmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personId">The value of personId</param>
        /// <param name="loanItemId">The value of loanItemId</param>
        /// <param name="loaned">The value of loaned</param>
        public static global::Microsoft.Dynamics.DataEntities.LoanedEquipmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LoanedEquipment> _source,
            string personId, 
            string loanItemId, 
            global::System.DateTimeOffset loaned)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonId", personId }, 
                { "LoanItemId", loanItemId }, 
                { "Loaned", loaned }
            };
            return new global::Microsoft.Dynamics.DataEntities.LoanedEquipmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateTask as global::Microsoft.Dynamics.DataEntities.JobTemplateTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateTask> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateTask as global::Microsoft.Dynamics.DataEntities.JobTemplateTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTemplateId">The value of jobTemplateId</param>
        /// <param name="jobTaskId">The value of jobTaskId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateTask> _source,
            string jobTemplateId, 
            string jobTaskId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTemplateId", jobTemplateId }, 
                { "JobTaskId", jobTaskId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleLine as global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleLine as global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="ruleId">The value of ruleId</param>
        /// <param name="lineNum">The value of lineNum</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleLine> _source,
            string dataAreaId, 
            string ruleId, 
            decimal lineNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RuleId", ruleId }, 
                { "LineNum", lineNum }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerEliminationRuleLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailPackageLines as global::Microsoft.Dynamics.DataEntities.RetailPackageLinesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailPackageLinesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailPackageLines> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailPackageLinesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailPackageLines as global::Microsoft.Dynamics.DataEntities.RetailPackageLinesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="packageId">The value of packageId</param>
        /// <param name="itemId">The value of itemId</param>
        /// <param name="purchaseUnit">The value of purchaseUnit</param>
        /// <param name="color">The value of color</param>
        /// <param name="size">The value of size</param>
        /// <param name="style">The value of style</param>
        /// <param name="configId">The value of configId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailPackageLinesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailPackageLines> _source,
            string dataAreaId, 
            string packageId, 
            string itemId, 
            string purchaseUnit, 
            string color, 
            string size, 
            string style, 
            string configId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PackageId", packageId }, 
                { "ItemId", itemId }, 
                { "PurchaseUnit", purchaseUnit }, 
                { "Color", color }, 
                { "Size", size }, 
                { "Style", style }, 
                { "ConfigId", configId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailPackageLinesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicyRuleType as global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicyRuleTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicyRuleTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicyRuleType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicyRuleTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicyRuleType as global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicyRuleTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="ruleName">The value of ruleName</param>
        public static global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicyRuleTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicyRuleType> _source,
            string ruleName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RuleName", ruleName }
            };
            return new global::Microsoft.Dynamics.DataEntities.BenefitEligibilityPolicyRuleTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailEcoResCategory as global::Microsoft.Dynamics.DataEntities.RetailEcoResCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailEcoResCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailEcoResCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailEcoResCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailEcoResCategory as global::Microsoft.Dynamics.DataEntities.RetailEcoResCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        /// <param name="ecoResCategoryHierarchy_Name">The value of ecoResCategoryHierarchy_Name</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailEcoResCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailEcoResCategory> _source,
            string name, 
            string ecoResCategoryHierarchy_Name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }, 
                { "EcoResCategoryHierarchy_Name", ecoResCategoryHierarchy_Name }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailEcoResCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Branch as global::Microsoft.Dynamics.DataEntities.BranchSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BranchSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Branch> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BranchSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Branch as global::Microsoft.Dynamics.DataEntities.BranchSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="code">The value of code</param>
        public static global::Microsoft.Dynamics.DataEntities.BranchSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Branch> _source,
            string dataAreaId, 
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "Code", code }
            };
            return new global::Microsoft.Dynamics.DataEntities.BranchSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TestType as global::Microsoft.Dynamics.DataEntities.TestTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TestTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TestType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TestTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TestType as global::Microsoft.Dynamics.DataEntities.TestTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="testId">The value of testId</param>
        public static global::Microsoft.Dynamics.DataEntities.TestTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TestType> _source,
            string testId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TestId", testId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TestTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductBarcodeV2 as global::Microsoft.Dynamics.DataEntities.ProductBarcodeV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductBarcodeV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductBarcodeV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductBarcodeV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductBarcodeV2 as global::Microsoft.Dynamics.DataEntities.ProductBarcodeV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="productQuantityUnitSymbol">The value of productQuantityUnitSymbol</param>
        /// <param name="barcodeSetupId">The value of barcodeSetupId</param>
        /// <param name="barcode">The value of barcode</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductBarcodeV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductBarcodeV2> _source,
            string dataAreaId, 
            string itemNumber, 
            string productConfigurationId, 
            string productColorId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            string productQuantityUnitSymbol, 
            string barcodeSetupId, 
            string barcode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductColorId", productColorId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "ProductQuantityUnitSymbol", productQuantityUnitSymbol }, 
                { "BarcodeSetupId", barcodeSetupId }, 
                { "Barcode", barcode }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductBarcodeV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetStatementRow as global::Microsoft.Dynamics.DataEntities.AssetStatementRowSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetStatementRowSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetStatementRow> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetStatementRowSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetStatementRow as global::Microsoft.Dynamics.DataEntities.AssetStatementRowSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="fromFixedAssetNumber">The value of fromFixedAssetNumber</param>
        /// <param name="toFixedAssetNumber">The value of toFixedAssetNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetStatementRowSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetStatementRow> _source,
            string dataAreaId, 
            decimal lineNumber, 
            string fromFixedAssetNumber, 
            string toFixedAssetNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LineNumber", lineNumber }, 
                { "FromFixedAssetNumber", fromFixedAssetNumber }, 
                { "ToFixedAssetNumber", toFixedAssetNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetStatementRowSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JournalTrans as global::Microsoft.Dynamics.DataEntities.JournalTransSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JournalTransSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JournalTrans> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JournalTransSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JournalTrans as global::Microsoft.Dynamics.DataEntities.JournalTransSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="journalId">The value of journalId</param>
        public static global::Microsoft.Dynamics.DataEntities.JournalTransSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JournalTrans> _source,
            string dataAreaId, 
            decimal lineNumber, 
            string journalId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LineNumber", lineNumber }, 
                { "JournalId", journalId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JournalTransSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReturnOrderHeader as global::Microsoft.Dynamics.DataEntities.ReturnOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReturnOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReturnOrderHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReturnOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReturnOrderHeader as global::Microsoft.Dynamics.DataEntities.ReturnOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="returnOrderNumber">The value of returnOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ReturnOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReturnOrderHeader> _source,
            string dataAreaId, 
            string returnOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ReturnOrderNumber", returnOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReturnOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPostingProfile as global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPostingProfile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPostingProfile as global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="postingProfile">The value of postingProfile</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPostingProfile> _source,
            string dataAreaId, 
            string postingProfile)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PostingProfile", postingProfile }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerPostingProfileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Unions as global::Microsoft.Dynamics.DataEntities.UnionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.UnionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Unions> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.UnionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Unions as global::Microsoft.Dynamics.DataEntities.UnionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="unionId">The value of unionId</param>
        public static global::Microsoft.Dynamics.DataEntities.UnionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Unions> _source,
            string unionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UnionId", unionId }
            };
            return new global::Microsoft.Dynamics.DataEntities.UnionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BaseWorker as global::Microsoft.Dynamics.DataEntities.BaseWorkerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BaseWorkerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BaseWorker> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BaseWorkerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BaseWorker as global::Microsoft.Dynamics.DataEntities.BaseWorkerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BaseWorkerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BaseWorker> _source,
            string personnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BaseWorkerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjWBSTemplateTask as global::Microsoft.Dynamics.DataEntities.ProjWBSTemplateTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjWBSTemplateTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjWBSTemplateTask> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjWBSTemplateTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjWBSTemplateTask as global::Microsoft.Dynamics.DataEntities.ProjWBSTemplateTaskSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="hierarchyId">The value of hierarchyId</param>
        /// <param name="wBSId">The value of wBSId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjWBSTemplateTaskSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjWBSTemplateTask> _source,
            string dataAreaId, 
            string hierarchyId, 
            string wBSId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "HierarchyId", hierarchyId }, 
                { "WBSId", wBSId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjWBSTemplateTaskSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RAssetLedgerAccount as global::Microsoft.Dynamics.DataEntities.RAssetLedgerAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RAssetLedgerAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RAssetLedgerAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RAssetLedgerAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RAssetLedgerAccount as global::Microsoft.Dynamics.DataEntities.RAssetLedgerAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="accountGroupNumber">The value of accountGroupNumber</param>
        /// <param name="transactionType">The value of transactionType</param>
        /// <param name="groupings">The value of groupings</param>
        /// <param name="postingProfile">The value of postingProfile</param>
        public static global::Microsoft.Dynamics.DataEntities.RAssetLedgerAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RAssetLedgerAccount> _source,
            string dataAreaId, 
            string accountGroupNumber, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RAssetTransType> transactionType, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.RAssetTableGroupAllStandard> groupings, 
            string postingProfile)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AccountGroupNumber", accountGroupNumber }, 
                { "TransactionType", transactionType }, 
                { "Groupings", groupings }, 
                { "PostingProfile", postingProfile }
            };
            return new global::Microsoft.Dynamics.DataEntities.RAssetLedgerAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProject as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProject> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProject as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workOrderTypeId">The value of workOrderTypeId</param>
        /// <param name="functionalLocationId">The value of functionalLocationId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProject> _source,
            string dataAreaId, 
            string workOrderTypeId, 
            string functionalLocationId, 
            string maintenanceAssetTypeId, 
            string maintenanceAssetId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkOrderTypeId", workOrderTypeId }, 
                { "FunctionalLocationId", functionalLocationId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "MaintenanceAssetId", maintenanceAssetId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderParentProjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ForecastModel as global::Microsoft.Dynamics.DataEntities.ForecastModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ForecastModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ForecastModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ForecastModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ForecastModel as global::Microsoft.Dynamics.DataEntities.ForecastModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="modelId">The value of modelId</param>
        public static global::Microsoft.Dynamics.DataEntities.ForecastModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ForecastModel> _source,
            string dataAreaId, 
            string modelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ModelId", modelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ForecastModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RevRecRevRecDeferredLine as global::Microsoft.Dynamics.DataEntities.RevRecRevRecDeferredLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RevRecRevRecDeferredLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RevRecRevRecDeferredLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RevRecRevRecDeferredLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RevRecRevRecDeferredLine as global::Microsoft.Dynamics.DataEntities.RevRecRevRecDeferredLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="origSalesId">The value of origSalesId</param>
        /// <param name="projID">The value of projID</param>
        /// <param name="lineNum">The value of lineNum</param>
        /// <param name="inventTransId">The value of inventTransId</param>
        /// <param name="revenueScheduleID">The value of revenueScheduleID</param>
        /// <param name="recPeriodNumber">The value of recPeriodNumber</param>
        /// <param name="latestNewValues">The value of latestNewValues</param>
        /// <param name="reallocationId">The value of reallocationId</param>
        /// <param name="reallocationReversal">The value of reallocationReversal</param>
        /// <param name="invoiceId">The value of invoiceId</param>
        public static global::Microsoft.Dynamics.DataEntities.RevRecRevRecDeferredLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RevRecRevRecDeferredLine> _source,
            string dataAreaId, 
            string origSalesId, 
            string projID, 
            decimal lineNum, 
            string inventTransId, 
            string revenueScheduleID, 
            int recPeriodNumber, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.NoYes> latestNewValues, 
            string reallocationId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.NoYes> reallocationReversal, 
            string invoiceId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OrigSalesId", origSalesId }, 
                { "ProjID", projID }, 
                { "LineNum", lineNum }, 
                { "InventTransId", inventTransId }, 
                { "RevenueScheduleID", revenueScheduleID }, 
                { "RecPeriodNumber", recPeriodNumber }, 
                { "LatestNewValues", latestNewValues }, 
                { "ReallocationId", reallocationId }, 
                { "ReallocationReversal", reallocationReversal }, 
                { "InvoiceId", invoiceId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RevRecRevRecDeferredLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonalContactOrganizations as global::Microsoft.Dynamics.DataEntities.PersonalContactOrganizationsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonalContactOrganizationsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonalContactOrganizations> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PersonalContactOrganizationsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PersonalContactOrganizations as global::Microsoft.Dynamics.DataEntities.PersonalContactOrganizationsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="workerPersonnelNumber">The value of workerPersonnelNumber</param>
        /// <param name="contactOrganizationPartyNumber">The value of contactOrganizationPartyNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PersonalContactOrganizationsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PersonalContactOrganizations> _source,
            string workerPersonnelNumber, 
            string contactOrganizationPartyNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "WorkerPersonnelNumber", workerPersonnelNumber }, 
                { "ContactOrganizationPartyNumber", contactOrganizationPartyNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PersonalContactOrganizationsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseCashAdvance as global::Microsoft.Dynamics.DataEntities.ExpenseCashAdvanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseCashAdvanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseCashAdvance> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExpenseCashAdvanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExpenseCashAdvance as global::Microsoft.Dynamics.DataEntities.ExpenseCashAdvanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="cashAdvanceNumber">The value of cashAdvanceNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ExpenseCashAdvanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExpenseCashAdvance> _source,
            string dataAreaId, 
            string cashAdvanceNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "CashAdvanceNumber", cashAdvanceNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExpenseCashAdvanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Job as global::Microsoft.Dynamics.DataEntities.JobSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Job> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Job as global::Microsoft.Dynamics.DataEntities.JobSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Job> _source,
            string jobId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductVariant as global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductVariant> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductVariant as global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productMasterNumber">The value of productMasterNumber</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductVariant> _source,
            string dataAreaId, 
            string productMasterNumber, 
            string productConfigurationId, 
            string productSizeId, 
            string productColorId, 
            string productStyleId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductMasterNumber", productMasterNumber }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductColorId", productColorId }, 
                { "ProductStyleId", productStyleId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectResource as global::Microsoft.Dynamics.DataEntities.ProjectResourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectResourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectResource> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProjectResourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProjectResource as global::Microsoft.Dynamics.DataEntities.ProjectResourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="resourceId">The value of resourceId</param>
        /// <param name="resourceCompanyId">The value of resourceCompanyId</param>
        public static global::Microsoft.Dynamics.DataEntities.ProjectResourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProjectResource> _source,
            string resourceId, 
            string resourceCompanyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ResourceId", resourceId }, 
                { "ResourceCompanyId", resourceCompanyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProjectResourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueLegalEntityOverride as global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueLegalEntityOverrideSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueLegalEntityOverrideSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueLegalEntityOverride> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueLegalEntityOverrideSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueLegalEntityOverride as global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueLegalEntityOverrideSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="financialDimension">The value of financialDimension</param>
        /// <param name="dimensionValue">The value of dimensionValue</param>
        /// <param name="legalEntityId">The value of legalEntityId</param>
        public static global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueLegalEntityOverrideSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueLegalEntityOverride> _source,
            string financialDimension, 
            string dimensionValue, 
            string legalEntityId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FinancialDimension", financialDimension }, 
                { "DimensionValue", dimensionValue }, 
                { "LegalEntityId", legalEntityId }
            };
            return new global::Microsoft.Dynamics.DataEntities.FinancialDimensionValueLegalEntityOverrideSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Discussion as global::Microsoft.Dynamics.DataEntities.DiscussionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DiscussionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Discussion> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DiscussionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Discussion as global::Microsoft.Dynamics.DataEntities.DiscussionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="discussion">The value of discussion</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.DiscussionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Discussion> _source,
            string discussion, 
            string personnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Discussion", discussion }, 
                { "PersonnelNumber", personnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.DiscussionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesInvoiceJournalHeader as global::Microsoft.Dynamics.DataEntities.SalesInvoiceJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesInvoiceJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesInvoiceJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesInvoiceJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesInvoiceJournalHeader as global::Microsoft.Dynamics.DataEntities.SalesInvoiceJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="invoiceNumber">The value of invoiceNumber</param>
        /// <param name="invoiceDate">The value of invoiceDate</param>
        /// <param name="ledgerVoucher">The value of ledgerVoucher</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesInvoiceJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesInvoiceJournalHeader> _source,
            string dataAreaId, 
            string invoiceNumber, 
            global::System.DateTimeOffset invoiceDate, 
            string ledgerVoucher)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InvoiceNumber", invoiceNumber }, 
                { "InvoiceDate", invoiceDate }, 
                { "LedgerVoucher", ledgerVoucher }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesInvoiceJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestHeader as global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestHeader as global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="requestNumber">The value of requestNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestHeader> _source,
            string requestNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RequestNumber", requestNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EngineeringChangeRequestHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PremiumEarningCode as global::Microsoft.Dynamics.DataEntities.PremiumEarningCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PremiumEarningCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PremiumEarningCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PremiumEarningCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PremiumEarningCode as global::Microsoft.Dynamics.DataEntities.PremiumEarningCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="premiumEarningCode">The value of premiumEarningCode</param>
        public static global::Microsoft.Dynamics.DataEntities.PremiumEarningCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PremiumEarningCode> _source,
            string premiumEarningCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PremiumEarningCode", premiumEarningCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.PremiumEarningCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AcquisitionMethod as global::Microsoft.Dynamics.DataEntities.AcquisitionMethodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AcquisitionMethodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AcquisitionMethod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AcquisitionMethodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AcquisitionMethod as global::Microsoft.Dynamics.DataEntities.AcquisitionMethodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="acquisitionMethod">The value of acquisitionMethod</param>
        public static global::Microsoft.Dynamics.DataEntities.AcquisitionMethodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AcquisitionMethod> _source,
            string dataAreaId, 
            string acquisitionMethod)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AcquisitionMethod", acquisitionMethod }
            };
            return new global::Microsoft.Dynamics.DataEntities.AcquisitionMethodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLine as global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLine as global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="inventoryOwnerId">The value of inventoryOwnerId</param>
        /// <param name="inventoryStatusId">The value of inventoryStatusId</param>
        /// <param name="itemBatchNumber">The value of itemBatchNumber</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="itemSerialNumber">The value of itemSerialNumber</param>
        /// <param name="licensePlateNumber">The value of licensePlateNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="warehouseLocationId">The value of warehouseLocationId</param>
        /// <param name="warehouseWorkId">The value of warehouseWorkId</param>
        public static global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLine> _source,
            string dataAreaId, 
            string inventoryOwnerId, 
            string inventoryStatusId, 
            string itemBatchNumber, 
            string itemNumber, 
            string itemSerialNumber, 
            string licensePlateNumber, 
            decimal lineNumber, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string warehouseLocationId, 
            string warehouseWorkId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "InventoryOwnerId", inventoryOwnerId }, 
                { "InventoryStatusId", inventoryStatusId }, 
                { "ItemBatchNumber", itemBatchNumber }, 
                { "ItemNumber", itemNumber }, 
                { "ItemSerialNumber", itemSerialNumber }, 
                { "LicensePlateNumber", licensePlateNumber }, 
                { "LineNumber", lineNumber }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "WarehouseLocationId", warehouseLocationId }, 
                { "WarehouseWorkId", warehouseWorkId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CycleCountingWarehouseWorkLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimensionSet as global::Microsoft.Dynamics.DataEntities.DimensionSetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DimensionSetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionSet> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DimensionSetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DimensionSet as global::Microsoft.Dynamics.DataEntities.DimensionSetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="recordId">The value of recordId</param>
        public static global::Microsoft.Dynamics.DataEntities.DimensionSetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionSet> _source,
            long recordId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RecordId", recordId }
            };
            return new global::Microsoft.Dynamics.DataEntities.DimensionSetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExchangeRate as global::Microsoft.Dynamics.DataEntities.ExchangeRateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ExchangeRateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExchangeRate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ExchangeRateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ExchangeRate as global::Microsoft.Dynamics.DataEntities.ExchangeRateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="rateTypeName">The value of rateTypeName</param>
        /// <param name="fromCurrency">The value of fromCurrency</param>
        /// <param name="toCurrency">The value of toCurrency</param>
        /// <param name="startDate">The value of startDate</param>
        public static global::Microsoft.Dynamics.DataEntities.ExchangeRateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ExchangeRate> _source,
            string rateTypeName, 
            string fromCurrency, 
            string toCurrency, 
            global::System.DateTimeOffset startDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RateTypeName", rateTypeName }, 
                { "FromCurrency", fromCurrency }, 
                { "ToCurrency", toCurrency }, 
                { "StartDate", startDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.ExchangeRateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MainAccountTotalAccountInterval as global::Microsoft.Dynamics.DataEntities.MainAccountTotalAccountIntervalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MainAccountTotalAccountIntervalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MainAccountTotalAccountInterval> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MainAccountTotalAccountIntervalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.MainAccountTotalAccountInterval as global::Microsoft.Dynamics.DataEntities.MainAccountTotalAccountIntervalSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="mainAccountId">The value of mainAccountId</param>
        /// <param name="chartOfAccounts">The value of chartOfAccounts</param>
        /// <param name="fromValue">The value of fromValue</param>
        /// <param name="toValue">The value of toValue</param>
        public static global::Microsoft.Dynamics.DataEntities.MainAccountTotalAccountIntervalSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.MainAccountTotalAccountInterval> _source,
            string mainAccountId, 
            string chartOfAccounts, 
            string fromValue, 
            string toValue)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "MainAccountId", mainAccountId }, 
                { "ChartOfAccounts", chartOfAccounts }, 
                { "FromValue", fromValue }, 
                { "ToValue", toValue }
            };
            return new global::Microsoft.Dynamics.DataEntities.MainAccountTotalAccountIntervalSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductionPickingListJournalEntry as global::Microsoft.Dynamics.DataEntities.ProductionPickingListJournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductionPickingListJournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductionPickingListJournalEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductionPickingListJournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductionPickingListJournalEntry as global::Microsoft.Dynamics.DataEntities.ProductionPickingListJournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalNumber">The value of journalNumber</param>
        /// <param name="journalLineNumber">The value of journalLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductionPickingListJournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductionPickingListJournalEntry> _source,
            string dataAreaId, 
            string journalNumber, 
            decimal journalLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalNumber", journalNumber }, 
                { "JournalLineNumber", journalLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductionPickingListJournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeviceType as global::Microsoft.Dynamics.DataEntities.DeviceTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.DeviceTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeviceType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.DeviceTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.DeviceType as global::Microsoft.Dynamics.DataEntities.DeviceTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="type">The value of type</param>
        public static global::Microsoft.Dynamics.DataEntities.DeviceTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DeviceType> _source,
            int type)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Type", type }
            };
            return new global::Microsoft.Dynamics.DataEntities.DeviceTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenSalesMultiLineDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenSalesMultiLineDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenSalesMultiLineDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenSalesMultiLineDiscountJournalLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.OpenSalesMultiLineDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.OpenSalesMultiLineDiscountJournalLine as global::Microsoft.Dynamics.DataEntities.OpenSalesMultiLineDiscountJournalLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAgreementJournalNumber">The value of tradeAgreementJournalNumber</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.OpenSalesMultiLineDiscountJournalLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.OpenSalesMultiLineDiscountJournalLine> _source,
            string dataAreaId, 
            string tradeAgreementJournalNumber, 
            decimal lineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAgreementJournalNumber", tradeAgreementJournalNumber }, 
                { "LineNumber", lineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.OpenSalesMultiLineDiscountJournalLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CostFlowAssumptionPolicy as global::Microsoft.Dynamics.DataEntities.CostFlowAssumptionPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CostFlowAssumptionPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CostFlowAssumptionPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CostFlowAssumptionPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CostFlowAssumptionPolicy as global::Microsoft.Dynamics.DataEntities.CostFlowAssumptionPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="policyId">The value of policyId</param>
        public static global::Microsoft.Dynamics.DataEntities.CostFlowAssumptionPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CostFlowAssumptionPolicy> _source,
            string dataAreaId, 
            string policyId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PolicyId", policyId }
            };
            return new global::Microsoft.Dynamics.DataEntities.CostFlowAssumptionPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Material as global::Microsoft.Dynamics.DataEntities.MaterialSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.MaterialSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Material> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.MaterialSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.Material as global::Microsoft.Dynamics.DataEntities.MaterialSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="materialCode">The value of materialCode</param>
        public static global::Microsoft.Dynamics.DataEntities.MaterialSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.Material> _source,
            string materialCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "MaterialCode", materialCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.MaterialSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderV2 as global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderV2 as global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesQuotationNumber">The value of salesQuotationNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderV2> _source,
            string dataAreaId, 
            string salesQuotationNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesQuotationNumber", salesQuotationNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.SalesQuotationHeaderV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyLocation as global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyLocation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyLocation as global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="warehouseId">The value of warehouseId</param>
        /// <param name="warehouseLocationId">The value of warehouseLocationId</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyLocation> _source,
            string dataAreaId, 
            string warehouseId, 
            string warehouseLocationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WarehouseId", warehouseId }, 
                { "WarehouseLocationId", warehouseLocationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseWorkPolicyLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobPreferredScreening as global::Microsoft.Dynamics.DataEntities.JobPreferredScreeningSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobPreferredScreeningSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobPreferredScreening> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobPreferredScreeningSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobPreferredScreening as global::Microsoft.Dynamics.DataEntities.JobPreferredScreeningSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        /// <param name="screeningTypeId">The value of screeningTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobPreferredScreeningSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobPreferredScreening> _source,
            string jobId, 
            string screeningTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }, 
                { "ScreeningTypeId", screeningTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobPreferredScreeningSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue as global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue as global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="catalogNumber">The value of catalogNumber</param>
        /// <param name="partyNumber">The value of partyNumber</param>
        /// <param name="displayProductNumber">The value of displayProductNumber</param>
        /// <param name="attributeGroupName">The value of attributeGroupName</param>
        /// <param name="attributeName">The value of attributeName</param>
        /// <param name="attributeTypeName">The value of attributeTypeName</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValue> _source,
            string catalogNumber, 
            string partyNumber, 
            string displayProductNumber, 
            string attributeGroupName, 
            string attributeName, 
            string attributeTypeName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CatalogNumber", catalogNumber }, 
                { "PartyNumber", partyNumber }, 
                { "DisplayProductNumber", displayProductNumber }, 
                { "AttributeGroupName", attributeGroupName }, 
                { "AttributeName", attributeName }, 
                { "AttributeTypeName", attributeTypeName }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailCatalogInternalOrganizationProductAttributeValueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTaskAssignment as global::Microsoft.Dynamics.DataEntities.JobTaskAssignmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTaskAssignmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTaskAssignment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTaskAssignmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTaskAssignment as global::Microsoft.Dynamics.DataEntities.JobTaskAssignmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobId">The value of jobId</param>
        /// <param name="jobTaskId">The value of jobTaskId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTaskAssignmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTaskAssignment> _source,
            string jobId, 
            string jobTaskId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobId", jobId }, 
                { "JobTaskId", jobTaskId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTaskAssignmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalEstablishment as global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalEstablishment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.FiscalEstablishment as global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="fiscalEstablishmentId">The value of fiscalEstablishmentId</param>
        public static global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.FiscalEstablishment> _source,
            string dataAreaId, 
            string fiscalEstablishmentId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FiscalEstablishmentId", fiscalEstablishmentId }
            };
            return new global::Microsoft.Dynamics.DataEntities.FiscalEstablishmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventDiscount as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventDiscountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventDiscountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventDiscount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventDiscountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventDiscount as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventDiscountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="tradeAllowanceAgreementMerchandisingEventId">The value of tradeAllowanceAgreementMerchandisingEventId</param>
        /// <param name="discountLineNumber">The value of discountLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventDiscountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventDiscount> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementId, 
            string customerAccountNumber, 
            string tradeAllowanceAgreementMerchandisingEventId, 
            long discountLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "TradeAllowanceAgreementMerchandisingEventId", tradeAllowanceAgreementMerchandisingEventId }, 
                { "DiscountLineNumber", discountLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventDiscountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LineDiscountVendorGroup as global::Microsoft.Dynamics.DataEntities.LineDiscountVendorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LineDiscountVendorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LineDiscountVendorGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LineDiscountVendorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LineDiscountVendorGroup as global::Microsoft.Dynamics.DataEntities.LineDiscountVendorGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::Microsoft.Dynamics.DataEntities.LineDiscountVendorGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LineDiscountVendorGroup> _source,
            string dataAreaId, 
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GroupCode", groupCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.LineDiscountVendorGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultArea as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultAreaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultAreaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultArea> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultAreaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultArea as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultAreaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="faultAreaId">The value of faultAreaId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultAreaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultArea> _source,
            string dataAreaId, 
            string faultAreaId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "FaultAreaId", faultAreaId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceFaultAreaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerContact as global::Microsoft.Dynamics.DataEntities.WorkerContactSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerContactSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerContact> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerContactSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerContact as global::Microsoft.Dynamics.DataEntities.WorkerContactSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="type">The value of type</param>
        /// <param name="locator">The value of locator</param>
        /// <param name="description">The value of description</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerContactSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerContact> _source,
            string personnelNumber, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.LogisticsElectronicAddressMethodType> type, 
            string locator, 
            string description)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PersonnelNumber", personnelNumber }, 
                { "Type", type }, 
                { "Locator", locator }, 
                { "Description", description }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerContactSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentRule as global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentRule as global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="garnishmentTaxLevyType">The value of garnishmentTaxLevyType</param>
        /// <param name="personnelNumber">The value of personnelNumber</param>
        /// <param name="stateId">The value of stateId</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentRule> _source,
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.PayrollGarnishmentTaxLevyType> garnishmentTaxLevyType, 
            string personnelNumber, 
            string stateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GarnishmentTaxLevyType", garnishmentTaxLevyType }, 
                { "PersonnelNumber", personnelNumber }, 
                { "StateId", stateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkerGarnishmentRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicy as global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicy as global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="policyName">The value of policyName</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicy> _source,
            string policyName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PolicyName", policyName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductReadinessPolicySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseInventoryStatusOnHandIncludingCatchWeightItem as global::Microsoft.Dynamics.DataEntities.WarehouseInventoryStatusOnHandIncludingCatchWeightItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseInventoryStatusOnHandIncludingCatchWeightItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseInventoryStatusOnHandIncludingCatchWeightItem> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WarehouseInventoryStatusOnHandIncludingCatchWeightItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WarehouseInventoryStatusOnHandIncludingCatchWeightItem as global::Microsoft.Dynamics.DataEntities.WarehouseInventoryStatusOnHandIncludingCatchWeightItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="inventorySiteId">The value of inventorySiteId</param>
        /// <param name="inventoryWarehouseId">The value of inventoryWarehouseId</param>
        /// <param name="inventoryStatusId">The value of inventoryStatusId</param>
        public static global::Microsoft.Dynamics.DataEntities.WarehouseInventoryStatusOnHandIncludingCatchWeightItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WarehouseInventoryStatusOnHandIncludingCatchWeightItem> _source,
            string dataAreaId, 
            string itemNumber, 
            string productColorId, 
            string productConfigurationId, 
            string productSizeId, 
            string productStyleId, 
            string productVersionId, 
            string inventorySiteId, 
            string inventoryWarehouseId, 
            string inventoryStatusId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemNumber", itemNumber }, 
                { "ProductColorId", productColorId }, 
                { "ProductConfigurationId", productConfigurationId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "InventorySiteId", inventorySiteId }, 
                { "InventoryWarehouseId", inventoryWarehouseId }, 
                { "InventoryStatusId", inventoryStatusId }
            };
            return new global::Microsoft.Dynamics.DataEntities.WarehouseInventoryStatusOnHandIncludingCatchWeightItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalHeader as global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalHeader as global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalHeader> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.LedgerReportingCurrencyAdjustmentJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailParameter as global::Microsoft.Dynamics.DataEntities.RetailParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailParameter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailParameter as global::Microsoft.Dynamics.DataEntities.RetailParameterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailParameterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailParameter> _source,
            string dataAreaId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailParameterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankTransactionType as global::Microsoft.Dynamics.DataEntities.BankTransactionTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BankTransactionTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankTransactionType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BankTransactionTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankTransactionType as global::Microsoft.Dynamics.DataEntities.BankTransactionTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="transactionTypeId">The value of transactionTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.BankTransactionTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankTransactionType> _source,
            string dataAreaId, 
            string transactionTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TransactionTypeId", transactionTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BankTransactionTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryType as global::Microsoft.Dynamics.DataEntities.InjuryTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.InjuryTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.InjuryType as global::Microsoft.Dynamics.DataEntities.InjuryTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="injuryTypeId">The value of injuryTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.InjuryTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.InjuryType> _source,
            string injuryTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "InjuryTypeId", injuryTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.InjuryTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalHeader as global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalHeader as global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="journalBatchNumber">The value of journalBatchNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalHeader> _source,
            string dataAreaId, 
            string journalBatchNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "JournalBatchNumber", journalBatchNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CustomerPaymentJournalHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TransportationAppointment as global::Microsoft.Dynamics.DataEntities.TransportationAppointmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TransportationAppointmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransportationAppointment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TransportationAppointmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TransportationAppointment as global::Microsoft.Dynamics.DataEntities.TransportationAppointmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="appointmentId">The value of appointmentId</param>
        public static global::Microsoft.Dynamics.DataEntities.TransportationAppointmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransportationAppointment> _source,
            string dataAreaId, 
            string appointmentId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "AppointmentId", appointmentId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TransportationAppointmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CodaAccountStatementLines as global::Microsoft.Dynamics.DataEntities.CodaAccountStatementLinesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CodaAccountStatementLinesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CodaAccountStatementLines> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CodaAccountStatementLinesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CodaAccountStatementLines as global::Microsoft.Dynamics.DataEntities.CodaAccountStatementLinesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="gUID">The value of gUID</param>
        public static global::Microsoft.Dynamics.DataEntities.CodaAccountStatementLinesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CodaAccountStatementLines> _source,
            string dataAreaId, 
            global::System.Guid gUID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "GUID", gUID }
            };
            return new global::Microsoft.Dynamics.DataEntities.CodaAccountStatementLinesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PWPVendorRetentionSetting as global::Microsoft.Dynamics.DataEntities.PWPVendorRetentionSettingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PWPVendorRetentionSettingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PWPVendorRetentionSetting> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PWPVendorRetentionSettingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PWPVendorRetentionSetting as global::Microsoft.Dynamics.DataEntities.PWPVendorRetentionSettingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="projId">The value of projId</param>
        /// <param name="vendorId">The value of vendorId</param>
        /// <param name="vendorGroup">The value of vendorGroup</param>
        public static global::Microsoft.Dynamics.DataEntities.PWPVendorRetentionSettingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PWPVendorRetentionSetting> _source,
            string dataAreaId, 
            string projId, 
            string vendorId, 
            string vendorGroup)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProjId", projId }, 
                { "VendorId", vendorId }, 
                { "VendorGroup", vendorGroup }
            };
            return new global::Microsoft.Dynamics.DataEntities.PWPVendorRetentionSettingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingPeriod as global::Microsoft.Dynamics.DataEntities.WithholdingPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingPeriod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WithholdingPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WithholdingPeriod as global::Microsoft.Dynamics.DataEntities.WithholdingPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="taxWithholdPeriod">The value of taxWithholdPeriod</param>
        /// <param name="taxWithholdFromDate">The value of taxWithholdFromDate</param>
        /// <param name="taxWithholdToDate">The value of taxWithholdToDate</param>
        public static global::Microsoft.Dynamics.DataEntities.WithholdingPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WithholdingPeriod> _source,
            string dataAreaId, 
            string taxWithholdPeriod, 
            global::System.DateTimeOffset taxWithholdFromDate, 
            global::System.DateTimeOffset taxWithholdToDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TaxWithholdPeriod", taxWithholdPeriod }, 
                { "TaxWithholdFromDate", taxWithholdFromDate }, 
                { "TaxWithholdToDate", taxWithholdToDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.WithholdingPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineCharge as global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineChargeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineChargeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineCharge> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineChargeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineCharge as global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineChargeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        /// <param name="purchaseOrderLineNumber">The value of purchaseOrderLineNumber</param>
        /// <param name="chargeLineNumber">The value of chargeLineNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineChargeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineCharge> _source,
            string dataAreaId, 
            string purchaseOrderNumber, 
            long purchaseOrderLineNumber, 
            decimal chargeLineNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }, 
                { "PurchaseOrderLineNumber", purchaseOrderLineNumber }, 
                { "ChargeLineNumber", chargeLineNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderLineChargeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkflowWorkItem as global::Microsoft.Dynamics.DataEntities.WorkflowWorkItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkflowWorkItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowWorkItem> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WorkflowWorkItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WorkflowWorkItem as global::Microsoft.Dynamics.DataEntities.WorkflowWorkItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::Microsoft.Dynamics.DataEntities.WorkflowWorkItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowWorkItem> _source,
            global::System.Guid id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::Microsoft.Dynamics.DataEntities.WorkflowWorkItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseLine as global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseLine as global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="headerProductNumber">The value of headerProductNumber</param>
        /// <param name="headerProductVersionId">The value of headerProductVersionId</param>
        /// <param name="lineNumber">The value of lineNumber</param>
        /// <param name="releasingLegalEntityId">The value of releasingLegalEntityId</param>
        /// <param name="releaseStatus">The value of releaseStatus</param>
        public static global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseLine> _source,
            string dataAreaId, 
            string headerProductNumber, 
            string headerProductVersionId, 
            decimal lineNumber, 
            string releasingLegalEntityId, 
            global::System.Nullable<global::Microsoft.Dynamics.DataEntities.EngChgReleaseStatus> releaseStatus)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "HeaderProductNumber", headerProductNumber }, 
                { "HeaderProductVersionId", headerProductVersionId }, 
                { "LineNumber", lineNumber }, 
                { "ReleasingLegalEntityId", releasingLegalEntityId }, 
                { "ReleaseStatus", releaseStatus }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReceivedProductReleaseLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheck as global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheck> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheck as global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="productReadinessCheckRecordId">The value of productReadinessCheckRecordId</param>
        public static global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheck> _source,
            string dataAreaId, 
            long productReadinessCheckRecordId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ProductReadinessCheckRecordId", productReadinessCheckRecordId }
            };
            return new global::Microsoft.Dynamics.DataEntities.ReleasedProductReadinessCheckSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailItemLabel as global::Microsoft.Dynamics.DataEntities.RetailItemLabelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailItemLabelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailItemLabel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailItemLabelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailItemLabel as global::Microsoft.Dynamics.DataEntities.RetailItemLabelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="itemId">The value of itemId</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="unitOfMeasureSymbol">The value of unitOfMeasureSymbol</param>
        /// <param name="validOnDate">The value of validOnDate</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailItemLabelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailItemLabel> _source,
            string dataAreaId, 
            string itemId, 
            string storeNumber, 
            string unitOfMeasureSymbol, 
            global::System.DateTimeOffset validOnDate)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "ItemId", itemId }, 
                { "StoreNumber", storeNumber }, 
                { "UnitOfMeasureSymbol", unitOfMeasureSymbol }, 
                { "ValidOnDate", validOnDate }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailItemLabelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableTaxLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableTaxLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableTaxLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableTaxLine> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableTaxLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableTaxLine as global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableTaxLineSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="operatingUnitNumber">The value of operatingUnitNumber</param>
        /// <param name="registerNumber">The value of registerNumber</param>
        /// <param name="storeNumber">The value of storeNumber</param>
        /// <param name="transactionId">The value of transactionId</param>
        /// <param name="salesLineNumber">The value of salesLineNumber</param>
        /// <param name="taxCode">The value of taxCode</param>
        public static global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableTaxLineSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableTaxLine> _source,
            string dataAreaId, 
            string operatingUnitNumber, 
            string registerNumber, 
            string storeNumber, 
            string transactionId, 
            decimal salesLineNumber, 
            string taxCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "OperatingUnitNumber", operatingUnitNumber }, 
                { "RegisterNumber", registerNumber }, 
                { "StoreNumber", storeNumber }, 
                { "TransactionId", transactionId }, 
                { "SalesLineNumber", salesLineNumber }, 
                { "TaxCode", taxCode }
            };
            return new global::Microsoft.Dynamics.DataEntities.RetailTransactionAuditableTaxLineSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductCategory as global::Microsoft.Dynamics.DataEntities.ProductCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.ProductCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.ProductCategory as global::Microsoft.Dynamics.DataEntities.ProductCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="productCategoryHierarchyName">The value of productCategoryHierarchyName</param>
        /// <param name="categoryName">The value of categoryName</param>
        public static global::Microsoft.Dynamics.DataEntities.ProductCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ProductCategory> _source,
            string productCategoryHierarchyName, 
            string categoryName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProductCategoryHierarchyName", productCategoryHierarchyName }, 
                { "CategoryName", categoryName }
            };
            return new global::Microsoft.Dynamics.DataEntities.ProductCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductV2 as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductV2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductV2 as global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductV2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="tradeAllowanceAgreementMerchandisingEventId">The value of tradeAllowanceAgreementMerchandisingEventId</param>
        /// <param name="customerAccountNumber">The value of customerAccountNumber</param>
        /// <param name="tradeAllowanceAgreementId">The value of tradeAllowanceAgreementId</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="promotionalProductUnitSymbol">The value of promotionalProductUnitSymbol</param>
        /// <param name="productColorId">The value of productColorId</param>
        /// <param name="productStyleId">The value of productStyleId</param>
        /// <param name="productVersionId">The value of productVersionId</param>
        /// <param name="productSizeId">The value of productSizeId</param>
        /// <param name="productConfigurationId">The value of productConfigurationId</param>
        public static global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductV2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductV2> _source,
            string dataAreaId, 
            string tradeAllowanceAgreementMerchandisingEventId, 
            string customerAccountNumber, 
            string tradeAllowanceAgreementId, 
            string itemNumber, 
            string promotionalProductUnitSymbol, 
            string productColorId, 
            string productStyleId, 
            string productVersionId, 
            string productSizeId, 
            string productConfigurationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TradeAllowanceAgreementMerchandisingEventId", tradeAllowanceAgreementMerchandisingEventId }, 
                { "CustomerAccountNumber", customerAccountNumber }, 
                { "TradeAllowanceAgreementId", tradeAllowanceAgreementId }, 
                { "ItemNumber", itemNumber }, 
                { "PromotionalProductUnitSymbol", promotionalProductUnitSymbol }, 
                { "ProductColorId", productColorId }, 
                { "ProductStyleId", productStyleId }, 
                { "ProductVersionId", productVersionId }, 
                { "ProductSizeId", productSizeId }, 
                { "ProductConfigurationId", productConfigurationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.TradeAllowanceAgreementMerchandisingEventProductV2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceManualPremiumRegistration as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceManualPremiumRegistrationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceManualPremiumRegistrationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceManualPremiumRegistration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceManualPremiumRegistrationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceManualPremiumRegistration as global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceManualPremiumRegistrationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="timeProfileDate">The value of timeProfileDate</param>
        /// <param name="manualPremiumRegistrationEntryNumber">The value of manualPremiumRegistrationEntryNumber</param>
        /// <param name="workerPersonnelNumber">The value of workerPersonnelNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceManualPremiumRegistrationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceManualPremiumRegistration> _source,
            string dataAreaId, 
            global::System.DateTimeOffset timeProfileDate, 
            long manualPremiumRegistrationEntryNumber, 
            string workerPersonnelNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "TimeProfileDate", timeProfileDate }, 
                { "ManualPremiumRegistrationEntryNumber", manualPremiumRegistrationEntryNumber }, 
                { "WorkerPersonnelNumber", workerPersonnelNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.TimeAndAttendanceManualPremiumRegistrationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EarningStatement as global::Microsoft.Dynamics.DataEntities.EarningStatementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.EarningStatementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EarningStatement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.EarningStatementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.EarningStatement as global::Microsoft.Dynamics.DataEntities.EarningStatementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="company">The value of company</param>
        /// <param name="earningsStatementNumber">The value of earningsStatementNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.EarningStatementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EarningStatement> _source,
            string company, 
            string earningsStatementNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Company", company }, 
                { "EarningsStatementNumber", earningsStatementNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.EarningStatementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderStandardProjectGroup as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderStandardProjectGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderStandardProjectGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderStandardProjectGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderStandardProjectGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderStandardProjectGroup as global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderStandardProjectGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="workOrderTypeId">The value of workOrderTypeId</param>
        /// <param name="maintenanceAssetTypeId">The value of maintenanceAssetTypeId</param>
        /// <param name="maintenanceAssetId">The value of maintenanceAssetId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderStandardProjectGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderStandardProjectGroup> _source,
            string dataAreaId, 
            string workOrderTypeId, 
            string maintenanceAssetTypeId, 
            string maintenanceAssetId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "WorkOrderTypeId", workOrderTypeId }, 
                { "MaintenanceAssetTypeId", maintenanceAssetTypeId }, 
                { "MaintenanceAssetId", maintenanceAssetId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetMaintenanceWorkOrderStandardProjectGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyHeader as global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyHeader as global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="rFQNumber">The value of rFQNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyHeader> _source,
            string dataAreaId, 
            string rFQNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "RFQNumber", rFQNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.RequestForQuotationReplyHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RatingModel as global::Microsoft.Dynamics.DataEntities.RatingModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.RatingModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RatingModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.RatingModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.RatingModel as global::Microsoft.Dynamics.DataEntities.RatingModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="ratingModelId">The value of ratingModelId</param>
        public static global::Microsoft.Dynamics.DataEntities.RatingModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RatingModel> _source,
            string ratingModelId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RatingModelId", ratingModelId }
            };
            return new global::Microsoft.Dynamics.DataEntities.RatingModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankBillOfExchangeLayout as global::Microsoft.Dynamics.DataEntities.BankBillOfExchangeLayoutSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BankBillOfExchangeLayoutSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankBillOfExchangeLayout> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BankBillOfExchangeLayoutSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BankBillOfExchangeLayout as global::Microsoft.Dynamics.DataEntities.BankBillOfExchangeLayoutSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bankAccountId">The value of bankAccountId</param>
        public static global::Microsoft.Dynamics.DataEntities.BankBillOfExchangeLayoutSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BankBillOfExchangeLayout> _source,
            string dataAreaId, 
            string bankAccountId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BankAccountId", bankAccountId }
            };
            return new global::Microsoft.Dynamics.DataEntities.BankBillOfExchangeLayoutSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.I9DocumentType as global::Microsoft.Dynamics.DataEntities.I9DocumentTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.I9DocumentTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.I9DocumentType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.I9DocumentTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.I9DocumentType as global::Microsoft.Dynamics.DataEntities.I9DocumentTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="i9DocumentTypeId">The value of i9DocumentTypeId</param>
        public static global::Microsoft.Dynamics.DataEntities.I9DocumentTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.I9DocumentType> _source,
            string i9DocumentTypeId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "I9DocumentTypeId", i9DocumentTypeId }
            };
            return new global::Microsoft.Dynamics.DataEntities.I9DocumentTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PerfPeriod as global::Microsoft.Dynamics.DataEntities.PerfPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PerfPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PerfPeriod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PerfPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PerfPeriod as global::Microsoft.Dynamics.DataEntities.PerfPeriodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="perfPeriodId">The value of perfPeriodId</param>
        public static global::Microsoft.Dynamics.DataEntities.PerfPeriodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PerfPeriod> _source,
            string perfPeriodId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PerfPeriodId", perfPeriodId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PerfPeriodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeader as global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeader as global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="purchaseOrderNumber">The value of purchaseOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeader> _source,
            string dataAreaId, 
            string purchaseOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PurchaseOrderNumber", purchaseOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.PurchaseOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdvancedRuleStructureActivation as global::Microsoft.Dynamics.DataEntities.AdvancedRuleStructureActivationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AdvancedRuleStructureActivationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdvancedRuleStructureActivation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AdvancedRuleStructureActivationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AdvancedRuleStructureActivation as global::Microsoft.Dynamics.DataEntities.AdvancedRuleStructureActivationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="advancedRuleStructure">The value of advancedRuleStructure</param>
        public static global::Microsoft.Dynamics.DataEntities.AdvancedRuleStructureActivationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AdvancedRuleStructureActivation> _source,
            string advancedRuleStructure)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AdvancedRuleStructure", advancedRuleStructure }
            };
            return new global::Microsoft.Dynamics.DataEntities.AdvancedRuleStructureActivationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateADARequirement as global::Microsoft.Dynamics.DataEntities.JobTemplateADARequirementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateADARequirementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateADARequirement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateADARequirementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.JobTemplateADARequirement as global::Microsoft.Dynamics.DataEntities.JobTemplateADARequirementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jobTemplateId">The value of jobTemplateId</param>
        public static global::Microsoft.Dynamics.DataEntities.JobTemplateADARequirementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.JobTemplateADARequirement> _source,
            string jobTemplateId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JobTemplateId", jobTemplateId }
            };
            return new global::Microsoft.Dynamics.DataEntities.JobTemplateADARequirementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSSalesOrderHeader as global::Microsoft.Dynamics.DataEntities.CDSSalesOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSSalesOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSSalesOrderHeader> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.CDSSalesOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.CDSSalesOrderHeader as global::Microsoft.Dynamics.DataEntities.CDSSalesOrderHeaderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="salesOrderNumber">The value of salesOrderNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.CDSSalesOrderHeaderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSSalesOrderHeader> _source,
            string dataAreaId, 
            string salesOrderNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "SalesOrderNumber", salesOrderNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.CDSSalesOrderHeaderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementAccrualBalance as global::Microsoft.Dynamics.DataEntities.PayStatementAccrualBalanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementAccrualBalanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementAccrualBalance> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PayStatementAccrualBalanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PayStatementAccrualBalance as global::Microsoft.Dynamics.DataEntities.PayStatementAccrualBalanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="payStatementNumber">The value of payStatementNumber</param>
        /// <param name="accrualId">The value of accrualId</param>
        public static global::Microsoft.Dynamics.DataEntities.PayStatementAccrualBalanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PayStatementAccrualBalance> _source,
            string dataAreaId, 
            string payStatementNumber, 
            string accrualId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "PayStatementNumber", payStatementNumber }, 
                { "AccrualId", accrualId }
            };
            return new global::Microsoft.Dynamics.DataEntities.PayStatementAccrualBalanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV3 as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV3> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV3 as global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV3Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="bOMId">The value of bOMId</param>
        /// <param name="lineCreationSequenceNumber">The value of lineCreationSequenceNumber</param>
        public static global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV3Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV3> _source,
            string dataAreaId, 
            string bOMId, 
            int lineCreationSequenceNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "BOMId", bOMId }, 
                { "LineCreationSequenceNumber", lineCreationSequenceNumber }
            };
            return new global::Microsoft.Dynamics.DataEntities.BillOfMaterialsLineV3Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetLocation as global::Microsoft.Dynamics.DataEntities.AssetLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetLocation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.AssetLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.AssetLocation as global::Microsoft.Dynamics.DataEntities.AssetLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dataAreaId">The value of dataAreaId</param>
        /// <param name="locationId">The value of locationId</param>
        public static global::Microsoft.Dynamics.DataEntities.AssetLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.AssetLocation> _source,
            string dataAreaId, 
            string locationId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "dataAreaId", dataAreaId }, 
                { "LocationId", locationId }
            };
            return new global::Microsoft.Dynamics.DataEntities.AssetLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionDetail as global::Microsoft.Dynamics.DataEntities.PositionDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.PositionDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.PositionDetail as global::Microsoft.Dynamics.DataEntities.PositionDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="positionId">The value of positionId</param>
        /// <param name="validFrom">The value of validFrom</param>
        /// <param name="validTo">The value of validTo</param>
        public static global::Microsoft.Dynamics.DataEntities.PositionDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PositionDetail> _source,
            string positionId, 
            global::System.DateTimeOffset validFrom, 
            global::System.DateTimeOffset validTo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PositionId", positionId }, 
                { "ValidFrom", validFrom }, 
                { "ValidTo", validTo }
            };
            return new global::Microsoft.Dynamics.DataEntities.PositionDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WriteOffFinancialReasonsSetup as global::Microsoft.Dynamics.DataEntities.WriteOffFinancialReasonsSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.WriteOffFinancialReasonsSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WriteOffFinancialReasonsSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.WriteOffFinancialReasonsSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.WriteOffFinancialReasonsSetup as global::Microsoft.Dynamics.DataEntities.WriteOffFinancialReasonsSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="company">The value of company</param>
        /// <param name="writeOffReason">The value of writeOffReason</param>
        public static global::Microsoft.Dynamics.DataEntities.WriteOffFinancialReasonsSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WriteOffFinancialReasonsSetup> _source,
            string company, 
            string writeOffReason)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Company", company }, 
                { "WriteOffReason", writeOffReason }
            };
            return new global::Microsoft.Dynamics.DataEntities.WriteOffFinancialReasonsSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SharedCategory as global::Microsoft.Dynamics.DataEntities.SharedCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::Microsoft.Dynamics.DataEntities.SharedCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SharedCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::Microsoft.Dynamics.DataEntities.SharedCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::Microsoft.Dynamics.DataEntities.SharedCategory as global::Microsoft.Dynamics.DataEntities.SharedCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="categoryId">The value of categoryId</param>
        public static global::Microsoft.Dynamics.DataEntities.SharedCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.SharedCategory> _source,
            string categoryId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CategoryId", categoryId }
            };
            return new global::Microsoft.Dynamics.DataEntities.SharedCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// There are no comments for ExportToExternalStorage in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> ExportToExternalStorage(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.CDSAIntegrationEntity> _source, string measurementName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ExportToExternalStorage"), new global::Microsoft.OData.Client.BodyOperationParameter("measurementName", measurementName));
        }
        /// <summary>
        /// There are no comments for DataValidationProjectTaskStatusEntityProjectName in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> DataValidationProjectTaskStatusEntityProjectName(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValidationProjectTaskStatus> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.DataValidationProjectTaskStatusEntityProjectName"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for subscribeToInstantFlow in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> subscribeToInstantFlow(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlow> _source, string _entityName, string _flowEndpointURL, string _legalEntity, string _flowName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.subscribeToInstantFlow"), new global::Microsoft.OData.Client.BodyOperationParameter("_entityName", _entityName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("_flowEndpointURL", _flowEndpointURL),
                    new global::Microsoft.OData.Client.BodyOperationParameter("_legalEntity", _legalEntity),
                    new global::Microsoft.OData.Client.BodyOperationParameter("_flowName", _flowName));
        }
        /// <summary>
        /// There are no comments for unsubscribeFromInstantFlow in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> unsubscribeFromInstantFlow(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowInstantFlow> _source, string _entityName, string _legalEntity, string _url)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.unsubscribeFromInstantFlow"), new global::Microsoft.OData.Client.BodyOperationParameter("_entityName", _entityName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("_legalEntity", _legalEntity),
                    new global::Microsoft.OData.Client.BodyOperationParameter("_url", _url));
        }
        /// <summary>
        /// There are no comments for VendorPaymentJournalLineEntityOffsetAccountTypeFieldCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> VendorPaymentJournalLineEntityOffsetAccountTypeFieldCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLine> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineEntityOffsetAccountTypeFieldCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for VendorPaymentJournalLineEntityAccountTypeFieldCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> VendorPaymentJournalLineEntityAccountTypeFieldCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendorPaymentJournalLine> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.VendorPaymentJournalLineEntityAccountTypeFieldCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue11CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue11CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue11CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue8CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue8CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue8CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityTransactionCurrencyCodeCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityTransactionCurrencyCodeCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityTransactionCurrencyCodeCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue9CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue9CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue9CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityProjectIdCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityProjectIdCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityProjectIdCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityAssetIdCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityAssetIdCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityAssetIdCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityPositionIdCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityPositionIdCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityPositionIdCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityProposedProjectNameCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityProposedProjectNameCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityProposedProjectNameCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue5CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue5CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue5CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue7CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue7CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue7CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue10CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue10CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue10CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue4CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue4CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue4CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityProposedAssetNameCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityProposedAssetNameCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityProposedAssetNameCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue6CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue6CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue6CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue1CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue1CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue1CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue3CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue3CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue3CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for BudgetPlanWorksheetEntityDimensionValue2CustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> BudgetPlanWorksheetEntityDimensionValue2CustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BudgetPlanWorksheet> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.BudgetPlanWorksheetEntityDimensionValue2CustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for query in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<global::Microsoft.Dynamics.DataEntities.DataManagementEntity> query(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementEntity> _source, global::System.Collections.Generic.ICollection<int> categoryFilters, global::System.Collections.Generic.ICollection<string> configKeyFilters, global::System.Collections.Generic.ICollection<string> moduleFilters, global::System.Collections.Generic.ICollection<string> countryRegionCodeFilters, global::System.Collections.Generic.ICollection<int> isSharedFilters, global::System.Collections.Generic.ICollection<string> tagFilters)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::Microsoft.Dynamics.DataEntities.DataManagementEntity>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.query"), new global::Microsoft.OData.Client.BodyOperationParameter("categoryFilters", categoryFilters),
                    new global::Microsoft.OData.Client.BodyOperationParameter("configKeyFilters", configKeyFilters),
                    new global::Microsoft.OData.Client.BodyOperationParameter("moduleFilters", moduleFilters),
                    new global::Microsoft.OData.Client.BodyOperationParameter("countryRegionCodeFilters", countryRegionCodeFilters),
                    new global::Microsoft.OData.Client.BodyOperationParameter("isSharedFilters", isSharedFilters),
                    new global::Microsoft.OData.Client.BodyOperationParameter("tagFilters", tagFilters));
        }
        /// <summary>
        /// There are no comments for GetApplicationBuildVersion in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetApplicationBuildVersion(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementEntity> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetApplicationBuildVersion"));
        }
        /// <summary>
        /// There are no comments for GetPlatformBuildVersion in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetPlatformBuildVersion(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementEntity> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetPlatformBuildVersion"));
        }
        /// <summary>
        /// There are no comments for fault in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery fault(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.WorkflowExternalElement> _source, string _faultMessage)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.fault"), new global::Microsoft.OData.Client.BodyOperationParameter("_faultMessage", _faultMessage));
        }
        /// <summary>
        /// There are no comments for complete in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery complete(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.WorkflowExternalElement> _source, string _comment)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.complete"), new global::Microsoft.OData.Client.BodyOperationParameter("_comment", _comment));
        }
        /// <summary>
        /// There are no comments for RemoveApproval in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery RemoveApproval(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.RouteVersionV2> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.RemoveApproval"));
        }
        /// <summary>
        /// There are no comments for Activate in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Activate(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.RouteVersionV2> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Activate"));
        }
        /// <summary>
        /// There are no comments for Approve in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Approve(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.RouteVersionV2> _source, string _approverPersonnelNumber)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Approve"), new global::Microsoft.OData.Client.BodyOperationParameter("_approverPersonnelNumber", _approverPersonnelNumber));
        }
        /// <summary>
        /// There are no comments for DataValidationProjectTaskEntityProjectName in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> DataValidationProjectTaskEntityProjectName(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.ValidationProjectTask> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.DataValidationProjectTaskEntityProjectName"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for GetProjectTypes in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> GetProjectTypes(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.Project> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetProjectTypes"));
        }
        /// <summary>
        /// There are no comments for QueryDistictTenderTypeIdAndName in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTable> QueryDistictTenderTypeIdAndName(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTable> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::Microsoft.Dynamics.DataEntities.RetailStoreTenderTypeTable>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.QueryDistictTenderTypeIdAndName"));
        }
        /// <summary>
        /// There are no comments for InitializeDataManagement in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery InitializeDataManagement(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.InitializeDataManagement"));
        }
        /// <summary>
        /// There are no comments for GetExportedFileUrl in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetExportedFileUrl(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string executionId, string entityName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetExportedFileUrl"), new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("entityName", entityName));
        }
        /// <summary>
        /// There are no comments for GetExecutionSummaryPageUrl in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetExecutionSummaryPageUrl(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string executionId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetExecutionSummaryPageUrl"), new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId));
        }
        /// <summary>
        /// There are no comments for ExportToPackageDeltaAsync in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ExportToPackageDeltaAsync(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string definitionGroupId, string packageName, string executionId, bool reExecute, string legalEntityId, string entityList)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ExportToPackageDeltaAsync"), new global::Microsoft.OData.Client.BodyOperationParameter("definitionGroupId", definitionGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("packageName", packageName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("reExecute", reExecute),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("entityList", entityList));
        }
        /// <summary>
        /// There are no comments for ImportFromPackageAsync in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ImportFromPackageAsync(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string packageUrl, string definitionGroupId, string executionId, bool execute, bool overwrite, string legalEntityId, bool failOnError, bool runAsyncWithoutBatch, int thresholdToRunInBatch)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ImportFromPackageAsync"), new global::Microsoft.OData.Client.BodyOperationParameter("packageUrl", packageUrl),
                    new global::Microsoft.OData.Client.BodyOperationParameter("definitionGroupId", definitionGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("execute", execute),
                    new global::Microsoft.OData.Client.BodyOperationParameter("overwrite", overwrite),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("failOnError", failOnError),
                    new global::Microsoft.OData.Client.BodyOperationParameter("runAsyncWithoutBatch", runAsyncWithoutBatch),
                    new global::Microsoft.OData.Client.BodyOperationParameter("thresholdToRunInBatch", thresholdToRunInBatch));
        }
        /// <summary>
        /// There are no comments for InitializeDataManagementAsync in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery InitializeDataManagementAsync(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.InitializeDataManagementAsync"));
        }
        /// <summary>
        /// There are no comments for GetExportedPackageUrl in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetExportedPackageUrl(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string executionId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetExportedPackageUrl"), new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId));
        }
        /// <summary>
        /// There are no comments for ExportToPackageDelta in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ExportToPackageDelta(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string definitionGroupId, string packageName, string executionId, bool reExecute, string legalEntityId, string entityList)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ExportToPackageDelta"), new global::Microsoft.OData.Client.BodyOperationParameter("definitionGroupId", definitionGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("packageName", packageName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("reExecute", reExecute),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("entityList", entityList));
        }
        /// <summary>
        /// There are no comments for GetImportTargetErrorKeysFileUrl in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetImportTargetErrorKeysFileUrl(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string executionId, string entityName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetImportTargetErrorKeysFileUrl"), new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("entityName", entityName));
        }
        /// <summary>
        /// There are no comments for GetImportStagingErrorFileUrl in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetImportStagingErrorFileUrl(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string executionId, string entityName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetImportStagingErrorFileUrl"), new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("entityName", entityName));
        }
        /// <summary>
        /// There are no comments for ImportFromDMTPackage in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ImportFromDMTPackage(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string packageUrl, string definitionGroupId, string executionId, bool execute, bool overwrite, string legalEntityId, string importBatchGroupId, bool failOnError)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ImportFromDMTPackage"), new global::Microsoft.OData.Client.BodyOperationParameter("packageUrl", packageUrl),
                    new global::Microsoft.OData.Client.BodyOperationParameter("definitionGroupId", definitionGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("execute", execute),
                    new global::Microsoft.OData.Client.BodyOperationParameter("overwrite", overwrite),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("importBatchGroupId", importBatchGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("failOnError", failOnError));
        }
        /// <summary>
        /// There are no comments for GenerateImportTargetErrorKeysFile in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> GenerateImportTargetErrorKeysFile(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string executionId, string entityName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GenerateImportTargetErrorKeysFile"), new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("entityName", entityName));
        }
        /// <summary>
        /// There are no comments for GetExecutionErrors in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetExecutionErrors(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string executionId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetExecutionErrors"), new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId));
        }
        /// <summary>
        /// There are no comments for GetAzureWriteUrl in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetAzureWriteUrl(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string uniqueFileName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetAzureWriteUrl"), new global::Microsoft.OData.Client.BodyOperationParameter("uniqueFileName", uniqueFileName));
        }
        /// <summary>
        /// There are no comments for ExportToPackagePreviewAsync in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ExportToPackagePreviewAsync(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string definitionGroupId, string packageName, string executionId, bool reExecute, string legalEntityId, int exportPreviewCount)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ExportToPackagePreviewAsync"), new global::Microsoft.OData.Client.BodyOperationParameter("definitionGroupId", definitionGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("packageName", packageName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("reExecute", reExecute),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("exportPreviewCount", exportPreviewCount));
        }
        /// <summary>
        /// There are no comments for GetEntityExecutionSummaryStatusList in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> GetEntityExecutionSummaryStatusList(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string executionId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetEntityExecutionSummaryStatusList"), new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId));
        }
        /// <summary>
        /// There are no comments for GetExecutionSummaryStatus in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DMFExecutionSummaryStatus>> GetExecutionSummaryStatus(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string executionId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DMFExecutionSummaryStatus>>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetExecutionSummaryStatus"), new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId));
        }
        /// <summary>
        /// There are no comments for ExportToPackage in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ExportToPackage(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string definitionGroupId, string packageName, string executionId, bool reExecute, string legalEntityId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ExportToPackage"), new global::Microsoft.OData.Client.BodyOperationParameter("definitionGroupId", definitionGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("packageName", packageName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("reExecute", reExecute),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId));
        }
        /// <summary>
        /// There are no comments for ExportToPackagePreview in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ExportToPackagePreview(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string definitionGroupId, string packageName, string executionId, bool reExecute, string legalEntityId, int exportPreviewCount)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ExportToPackagePreview"), new global::Microsoft.OData.Client.BodyOperationParameter("definitionGroupId", definitionGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("packageName", packageName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("reExecute", reExecute),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("exportPreviewCount", exportPreviewCount));
        }
        /// <summary>
        /// There are no comments for ResetVersionToken in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> ResetVersionToken(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string definitionGroupId, string entityName, string sourceName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ResetVersionToken"), new global::Microsoft.OData.Client.BodyOperationParameter("definitionGroupId", definitionGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("entityName", entityName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("sourceName", sourceName));
        }
        /// <summary>
        /// There are no comments for GetEntitySequence in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetEntitySequence(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string listOfDataEntities)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetEntitySequence"), new global::Microsoft.OData.Client.BodyOperationParameter("listOfDataEntities", listOfDataEntities));
        }
        /// <summary>
        /// There are no comments for ImportFromPackage in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ImportFromPackage(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string packageUrl, string definitionGroupId, string executionId, bool execute, bool overwrite, string legalEntityId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ImportFromPackage"), new global::Microsoft.OData.Client.BodyOperationParameter("packageUrl", packageUrl),
                    new global::Microsoft.OData.Client.BodyOperationParameter("definitionGroupId", definitionGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("execute", execute),
                    new global::Microsoft.OData.Client.BodyOperationParameter("overwrite", overwrite),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId));
        }
        /// <summary>
        /// There are no comments for ExportFromPackage in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ExportFromPackage(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string packageUrl, string definitionGroupId, string executionId, bool execute, bool overwrite, string legalEntityId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ExportFromPackage"), new global::Microsoft.OData.Client.BodyOperationParameter("packageUrl", packageUrl),
                    new global::Microsoft.OData.Client.BodyOperationParameter("definitionGroupId", definitionGroupId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("executionId", executionId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("execute", execute),
                    new global::Microsoft.OData.Client.BodyOperationParameter("overwrite", overwrite),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId));
        }
        /// <summary>
        /// There are no comments for GetMessageStatus in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::System.Nullable<global::Microsoft.Dynamics.DataEntities.IntegrationActivityMessageStatus>> GetMessageStatus(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementDefinitionGroup> _source, string messageId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::System.Nullable<global::Microsoft.Dynamics.DataEntities.IntegrationActivityMessageStatus>>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetMessageStatus"), new global::Microsoft.OData.Client.BodyOperationParameter("messageId", messageId));
        }
        /// <summary>
        /// There are no comments for GetPrimaryCompanyContextForDWEntity in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetPrimaryCompanyContextForDWEntity(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, string entityName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetPrimaryCompanyContextForDWEntity"), new global::Microsoft.OData.Client.BodyOperationParameter("entityName", entityName));
        }
        /// <summary>
        /// There are no comments for ValidateAppUsers in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ValidateAppUsers(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, string appIds)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ValidateAppUsers"), new global::Microsoft.OData.Client.BodyOperationParameter("appIds", appIds));
        }
        /// <summary>
        /// There are no comments for ApiVersion in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ApiVersion(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ApiVersion"));
        }
        /// <summary>
        /// There are no comments for SetupDualWriteReconciliation in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery SetupDualWriteReconciliation(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, int reconciliationBatchJobPollIntervalMinutes, int localCommitTransactionExpirationMinutes)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.SetupDualWriteReconciliation"), new global::Microsoft.OData.Client.BodyOperationParameter("reconciliationBatchJobPollIntervalMinutes", reconciliationBatchJobPollIntervalMinutes),
                    new global::Microsoft.OData.Client.BodyOperationParameter("localCommitTransactionExpirationMinutes", localCommitTransactionExpirationMinutes));
        }
        /// <summary>
        /// There are no comments for WriteToEntityBatch in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> WriteToEntityBatch(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, string cdsInboundData)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.WriteToEntityBatch"), new global::Microsoft.OData.Client.BodyOperationParameter("cdsInboundData", cdsInboundData));
        }
        /// <summary>
        /// There are no comments for RemoveTransactionBreadCrumb in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery RemoveTransactionBreadCrumb(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, string transactionId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.RemoveTransactionBreadCrumb"), new global::Microsoft.OData.Client.BodyOperationParameter("transactionId", transactionId));
        }
        /// <summary>
        /// There are no comments for GetDualWriteSetupParameters in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetDualWriteSetupParameters(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetDualWriteSetupParameters"));
        }
        /// <summary>
        /// There are no comments for ResolveManualReconciliationData in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery ResolveManualReconciliationData(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, string transactionIdList, bool retryAutoResolution)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ResolveManualReconciliationData"), new global::Microsoft.OData.Client.BodyOperationParameter("transactionIdList", transactionIdList),
                    new global::Microsoft.OData.Client.BodyOperationParameter("retryAutoResolution", retryAutoResolution));
        }
        /// <summary>
        /// There are no comments for ClearCacheForDWProject in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery ClearCacheForDWProject(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, string projectName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ClearCacheForDWProject"), new global::Microsoft.OData.Client.BodyOperationParameter("projectName", projectName));
        }
        /// <summary>
        /// There are no comments for GetTransactionsToReconcile in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetTransactionsToReconcile(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, int timeOffsetInMinutes, global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DualWriteSourceType> sourceType)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetTransactionsToReconcile"), new global::Microsoft.OData.Client.BodyOperationParameter("timeOffsetInMinutes", timeOffsetInMinutes),
                    new global::Microsoft.OData.Client.BodyOperationParameter("sourceType", sourceType));
        }
        /// <summary>
        /// There are no comments for UpdateDualWriteSetupParameters in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery UpdateDualWriteSetupParameters(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, string serializedDualWriteSetupParameters)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.UpdateDualWriteSetupParameters"), new global::Microsoft.OData.Client.BodyOperationParameter("serializedDualWriteSetupParameters", serializedDualWriteSetupParameters));
        }
        /// <summary>
        /// There are no comments for RebuildCache in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery RebuildCache(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.RebuildCache"));
        }
        /// <summary>
        /// There are no comments for GetManualReconciliationData in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetManualReconciliationData(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, int pageNumber, int pageSize)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetManualReconciliationData"), new global::Microsoft.OData.Client.BodyOperationParameter("pageNumber", pageNumber),
                    new global::Microsoft.OData.Client.BodyOperationParameter("pageSize", pageSize));
        }
        /// <summary>
        /// There are no comments for ValidateCurrentUserRole in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> ValidateCurrentUserRole(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ValidateCurrentUserRole"));
        }
        /// <summary>
        /// There are no comments for ReconcileTransaction in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ReconcileTransaction(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, string transactionId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ReconcileTransaction"), new global::Microsoft.OData.Client.BodyOperationParameter("transactionId", transactionId));
        }
        /// <summary>
        /// There are no comments for ClearAllCache in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery ClearAllCache(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ClearAllCache"));
        }
        /// <summary>
        /// There are no comments for RunDocumentAction in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> RunDocumentAction(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, string entityName, string fieldValueMapping, string legalEntityId, string documentActionNameIdentifier)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.RunDocumentAction"), new global::Microsoft.OData.Client.BodyOperationParameter("entityName", entityName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("fieldValueMapping", fieldValueMapping),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("documentActionNameIdentifier", documentActionNameIdentifier));
        }
        /// <summary>
        /// There are no comments for StopDualWriteReconciliation in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery StopDualWriteReconciliation(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.StopDualWriteReconciliation"));
        }
        /// <summary>
        /// There are no comments for WriteToEntity in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> WriteToEntity(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DualWriteProjectConfiguration> _source, string entityName, string fieldValueMapping, string legalEntityId, bool runValidations, bool isDelete)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.WriteToEntity"), new global::Microsoft.OData.Client.BodyOperationParameter("entityName", entityName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("fieldValueMapping", fieldValueMapping),
                    new global::Microsoft.OData.Client.BodyOperationParameter("legalEntityId", legalEntityId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("runValidations", runValidations),
                    new global::Microsoft.OData.Client.BodyOperationParameter("isDelete", isDelete));
        }
        /// <summary>
        /// There are no comments for HoldAllJobs in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> HoldAllJobs(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchGroup> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.HoldAllJobs"));
        }
        /// <summary>
        /// There are no comments for CancelAllJobs in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> CancelAllJobs(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BatchGroup> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.CancelAllJobs"));
        }
        /// <summary>
        /// There are no comments for RemoveApproval in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery RemoveApproval(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.RouteVersion> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.RemoveApproval"));
        }
        /// <summary>
        /// There are no comments for Activate in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Activate(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.RouteVersion> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Activate"));
        }
        /// <summary>
        /// There are no comments for Approve in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Approve(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.RouteVersion> _source, string _approverPersonnelNumber)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Approve"), new global::Microsoft.OData.Client.BodyOperationParameter("_approverPersonnelNumber", _approverPersonnelNumber));
        }
        /// <summary>
        /// There are no comments for ImportTemplateFromPackageIgnoreMissingEntities in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> ImportTemplateFromPackageIgnoreMissingEntities(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplate> _source, string packageUrl, string templateId, bool overwrite)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ImportTemplateFromPackageIgnoreMissingEntities"), new global::Microsoft.OData.Client.BodyOperationParameter("packageUrl", packageUrl),
                    new global::Microsoft.OData.Client.BodyOperationParameter("templateId", templateId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("overwrite", overwrite));
        }
        /// <summary>
        /// There are no comments for ImportTemplateFromPackage in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ImportTemplateFromPackage(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplate> _source, string packageUrl, string templateId, bool overwrite)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ImportTemplateFromPackage"), new global::Microsoft.OData.Client.BodyOperationParameter("packageUrl", packageUrl),
                    new global::Microsoft.OData.Client.BodyOperationParameter("templateId", templateId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("overwrite", overwrite));
        }
        /// <summary>
        /// There are no comments for ExportTemplateToPackage in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ExportTemplateToPackage(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DataManagementTemplate> _source, string templateId, string packageName)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ExportTemplateToPackage"), new global::Microsoft.OData.Client.BodyOperationParameter("templateId", templateId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("packageName", packageName));
        }
        /// <summary>
        /// There are no comments for SyncPrinters in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery SyncPrinters(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp> _source, global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp clientApp, global::System.Collections.Generic.ICollection<string> printerPaths, global::System.Collections.Generic.ICollection<string> printerNames, global::System.Collections.Generic.ICollection<string> printerDescriptions)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.SyncPrinters"), new global::Microsoft.OData.Client.BodyOperationParameter("clientApp", clientApp),
                    new global::Microsoft.OData.Client.BodyOperationParameter("printerPaths", printerPaths),
                    new global::Microsoft.OData.Client.BodyOperationParameter("printerNames", printerNames),
                    new global::Microsoft.OData.Client.BodyOperationParameter("printerDescriptions", printerDescriptions));
        }
        /// <summary>
        /// There are no comments for GetDocumentUriByClient in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> GetDocumentUriByClient(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp> _source, string clientId, int maxDownloadMinutesPerUnit)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetDocumentUriByClient"), new global::Microsoft.OData.Client.BodyOperationParameter("clientId", clientId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("maxDownloadMinutesPerUnit", maxDownloadMinutesPerUnit));
        }
        /// <summary>
        /// There are no comments for GetRegisteredPrintersByClient in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> GetRegisteredPrintersByClient(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp> _source, string clientId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetRegisteredPrintersByClient"), new global::Microsoft.OData.Client.BodyOperationParameter("clientId", clientId));
        }
        /// <summary>
        /// There are no comments for UpdateJobStatus in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery UpdateJobStatus(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp> _source, string blobItemName, global::System.Nullable<global::Microsoft.Dynamics.DataEntities.DocumentRoutingJobStatus> jobStatus, string message)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.UpdateJobStatus"), new global::Microsoft.OData.Client.BodyOperationParameter("blobItemName", blobItemName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("jobStatus", jobStatus),
                    new global::Microsoft.OData.Client.BodyOperationParameter("message", message));
        }
        /// <summary>
        /// There are no comments for GetAzureStorageConnectionString in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetAzureStorageConnectionString(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetAzureStorageConnectionString"));
        }
        /// <summary>
        /// There are no comments for GetDocumentUri in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> GetDocumentUri(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp> _source, string queueName, int maxDownloadMinutesPerUnit)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetDocumentUri"), new global::Microsoft.OData.Client.BodyOperationParameter("queueName", queueName),
                    new global::Microsoft.OData.Client.BodyOperationParameter("maxDownloadMinutesPerUnit", maxDownloadMinutesPerUnit));
        }
        /// <summary>
        /// There are no comments for GetDocumentRoutingConfig in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetDocumentRoutingConfig(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetDocumentRoutingConfig"));
        }
        /// <summary>
        /// There are no comments for GetPlatformVersion in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> GetPlatformVersion(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DocumentRoutingClientApp> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.GetPlatformVersion"));
        }
        /// <summary>
        /// There are no comments for getLegalEntities in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> getLegalEntities(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.getLegalEntities"));
        }
        /// <summary>
        /// There are no comments for getBusinessEventsCatalog in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> getBusinessEventsCatalog(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source, string _businessEventsCategory)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.getBusinessEventsCatalog"), new global::Microsoft.OData.Client.BodyOperationParameter("_businessEventsCategory", _businessEventsCategory));
        }
        /// <summary>
        /// There are no comments for subscribeToBusinessEvent in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> subscribeToBusinessEvent(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source, string _businessEventsId, string _businessEventsFlowEndpointUrl, string _legalEntity)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.subscribeToBusinessEvent"), new global::Microsoft.OData.Client.BodyOperationParameter("_businessEventsId", _businessEventsId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("_businessEventsFlowEndpointUrl", _businessEventsFlowEndpointUrl),
                    new global::Microsoft.OData.Client.BodyOperationParameter("_legalEntity", _legalEntity));
        }
        /// <summary>
        /// There are no comments for getLegalEntitiesByEvent in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> getLegalEntitiesByEvent(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source, string _businessEventsId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.getLegalEntitiesByEvent"), new global::Microsoft.OData.Client.BodyOperationParameter("_businessEventsId", _businessEventsId));
        }
        /// <summary>
        /// There are no comments for getBusinessEventsCatalogWithId in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> getBusinessEventsCatalogWithId(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source, int _businessEventsCategory)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.getBusinessEventsCatalogWithId"), new global::Microsoft.OData.Client.BodyOperationParameter("_businessEventsCategory", _businessEventsCategory));
        }
        /// <summary>
        /// There are no comments for unsubscribeFromBusinessEvent in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> unsubscribeFromBusinessEvent(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source, string _businessEventsId, string _legalEntity)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.unsubscribeFromBusinessEvent"), new global::Microsoft.OData.Client.BodyOperationParameter("_businessEventsId", _businessEventsId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("_legalEntity", _legalEntity));
        }
        /// <summary>
        /// There are no comments for unsubscribeFromBusinessEventV2 in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> unsubscribeFromBusinessEventV2(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source, string _businessEventsId, string _legalEntity, string _url)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.unsubscribeFromBusinessEventV2"), new global::Microsoft.OData.Client.BodyOperationParameter("_businessEventsId", _businessEventsId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("_legalEntity", _legalEntity),
                    new global::Microsoft.OData.Client.BodyOperationParameter("_url", _url));
        }
        /// <summary>
        /// There are no comments for getBusinessEventsCategoriesWithId in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> getBusinessEventsCategoriesWithId(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.getBusinessEventsCategoriesWithId"));
        }
        /// <summary>
        /// There are no comments for getBusinessEventsCategories in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> getBusinessEventsCategories(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.getBusinessEventsCategories"));
        }
        /// <summary>
        /// There are no comments for getBusinessEventsCategoriesWithIdV2 in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery<string> getBusinessEventsCategoriesWithIdV2(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.BusinessEventsCatalog> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.getBusinessEventsCategoriesWithIdV2"));
        }
        /// <summary>
        /// There are no comments for SystemNotification in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> SystemNotification(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.SystemNotification> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.SystemNotification"));
        }
        /// <summary>
        /// There are no comments for ProjProjectTransferPriceV2EntityCategoryIdFieldCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ProjProjectTransferPriceV2EntityCategoryIdFieldCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferPrice> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ProjProjectTransferPriceV2EntityCategoryIdFieldCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for ProjProjectTransferPriceV2EntityCompanyFieldCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ProjProjectTransferPriceV2EntityCompanyFieldCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferPrice> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ProjProjectTransferPriceV2EntityCompanyFieldCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for ProjProjectTransferPriceV2EntityProjectIdFieldCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> ProjProjectTransferPriceV2EntityProjectIdFieldCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.TransferPrice> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.ProjProjectTransferPriceV2EntityProjectIdFieldCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for RemoveApproval in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery RemoveApproval(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.RemoveApproval"));
        }
        /// <summary>
        /// There are no comments for Activate in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Activate(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Activate"));
        }
        /// <summary>
        /// There are no comments for Approve in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Approve(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.BillOfMaterialsVersionODataV2> _source, string _approverPersonnelNumber)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Approve"), new global::Microsoft.OData.Client.BodyOperationParameter("_approverPersonnelNumber", _approverPersonnelNumber));
        }
        /// <summary>
        /// There are no comments for LedgerPeriodCloseTemplateTaskEntityTaskLinkLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> LedgerPeriodCloseTemplateTaskEntityTaskLinkLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTask> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.LedgerPeriodCloseTemplateTaskEntityTaskLinkLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for LedgerPeriodCloseTemplateTaskEntityTemplateLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> LedgerPeriodCloseTemplateTaskEntityTemplateLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTask> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.LedgerPeriodCloseTemplateTaskEntityTemplateLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for LedgerPeriodCloseTemplateTaskEntityClosingRoleLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> LedgerPeriodCloseTemplateTaskEntityClosingRoleLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTask> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.LedgerPeriodCloseTemplateTaskEntityClosingRoleLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for LedgerPeriodCloseTemplateTaskEntityAreaLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> LedgerPeriodCloseTemplateTaskEntityAreaLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTask> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.LedgerPeriodCloseTemplateTaskEntityAreaLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for LedgerPeriodCloseTemplateTaskEntityCompanySelectionLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> LedgerPeriodCloseTemplateTaskEntityCompanySelectionLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.PeriodCloseTemplateTask> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.LedgerPeriodCloseTemplateTaskEntityCompanySelectionLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for LedgerDefaultDescriptionsEntityLanguageFieldCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> LedgerDefaultDescriptionsEntityLanguageFieldCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DefaultDescriptions> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.LedgerDefaultDescriptionsEntityLanguageFieldCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for VendInvoiceJournalLineEntityAssetTransTypeFieldCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> VendInvoiceJournalLineEntityAssetTransTypeFieldCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLine> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.VendInvoiceJournalLineEntityAssetTransTypeFieldCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for VendInvoiceJournalLineEntityAccountTypeFieldCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> VendInvoiceJournalLineEntityAccountTypeFieldCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLine> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.VendInvoiceJournalLineEntityAccountTypeFieldCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for VendInvoiceJournalLineEntityOffsetAccountTypeFieldCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> VendInvoiceJournalLineEntityOffsetAccountTypeFieldCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.VendInvoiceJournalLine> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.VendInvoiceJournalLineEntityOffsetAccountTypeFieldCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for RemoveApproval in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery RemoveApproval(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.RouteHeader> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.RemoveApproval"));
        }
        /// <summary>
        /// There are no comments for Approve in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Approve(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.RouteHeader> _source, string _approverPersonnelNumber)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Approve"), new global::Microsoft.OData.Client.BodyOperationParameter("_approverPersonnelNumber", _approverPersonnelNumber));
        }
        /// <summary>
        /// There are no comments for Ship in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Ship(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.TransferOrderLine> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Ship"));
        }
        /// <summary>
        /// There are no comments for Receive in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Receive(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.TransferOrderLine> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Receive"));
        }
        /// <summary>
        /// There are no comments for DimensionIntegrationFormatEntityDimensionFormatTypeCustomLookup in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> DimensionIntegrationFormatEntityDimensionFormatTypeCustomLookup(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.DimensionIntegrationFormat> _source, global::System.Collections.Generic.ICollection<string> _fields)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.DimensionIntegrationFormatEntityDimensionFormatTypeCustomLookup"), new global::Microsoft.OData.Client.BodyOperationParameter("_fields", _fields));
        }
        /// <summary>
        /// There are no comments for SystemNotificationUser in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<string> SystemNotificationUser(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.SystemNotificationUser> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<string>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.SystemNotificationUser"));
        }
        /// <summary>
        /// There are no comments for Ship in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Ship(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.TransferOrderHeader> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Ship"));
        }
        /// <summary>
        /// There are no comments for Receive in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery Receive(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::Microsoft.Dynamics.DataEntities.TransferOrderHeader> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.Receive"));
        }
        /// <summary>
        /// There are no comments for complete in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuery complete(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowWorkItem> _source, global::System.Guid WorkflowWorkItemInstanceId, string Outcome, string Comment, string TargetUser, string RunAsUser)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.complete"), new global::Microsoft.OData.Client.BodyOperationParameter("WorkflowWorkItemInstanceId", WorkflowWorkItemInstanceId),
                    new global::Microsoft.OData.Client.BodyOperationParameter("Outcome", Outcome),
                    new global::Microsoft.OData.Client.BodyOperationParameter("Comment", Comment),
                    new global::Microsoft.OData.Client.BodyOperationParameter("TargetUser", TargetUser),
                    new global::Microsoft.OData.Client.BodyOperationParameter("RunAsUser", RunAsUser));
        }
        /// <summary>
        /// There are no comments for canValidate in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> canValidate(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowWorkItem> _source, global::System.Guid WorkflowWorkItemInstanceId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.canValidate"), new global::Microsoft.OData.Client.BodyOperationParameter("WorkflowWorkItemInstanceId", WorkflowWorkItemInstanceId));
        }
        /// <summary>
        /// There are no comments for validate in the schema.
        /// </summary>
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool> validate(this global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.WorkflowWorkItem> _source, global::System.Guid WorkflowWorkItemInstanceId)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<bool>(_source.Context, _source.AppendRequestUri("Microsoft.Dynamics.DataEntities.validate"), new global::Microsoft.OData.Client.BodyOperationParameter("WorkflowWorkItemInstanceId", WorkflowWorkItemInstanceId));
        }
    }
}
