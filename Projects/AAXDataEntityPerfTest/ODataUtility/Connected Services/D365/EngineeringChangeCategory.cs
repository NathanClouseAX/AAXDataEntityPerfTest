//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 2/4/2021 7:24:30 AM
namespace Microsoft.Dynamics.DataEntities
{
        /// <summary>
        /// There are no comments for EngineeringChangeCategorySingle in the schema.
        /// </summary>
    public partial class EngineeringChangeCategorySingle : global::Microsoft.OData.Client.DataServiceQuerySingle<EngineeringChangeCategory>
    {
        /// <summary>
        /// Initialize a new EngineeringChangeCategorySingle object.
        /// </summary>
        public EngineeringChangeCategorySingle(global::Microsoft.OData.Client.DataServiceContext context, string path)
            : base(context, path) {}

        /// <summary>
        /// Initialize a new EngineeringChangeCategorySingle object.
        /// </summary>
        public EngineeringChangeCategorySingle(global::Microsoft.OData.Client.DataServiceContext context, string path, bool isComposable)
            : base(context, path, isComposable) {}

        /// <summary>
        /// Initialize a new EngineeringChangeCategorySingle object.
        /// </summary>
        public EngineeringChangeCategorySingle(global::Microsoft.OData.Client.DataServiceQuerySingle<EngineeringChangeCategory> query)
            : base(query) {}

        /// <summary>
        /// There are no comments for EngineeringChangeOrderHeaders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader> EngineeringChangeOrderHeaders
        {
            get
            {
                if (!this.IsComposable)
                {
                    throw new global::System.NotSupportedException("The previous function is not composable.");
                }
                if ((this._EngineeringChangeOrderHeaders == null))
                {
                    this._EngineeringChangeOrderHeaders = Context.CreateQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader>(GetPath("EngineeringChangeOrderHeaders"));
                }
                return this._EngineeringChangeOrderHeaders;
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceQuery<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader> _EngineeringChangeOrderHeaders;
    }
        /// <summary>
        /// There are no comments for EngineeringChangeCategory in the schema.
        /// </summary>
    /// <KeyProperties>
    /// CategoryName
    /// </KeyProperties>
    [global::Microsoft.OData.Client.Key("CategoryName")]
    [global::Microsoft.OData.Client.EntitySet("EngineeringChangeCategories")]
    public partial class EngineeringChangeCategory : global::Microsoft.OData.Client.BaseEntityType, global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Create a new EngineeringChangeCategory object.
        /// </summary>
        /// <param name="categoryName">Initial value of CategoryName.</param>
        /// <param name="sequenceNumber">Initial value of SequenceNumber.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public static EngineeringChangeCategory CreateEngineeringChangeCategory(string categoryName, decimal sequenceNumber)
        {
            EngineeringChangeCategory engineeringChangeCategory = new EngineeringChangeCategory();
            engineeringChangeCategory.CategoryName = categoryName;
            engineeringChangeCategory.SequenceNumber = sequenceNumber;
            return engineeringChangeCategory;
        }
        /// <summary>
        /// There are no comments for Property CategoryName in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                this.OnCategoryNameChanging(value);
                this._CategoryName = value;
                this.OnCategoryNameChanged();
                this.OnPropertyChanged("CategoryName");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private string _CategoryName;
        partial void OnCategoryNameChanging(string value);
        partial void OnCategoryNameChanged();
        /// <summary>
        /// There are no comments for Property SequenceNumber in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual decimal SequenceNumber
        {
            get
            {
                return this._SequenceNumber;
            }
            set
            {
                this.OnSequenceNumberChanging(value);
                this._SequenceNumber = value;
                this.OnSequenceNumberChanged();
                this.OnPropertyChanged("SequenceNumber");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private decimal _SequenceNumber;
        partial void OnSequenceNumberChanging(decimal value);
        partial void OnSequenceNumberChanged();
        /// <summary>
        /// There are no comments for Property EngineeringChangeOrderHeaders in the schema.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public virtual global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader> EngineeringChangeOrderHeaders
        {
            get
            {
                return this._EngineeringChangeOrderHeaders;
            }
            set
            {
                this.OnEngineeringChangeOrderHeadersChanging(value);
                this._EngineeringChangeOrderHeaders = value;
                this.OnEngineeringChangeOrderHeadersChanged();
                this.OnPropertyChanged("EngineeringChangeOrderHeaders");
            }
        }
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        private global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader> _EngineeringChangeOrderHeaders = new global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader>(null, global::Microsoft.OData.Client.TrackingMode.None);
        partial void OnEngineeringChangeOrderHeadersChanging(global::Microsoft.OData.Client.DataServiceCollection<global::Microsoft.Dynamics.DataEntities.EngineeringChangeOrderHeader> value);
        partial void OnEngineeringChangeOrderHeadersChanged();
        /// <summary>
        /// This event is raised when the value of the property is changed
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        /// <summary>
        /// The value of the property is changed
        /// </summary>
        /// <param name="property">property name</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "#VersionNumber#")]
        protected virtual void OnPropertyChanged(string property)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new global::System.ComponentModel.PropertyChangedEventArgs(property));
            }
        }
    }
}
